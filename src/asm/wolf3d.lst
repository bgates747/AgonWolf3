PC     Output      Line
040000             0001   ; macros, macro include files, globals and constants can go here
040000             0002   ; but anything which will generate bytes must go below MOS initialization
040000             0003       ; include "src/asm/agon_api/asm/macros.asm"
040000             0004   
040000             0005   ; MOS INITIALIATION MUST GO HERE BEFORE ANY OTHER CODE
040000             0006       .assume adl=1
040000             0007       .org 0x040000
040000             0008   
040000 C3 E3 C0 04 0009       jp start
040004             0010   
040004 FF FF FF FF 0011       .align 64
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
040040 4D 4F 53    0012       .db "MOS"
040043 00          0013       .db 00h
040044 01          0014       .db 01h
040045             0015   ; END OF MOS INITIALIZATION
040045             0016   
040045             0017   ; include files can go here
040045             0018   	include "src/asm/images.asm"
040045             0001*  ; This file is created by build_91_asm_img_looad.py, do not edit it!
040045             0002*  
040045             0003*  ; cube buffer ids:
040045             0004*  BUF_10_004: equ 0x0100
040045             0005*  BUF_10_009: equ 0x0101
040045             0006*  BUF_10_010: equ 0x0102
040045             0007*  BUF_10_011: equ 0x0103
040045             0008*  BUF_10_012: equ 0x0104
040045             0009*  BUF_10_013: equ 0x0105
040045             0010*  BUF_10_014: equ 0x0106
040045             0011*  BUF_10_015: equ 0x0107
040045             0012*  BUF_10_016: equ 0x0108
040045             0013*  BUF_10_020: equ 0x0109
040045             0014*  BUF_10_024: equ 0x010A
040045             0015*  BUF_10_025: equ 0x010B
040045             0016*  BUF_10_026: equ 0x010C
040045             0017*  BUF_10_027: equ 0x010D
040045             0018*  BUF_10_028: equ 0x010E
040045             0019*  BUF_10_029: equ 0x010F
040045             0020*  BUF_10_032: equ 0x0110
040045             0021*  BUF_10_035: equ 0x0111
040045             0022*  BUF_10_036: equ 0x0112
040045             0023*  BUF_10_037: equ 0x0113
040045             0024*  BUF_10_038: equ 0x0114
040045             0025*  BUF_10_040: equ 0x0115
040045             0026*  BUF_10_042: equ 0x0116
040045             0027*  BUF_10_043: equ 0x0117
040045             0028*  BUF_10_044: equ 0x0118
040045             0029*  BUF_11_004: equ 0x0119
040045             0030*  BUF_11_009: equ 0x011A
040045             0031*  BUF_11_010: equ 0x011B
040045             0032*  BUF_11_011: equ 0x011C
040045             0033*  BUF_11_012: equ 0x011D
040045             0034*  BUF_11_013: equ 0x011E
040045             0035*  BUF_11_014: equ 0x011F
040045             0036*  BUF_11_015: equ 0x0120
040045             0037*  BUF_11_016: equ 0x0121
040045             0038*  BUF_11_020: equ 0x0122
040045             0039*  BUF_11_024: equ 0x0123
040045             0040*  BUF_11_025: equ 0x0124
040045             0041*  BUF_11_026: equ 0x0125
040045             0042*  BUF_11_027: equ 0x0126
040045             0043*  BUF_11_028: equ 0x0127
040045             0044*  BUF_11_029: equ 0x0128
040045             0045*  BUF_11_032: equ 0x0129
040045             0046*  BUF_11_035: equ 0x012A
040045             0047*  BUF_11_036: equ 0x012B
040045             0048*  BUF_11_037: equ 0x012C
040045             0049*  BUF_11_038: equ 0x012D
040045             0050*  BUF_11_040: equ 0x012E
040045             0051*  BUF_11_042: equ 0x012F
040045             0052*  BUF_11_043: equ 0x0130
040045             0053*  BUF_11_044: equ 0x0131
040045             0054*  BUF_12_004: equ 0x0132
040045             0055*  BUF_12_009: equ 0x0133
040045             0056*  BUF_12_010: equ 0x0134
040045             0057*  BUF_12_011: equ 0x0135
040045             0058*  BUF_12_012: equ 0x0136
040045             0059*  BUF_12_013: equ 0x0137
040045             0060*  BUF_12_014: equ 0x0138
040045             0061*  BUF_12_015: equ 0x0139
040045             0062*  BUF_12_016: equ 0x013A
040045             0063*  BUF_12_020: equ 0x013B
040045             0064*  BUF_12_024: equ 0x013C
040045             0065*  BUF_12_025: equ 0x013D
040045             0066*  BUF_12_026: equ 0x013E
040045             0067*  BUF_12_027: equ 0x013F
040045             0068*  BUF_12_028: equ 0x0140
040045             0069*  BUF_12_029: equ 0x0141
040045             0070*  BUF_12_032: equ 0x0142
040045             0071*  BUF_12_035: equ 0x0143
040045             0072*  BUF_12_036: equ 0x0144
040045             0073*  BUF_12_037: equ 0x0145
040045             0074*  BUF_12_038: equ 0x0146
040045             0075*  BUF_12_040: equ 0x0147
040045             0076*  BUF_12_042: equ 0x0148
040045             0077*  BUF_12_043: equ 0x0149
040045             0078*  BUF_12_044: equ 0x014A
040045             0079*  BUF_13_004: equ 0x014B
040045             0080*  BUF_13_009: equ 0x014C
040045             0081*  BUF_13_010: equ 0x014D
040045             0082*  BUF_13_011: equ 0x014E
040045             0083*  BUF_13_012: equ 0x014F
040045             0084*  BUF_13_013: equ 0x0150
040045             0085*  BUF_13_014: equ 0x0151
040045             0086*  BUF_13_015: equ 0x0152
040045             0087*  BUF_13_016: equ 0x0153
040045             0088*  BUF_13_020: equ 0x0154
040045             0089*  BUF_13_024: equ 0x0155
040045             0090*  BUF_13_025: equ 0x0156
040045             0091*  BUF_13_026: equ 0x0157
040045             0092*  BUF_13_027: equ 0x0158
040045             0093*  BUF_13_028: equ 0x0159
040045             0094*  BUF_13_029: equ 0x015A
040045             0095*  BUF_13_032: equ 0x015B
040045             0096*  BUF_13_035: equ 0x015C
040045             0097*  BUF_13_036: equ 0x015D
040045             0098*  BUF_13_037: equ 0x015E
040045             0099*  BUF_13_038: equ 0x015F
040045             0100*  BUF_13_040: equ 0x0160
040045             0101*  BUF_13_042: equ 0x0161
040045             0102*  BUF_13_043: equ 0x0162
040045             0103*  BUF_13_044: equ 0x0163
040045             0104*  BUF_14_004: equ 0x0164
040045             0105*  BUF_14_009: equ 0x0165
040045             0106*  BUF_14_010: equ 0x0166
040045             0107*  BUF_14_011: equ 0x0167
040045             0108*  BUF_14_012: equ 0x0168
040045             0109*  BUF_14_013: equ 0x0169
040045             0110*  BUF_14_014: equ 0x016A
040045             0111*  BUF_14_015: equ 0x016B
040045             0112*  BUF_14_016: equ 0x016C
040045             0113*  BUF_14_020: equ 0x016D
040045             0114*  BUF_14_024: equ 0x016E
040045             0115*  BUF_14_025: equ 0x016F
040045             0116*  BUF_14_026: equ 0x0170
040045             0117*  BUF_14_027: equ 0x0171
040045             0118*  BUF_14_028: equ 0x0172
040045             0119*  BUF_14_029: equ 0x0173
040045             0120*  BUF_14_032: equ 0x0174
040045             0121*  BUF_14_035: equ 0x0175
040045             0122*  BUF_14_036: equ 0x0176
040045             0123*  BUF_14_037: equ 0x0177
040045             0124*  BUF_14_038: equ 0x0178
040045             0125*  BUF_14_040: equ 0x0179
040045             0126*  BUF_14_042: equ 0x017A
040045             0127*  BUF_14_043: equ 0x017B
040045             0128*  BUF_14_044: equ 0x017C
040045             0129*  BUF_15_004: equ 0x017D
040045             0130*  BUF_15_009: equ 0x017E
040045             0131*  BUF_15_010: equ 0x017F
040045             0132*  BUF_15_011: equ 0x0180
040045             0133*  BUF_15_012: equ 0x0181
040045             0134*  BUF_15_013: equ 0x0182
040045             0135*  BUF_15_014: equ 0x0183
040045             0136*  BUF_15_015: equ 0x0184
040045             0137*  BUF_15_016: equ 0x0185
040045             0138*  BUF_15_020: equ 0x0186
040045             0139*  BUF_15_024: equ 0x0187
040045             0140*  BUF_15_025: equ 0x0188
040045             0141*  BUF_15_026: equ 0x0189
040045             0142*  BUF_15_027: equ 0x018A
040045             0143*  BUF_15_028: equ 0x018B
040045             0144*  BUF_15_029: equ 0x018C
040045             0145*  BUF_15_032: equ 0x018D
040045             0146*  BUF_15_035: equ 0x018E
040045             0147*  BUF_15_036: equ 0x018F
040045             0148*  BUF_15_037: equ 0x0190
040045             0149*  BUF_15_038: equ 0x0191
040045             0150*  BUF_15_040: equ 0x0192
040045             0151*  BUF_15_042: equ 0x0193
040045             0152*  BUF_15_043: equ 0x0194
040045             0153*  BUF_15_044: equ 0x0195
040045             0154*  BUF_16_004: equ 0x0196
040045             0155*  BUF_16_009: equ 0x0197
040045             0156*  BUF_16_010: equ 0x0198
040045             0157*  BUF_16_011: equ 0x0199
040045             0158*  BUF_16_012: equ 0x019A
040045             0159*  BUF_16_013: equ 0x019B
040045             0160*  BUF_16_014: equ 0x019C
040045             0161*  BUF_16_015: equ 0x019D
040045             0162*  BUF_16_016: equ 0x019E
040045             0163*  BUF_16_020: equ 0x019F
040045             0164*  BUF_16_024: equ 0x01A0
040045             0165*  BUF_16_025: equ 0x01A1
040045             0166*  BUF_16_026: equ 0x01A2
040045             0167*  BUF_16_027: equ 0x01A3
040045             0168*  BUF_16_028: equ 0x01A4
040045             0169*  BUF_16_029: equ 0x01A5
040045             0170*  BUF_16_032: equ 0x01A6
040045             0171*  BUF_16_035: equ 0x01A7
040045             0172*  BUF_16_036: equ 0x01A8
040045             0173*  BUF_16_037: equ 0x01A9
040045             0174*  BUF_16_038: equ 0x01AA
040045             0175*  BUF_16_040: equ 0x01AB
040045             0176*  BUF_16_042: equ 0x01AC
040045             0177*  BUF_16_043: equ 0x01AD
040045             0178*  BUF_16_044: equ 0x01AE
040045             0179*  BUF_17_004: equ 0x01AF
040045             0180*  BUF_17_009: equ 0x01B0
040045             0181*  BUF_17_010: equ 0x01B1
040045             0182*  BUF_17_011: equ 0x01B2
040045             0183*  BUF_17_012: equ 0x01B3
040045             0184*  BUF_17_013: equ 0x01B4
040045             0185*  BUF_17_014: equ 0x01B5
040045             0186*  BUF_17_015: equ 0x01B6
040045             0187*  BUF_17_016: equ 0x01B7
040045             0188*  BUF_17_020: equ 0x01B8
040045             0189*  BUF_17_024: equ 0x01B9
040045             0190*  BUF_17_025: equ 0x01BA
040045             0191*  BUF_17_026: equ 0x01BB
040045             0192*  BUF_17_027: equ 0x01BC
040045             0193*  BUF_17_028: equ 0x01BD
040045             0194*  BUF_17_029: equ 0x01BE
040045             0195*  BUF_17_032: equ 0x01BF
040045             0196*  BUF_17_035: equ 0x01C0
040045             0197*  BUF_17_036: equ 0x01C1
040045             0198*  BUF_17_037: equ 0x01C2
040045             0199*  BUF_17_038: equ 0x01C3
040045             0200*  BUF_17_040: equ 0x01C4
040045             0201*  BUF_17_042: equ 0x01C5
040045             0202*  BUF_17_043: equ 0x01C6
040045             0203*  BUF_17_044: equ 0x01C7
040045             0204*  BUF_57_004: equ 0x01C8
040045             0205*  BUF_57_009: equ 0x01C9
040045             0206*  BUF_57_010: equ 0x01CA
040045             0207*  BUF_57_011: equ 0x01CB
040045             0208*  BUF_57_012: equ 0x01CC
040045             0209*  BUF_57_013: equ 0x01CD
040045             0210*  BUF_57_014: equ 0x01CE
040045             0211*  BUF_57_015: equ 0x01CF
040045             0212*  BUF_57_016: equ 0x01D0
040045             0213*  BUF_57_020: equ 0x01D1
040045             0214*  BUF_57_024: equ 0x01D2
040045             0215*  BUF_57_025: equ 0x01D3
040045             0216*  BUF_57_026: equ 0x01D4
040045             0217*  BUF_57_027: equ 0x01D5
040045             0218*  BUF_57_028: equ 0x01D6
040045             0219*  BUF_57_029: equ 0x01D7
040045             0220*  BUF_57_032: equ 0x01D8
040045             0221*  BUF_57_035: equ 0x01D9
040045             0222*  BUF_57_036: equ 0x01DA
040045             0223*  BUF_57_037: equ 0x01DB
040045             0224*  BUF_57_038: equ 0x01DC
040045             0225*  BUF_57_040: equ 0x01DD
040045             0226*  BUF_57_042: equ 0x01DE
040045             0227*  BUF_57_043: equ 0x01DF
040045             0228*  BUF_57_044: equ 0x01E0
040045             0229*  BUF_58_004: equ 0x01E1
040045             0230*  BUF_58_009: equ 0x01E2
040045             0231*  BUF_58_010: equ 0x01E3
040045             0232*  BUF_58_011: equ 0x01E4
040045             0233*  BUF_58_012: equ 0x01E5
040045             0234*  BUF_58_013: equ 0x01E6
040045             0235*  BUF_58_014: equ 0x01E7
040045             0236*  BUF_58_015: equ 0x01E8
040045             0237*  BUF_58_016: equ 0x01E9
040045             0238*  BUF_58_020: equ 0x01EA
040045             0239*  BUF_58_024: equ 0x01EB
040045             0240*  BUF_58_025: equ 0x01EC
040045             0241*  BUF_58_026: equ 0x01ED
040045             0242*  BUF_58_027: equ 0x01EE
040045             0243*  BUF_58_028: equ 0x01EF
040045             0244*  BUF_58_029: equ 0x01F0
040045             0245*  BUF_58_032: equ 0x01F1
040045             0246*  BUF_58_035: equ 0x01F2
040045             0247*  BUF_58_036: equ 0x01F3
040045             0248*  BUF_58_037: equ 0x01F4
040045             0249*  BUF_58_038: equ 0x01F5
040045             0250*  BUF_58_040: equ 0x01F6
040045             0251*  BUF_58_042: equ 0x01F7
040045             0252*  BUF_58_043: equ 0x01F8
040045             0253*  BUF_58_044: equ 0x01F9
040045             0254*  BUF_59_004: equ 0x01FA
040045             0255*  BUF_59_009: equ 0x01FB
040045             0256*  BUF_59_010: equ 0x01FC
040045             0257*  BUF_59_011: equ 0x01FD
040045             0258*  BUF_59_012: equ 0x01FE
040045             0259*  BUF_59_013: equ 0x01FF
040045             0260*  BUF_59_014: equ 0x0200
040045             0261*  BUF_59_015: equ 0x0201
040045             0262*  BUF_59_016: equ 0x0202
040045             0263*  BUF_59_020: equ 0x0203
040045             0264*  BUF_59_024: equ 0x0204
040045             0265*  BUF_59_025: equ 0x0205
040045             0266*  BUF_59_026: equ 0x0206
040045             0267*  BUF_59_027: equ 0x0207
040045             0268*  BUF_59_028: equ 0x0208
040045             0269*  BUF_59_029: equ 0x0209
040045             0270*  BUF_59_032: equ 0x020A
040045             0271*  BUF_59_035: equ 0x020B
040045             0272*  BUF_59_036: equ 0x020C
040045             0273*  BUF_59_037: equ 0x020D
040045             0274*  BUF_59_038: equ 0x020E
040045             0275*  BUF_59_040: equ 0x020F
040045             0276*  BUF_59_042: equ 0x0210
040045             0277*  BUF_59_043: equ 0x0211
040045             0278*  BUF_59_044: equ 0x0212
040045             0279*  
040045             0280*  cube_num_panels: equ 275
040045             0281*  
040045             0282*  ; cube buffer id reverse lookup:
040045             0283*  cube_buffer_id_lut:
040045 00 01 00    0284*  	dl BUF_10_004
040048 01 01 00    0285*  	dl BUF_10_009
04004B 02 01 00    0286*  	dl BUF_10_010
04004E 03 01 00    0287*  	dl BUF_10_011
040051 04 01 00    0288*  	dl BUF_10_012
040054 05 01 00    0289*  	dl BUF_10_013
040057 06 01 00    0290*  	dl BUF_10_014
04005A 07 01 00    0291*  	dl BUF_10_015
04005D 08 01 00    0292*  	dl BUF_10_016
040060 09 01 00    0293*  	dl BUF_10_020
040063 0A 01 00    0294*  	dl BUF_10_024
040066 0B 01 00    0295*  	dl BUF_10_025
040069 0C 01 00    0296*  	dl BUF_10_026
04006C 0D 01 00    0297*  	dl BUF_10_027
04006F 0E 01 00    0298*  	dl BUF_10_028
040072 0F 01 00    0299*  	dl BUF_10_029
040075 10 01 00    0300*  	dl BUF_10_032
040078 11 01 00    0301*  	dl BUF_10_035
04007B 12 01 00    0302*  	dl BUF_10_036
04007E 13 01 00    0303*  	dl BUF_10_037
040081 14 01 00    0304*  	dl BUF_10_038
040084 15 01 00    0305*  	dl BUF_10_040
040087 16 01 00    0306*  	dl BUF_10_042
04008A 17 01 00    0307*  	dl BUF_10_043
04008D 18 01 00    0308*  	dl BUF_10_044
040090 19 01 00    0309*  	dl BUF_11_004
040093 1A 01 00    0310*  	dl BUF_11_009
040096 1B 01 00    0311*  	dl BUF_11_010
040099 1C 01 00    0312*  	dl BUF_11_011
04009C 1D 01 00    0313*  	dl BUF_11_012
04009F 1E 01 00    0314*  	dl BUF_11_013
0400A2 1F 01 00    0315*  	dl BUF_11_014
0400A5 20 01 00    0316*  	dl BUF_11_015
0400A8 21 01 00    0317*  	dl BUF_11_016
0400AB 22 01 00    0318*  	dl BUF_11_020
0400AE 23 01 00    0319*  	dl BUF_11_024
0400B1 24 01 00    0320*  	dl BUF_11_025
0400B4 25 01 00    0321*  	dl BUF_11_026
0400B7 26 01 00    0322*  	dl BUF_11_027
0400BA 27 01 00    0323*  	dl BUF_11_028
0400BD 28 01 00    0324*  	dl BUF_11_029
0400C0 29 01 00    0325*  	dl BUF_11_032
0400C3 2A 01 00    0326*  	dl BUF_11_035
0400C6 2B 01 00    0327*  	dl BUF_11_036
0400C9 2C 01 00    0328*  	dl BUF_11_037
0400CC 2D 01 00    0329*  	dl BUF_11_038
0400CF 2E 01 00    0330*  	dl BUF_11_040
0400D2 2F 01 00    0331*  	dl BUF_11_042
0400D5 30 01 00    0332*  	dl BUF_11_043
0400D8 31 01 00    0333*  	dl BUF_11_044
0400DB 32 01 00    0334*  	dl BUF_12_004
0400DE 33 01 00    0335*  	dl BUF_12_009
0400E1 34 01 00    0336*  	dl BUF_12_010
0400E4 35 01 00    0337*  	dl BUF_12_011
0400E7 36 01 00    0338*  	dl BUF_12_012
0400EA 37 01 00    0339*  	dl BUF_12_013
0400ED 38 01 00    0340*  	dl BUF_12_014
0400F0 39 01 00    0341*  	dl BUF_12_015
0400F3 3A 01 00    0342*  	dl BUF_12_016
0400F6 3B 01 00    0343*  	dl BUF_12_020
0400F9 3C 01 00    0344*  	dl BUF_12_024
0400FC 3D 01 00    0345*  	dl BUF_12_025
0400FF 3E 01 00    0346*  	dl BUF_12_026
040102 3F 01 00    0347*  	dl BUF_12_027
040105 40 01 00    0348*  	dl BUF_12_028
040108 41 01 00    0349*  	dl BUF_12_029
04010B 42 01 00    0350*  	dl BUF_12_032
04010E 43 01 00    0351*  	dl BUF_12_035
040111 44 01 00    0352*  	dl BUF_12_036
040114 45 01 00    0353*  	dl BUF_12_037
040117 46 01 00    0354*  	dl BUF_12_038
04011A 47 01 00    0355*  	dl BUF_12_040
04011D 48 01 00    0356*  	dl BUF_12_042
040120 49 01 00    0357*  	dl BUF_12_043
040123 4A 01 00    0358*  	dl BUF_12_044
040126 4B 01 00    0359*  	dl BUF_13_004
040129 4C 01 00    0360*  	dl BUF_13_009
04012C 4D 01 00    0361*  	dl BUF_13_010
04012F 4E 01 00    0362*  	dl BUF_13_011
040132 4F 01 00    0363*  	dl BUF_13_012
040135 50 01 00    0364*  	dl BUF_13_013
040138 51 01 00    0365*  	dl BUF_13_014
04013B 52 01 00    0366*  	dl BUF_13_015
04013E 53 01 00    0367*  	dl BUF_13_016
040141 54 01 00    0368*  	dl BUF_13_020
040144 55 01 00    0369*  	dl BUF_13_024
040147 56 01 00    0370*  	dl BUF_13_025
04014A 57 01 00    0371*  	dl BUF_13_026
04014D 58 01 00    0372*  	dl BUF_13_027
040150 59 01 00    0373*  	dl BUF_13_028
040153 5A 01 00    0374*  	dl BUF_13_029
040156 5B 01 00    0375*  	dl BUF_13_032
040159 5C 01 00    0376*  	dl BUF_13_035
04015C 5D 01 00    0377*  	dl BUF_13_036
04015F 5E 01 00    0378*  	dl BUF_13_037
040162 5F 01 00    0379*  	dl BUF_13_038
040165 60 01 00    0380*  	dl BUF_13_040
040168 61 01 00    0381*  	dl BUF_13_042
04016B 62 01 00    0382*  	dl BUF_13_043
04016E 63 01 00    0383*  	dl BUF_13_044
040171 64 01 00    0384*  	dl BUF_14_004
040174 65 01 00    0385*  	dl BUF_14_009
040177 66 01 00    0386*  	dl BUF_14_010
04017A 67 01 00    0387*  	dl BUF_14_011
04017D 68 01 00    0388*  	dl BUF_14_012
040180 69 01 00    0389*  	dl BUF_14_013
040183 6A 01 00    0390*  	dl BUF_14_014
040186 6B 01 00    0391*  	dl BUF_14_015
040189 6C 01 00    0392*  	dl BUF_14_016
04018C 6D 01 00    0393*  	dl BUF_14_020
04018F 6E 01 00    0394*  	dl BUF_14_024
040192 6F 01 00    0395*  	dl BUF_14_025
040195 70 01 00    0396*  	dl BUF_14_026
040198 71 01 00    0397*  	dl BUF_14_027
04019B 72 01 00    0398*  	dl BUF_14_028
04019E 73 01 00    0399*  	dl BUF_14_029
0401A1 74 01 00    0400*  	dl BUF_14_032
0401A4 75 01 00    0401*  	dl BUF_14_035
0401A7 76 01 00    0402*  	dl BUF_14_036
0401AA 77 01 00    0403*  	dl BUF_14_037
0401AD 78 01 00    0404*  	dl BUF_14_038
0401B0 79 01 00    0405*  	dl BUF_14_040
0401B3 7A 01 00    0406*  	dl BUF_14_042
0401B6 7B 01 00    0407*  	dl BUF_14_043
0401B9 7C 01 00    0408*  	dl BUF_14_044
0401BC 7D 01 00    0409*  	dl BUF_15_004
0401BF 7E 01 00    0410*  	dl BUF_15_009
0401C2 7F 01 00    0411*  	dl BUF_15_010
0401C5 80 01 00    0412*  	dl BUF_15_011
0401C8 81 01 00    0413*  	dl BUF_15_012
0401CB 82 01 00    0414*  	dl BUF_15_013
0401CE 83 01 00    0415*  	dl BUF_15_014
0401D1 84 01 00    0416*  	dl BUF_15_015
0401D4 85 01 00    0417*  	dl BUF_15_016
0401D7 86 01 00    0418*  	dl BUF_15_020
0401DA 87 01 00    0419*  	dl BUF_15_024
0401DD 88 01 00    0420*  	dl BUF_15_025
0401E0 89 01 00    0421*  	dl BUF_15_026
0401E3 8A 01 00    0422*  	dl BUF_15_027
0401E6 8B 01 00    0423*  	dl BUF_15_028
0401E9 8C 01 00    0424*  	dl BUF_15_029
0401EC 8D 01 00    0425*  	dl BUF_15_032
0401EF 8E 01 00    0426*  	dl BUF_15_035
0401F2 8F 01 00    0427*  	dl BUF_15_036
0401F5 90 01 00    0428*  	dl BUF_15_037
0401F8 91 01 00    0429*  	dl BUF_15_038
0401FB 92 01 00    0430*  	dl BUF_15_040
0401FE 93 01 00    0431*  	dl BUF_15_042
040201 94 01 00    0432*  	dl BUF_15_043
040204 95 01 00    0433*  	dl BUF_15_044
040207 96 01 00    0434*  	dl BUF_16_004
04020A 97 01 00    0435*  	dl BUF_16_009
04020D 98 01 00    0436*  	dl BUF_16_010
040210 99 01 00    0437*  	dl BUF_16_011
040213 9A 01 00    0438*  	dl BUF_16_012
040216 9B 01 00    0439*  	dl BUF_16_013
040219 9C 01 00    0440*  	dl BUF_16_014
04021C 9D 01 00    0441*  	dl BUF_16_015
04021F 9E 01 00    0442*  	dl BUF_16_016
040222 9F 01 00    0443*  	dl BUF_16_020
040225 A0 01 00    0444*  	dl BUF_16_024
040228 A1 01 00    0445*  	dl BUF_16_025
04022B A2 01 00    0446*  	dl BUF_16_026
04022E A3 01 00    0447*  	dl BUF_16_027
040231 A4 01 00    0448*  	dl BUF_16_028
040234 A5 01 00    0449*  	dl BUF_16_029
040237 A6 01 00    0450*  	dl BUF_16_032
04023A A7 01 00    0451*  	dl BUF_16_035
04023D A8 01 00    0452*  	dl BUF_16_036
040240 A9 01 00    0453*  	dl BUF_16_037
040243 AA 01 00    0454*  	dl BUF_16_038
040246 AB 01 00    0455*  	dl BUF_16_040
040249 AC 01 00    0456*  	dl BUF_16_042
04024C AD 01 00    0457*  	dl BUF_16_043
04024F AE 01 00    0458*  	dl BUF_16_044
040252 AF 01 00    0459*  	dl BUF_17_004
040255 B0 01 00    0460*  	dl BUF_17_009
040258 B1 01 00    0461*  	dl BUF_17_010
04025B B2 01 00    0462*  	dl BUF_17_011
04025E B3 01 00    0463*  	dl BUF_17_012
040261 B4 01 00    0464*  	dl BUF_17_013
040264 B5 01 00    0465*  	dl BUF_17_014
040267 B6 01 00    0466*  	dl BUF_17_015
04026A B7 01 00    0467*  	dl BUF_17_016
04026D B8 01 00    0468*  	dl BUF_17_020
040270 B9 01 00    0469*  	dl BUF_17_024
040273 BA 01 00    0470*  	dl BUF_17_025
040276 BB 01 00    0471*  	dl BUF_17_026
040279 BC 01 00    0472*  	dl BUF_17_027
04027C BD 01 00    0473*  	dl BUF_17_028
04027F BE 01 00    0474*  	dl BUF_17_029
040282 BF 01 00    0475*  	dl BUF_17_032
040285 C0 01 00    0476*  	dl BUF_17_035
040288 C1 01 00    0477*  	dl BUF_17_036
04028B C2 01 00    0478*  	dl BUF_17_037
04028E C3 01 00    0479*  	dl BUF_17_038
040291 C4 01 00    0480*  	dl BUF_17_040
040294 C5 01 00    0481*  	dl BUF_17_042
040297 C6 01 00    0482*  	dl BUF_17_043
04029A C7 01 00    0483*  	dl BUF_17_044
04029D C8 01 00    0484*  	dl BUF_57_004
0402A0 C9 01 00    0485*  	dl BUF_57_009
0402A3 CA 01 00    0486*  	dl BUF_57_010
0402A6 CB 01 00    0487*  	dl BUF_57_011
0402A9 CC 01 00    0488*  	dl BUF_57_012
0402AC CD 01 00    0489*  	dl BUF_57_013
0402AF CE 01 00    0490*  	dl BUF_57_014
0402B2 CF 01 00    0491*  	dl BUF_57_015
0402B5 D0 01 00    0492*  	dl BUF_57_016
0402B8 D1 01 00    0493*  	dl BUF_57_020
0402BB D2 01 00    0494*  	dl BUF_57_024
0402BE D3 01 00    0495*  	dl BUF_57_025
0402C1 D4 01 00    0496*  	dl BUF_57_026
0402C4 D5 01 00    0497*  	dl BUF_57_027
0402C7 D6 01 00    0498*  	dl BUF_57_028
0402CA D7 01 00    0499*  	dl BUF_57_029
0402CD D8 01 00    0500*  	dl BUF_57_032
0402D0 D9 01 00    0501*  	dl BUF_57_035
0402D3 DA 01 00    0502*  	dl BUF_57_036
0402D6 DB 01 00    0503*  	dl BUF_57_037
0402D9 DC 01 00    0504*  	dl BUF_57_038
0402DC DD 01 00    0505*  	dl BUF_57_040
0402DF DE 01 00    0506*  	dl BUF_57_042
0402E2 DF 01 00    0507*  	dl BUF_57_043
0402E5 E0 01 00    0508*  	dl BUF_57_044
0402E8 E1 01 00    0509*  	dl BUF_58_004
0402EB E2 01 00    0510*  	dl BUF_58_009
0402EE E3 01 00    0511*  	dl BUF_58_010
0402F1 E4 01 00    0512*  	dl BUF_58_011
0402F4 E5 01 00    0513*  	dl BUF_58_012
0402F7 E6 01 00    0514*  	dl BUF_58_013
0402FA E7 01 00    0515*  	dl BUF_58_014
0402FD E8 01 00    0516*  	dl BUF_58_015
040300 E9 01 00    0517*  	dl BUF_58_016
040303 EA 01 00    0518*  	dl BUF_58_020
040306 EB 01 00    0519*  	dl BUF_58_024
040309 EC 01 00    0520*  	dl BUF_58_025
04030C ED 01 00    0521*  	dl BUF_58_026
04030F EE 01 00    0522*  	dl BUF_58_027
040312 EF 01 00    0523*  	dl BUF_58_028
040315 F0 01 00    0524*  	dl BUF_58_029
040318 F1 01 00    0525*  	dl BUF_58_032
04031B F2 01 00    0526*  	dl BUF_58_035
04031E F3 01 00    0527*  	dl BUF_58_036
040321 F4 01 00    0528*  	dl BUF_58_037
040324 F5 01 00    0529*  	dl BUF_58_038
040327 F6 01 00    0530*  	dl BUF_58_040
04032A F7 01 00    0531*  	dl BUF_58_042
04032D F8 01 00    0532*  	dl BUF_58_043
040330 F9 01 00    0533*  	dl BUF_58_044
040333 FA 01 00    0534*  	dl BUF_59_004
040336 FB 01 00    0535*  	dl BUF_59_009
040339 FC 01 00    0536*  	dl BUF_59_010
04033C FD 01 00    0537*  	dl BUF_59_011
04033F FE 01 00    0538*  	dl BUF_59_012
040342 FF 01 00    0539*  	dl BUF_59_013
040345 00 02 00    0540*  	dl BUF_59_014
040348 01 02 00    0541*  	dl BUF_59_015
04034B 02 02 00    0542*  	dl BUF_59_016
04034E 03 02 00    0543*  	dl BUF_59_020
040351 04 02 00    0544*  	dl BUF_59_024
040354 05 02 00    0545*  	dl BUF_59_025
040357 06 02 00    0546*  	dl BUF_59_026
04035A 07 02 00    0547*  	dl BUF_59_027
04035D 08 02 00    0548*  	dl BUF_59_028
040360 09 02 00    0549*  	dl BUF_59_029
040363 0A 02 00    0550*  	dl BUF_59_032
040366 0B 02 00    0551*  	dl BUF_59_035
040369 0C 02 00    0552*  	dl BUF_59_036
04036C 0D 02 00    0553*  	dl BUF_59_037
04036F 0E 02 00    0554*  	dl BUF_59_038
040372 0F 02 00    0555*  	dl BUF_59_040
040375 10 02 00    0556*  	dl BUF_59_042
040378 11 02 00    0557*  	dl BUF_59_043
04037B 12 02 00    0558*  	dl BUF_59_044
04037E             0559*  
04037E             0560*  ; cube load routines jump table:
04037E             0561*  cube_load_panels_table:
04037E B7 06 04    0562*  	dl ld_10_004
040381 E1 06 04    0563*  	dl ld_10_009
040384 0B 07 04    0564*  	dl ld_10_010
040387 35 07 04    0565*  	dl ld_10_011
04038A 5F 07 04    0566*  	dl ld_10_012
04038D 89 07 04    0567*  	dl ld_10_013
040390 B3 07 04    0568*  	dl ld_10_014
040393 DD 07 04    0569*  	dl ld_10_015
040396 07 08 04    0570*  	dl ld_10_016
040399 31 08 04    0571*  	dl ld_10_020
04039C 5B 08 04    0572*  	dl ld_10_024
04039F 85 08 04    0573*  	dl ld_10_025
0403A2 AF 08 04    0574*  	dl ld_10_026
0403A5 D9 08 04    0575*  	dl ld_10_027
0403A8 03 09 04    0576*  	dl ld_10_028
0403AB 2D 09 04    0577*  	dl ld_10_029
0403AE 57 09 04    0578*  	dl ld_10_032
0403B1 81 09 04    0579*  	dl ld_10_035
0403B4 AB 09 04    0580*  	dl ld_10_036
0403B7 D5 09 04    0581*  	dl ld_10_037
0403BA FF 09 04    0582*  	dl ld_10_038
0403BD 29 0A 04    0583*  	dl ld_10_040
0403C0 53 0A 04    0584*  	dl ld_10_042
0403C3 7D 0A 04    0585*  	dl ld_10_043
0403C6 A7 0A 04    0586*  	dl ld_10_044
0403C9 D1 0A 04    0587*  	dl ld_11_004
0403CC FB 0A 04    0588*  	dl ld_11_009
0403CF 25 0B 04    0589*  	dl ld_11_010
0403D2 4F 0B 04    0590*  	dl ld_11_011
0403D5 79 0B 04    0591*  	dl ld_11_012
0403D8 A3 0B 04    0592*  	dl ld_11_013
0403DB CD 0B 04    0593*  	dl ld_11_014
0403DE F7 0B 04    0594*  	dl ld_11_015
0403E1 21 0C 04    0595*  	dl ld_11_016
0403E4 4B 0C 04    0596*  	dl ld_11_020
0403E7 75 0C 04    0597*  	dl ld_11_024
0403EA 9F 0C 04    0598*  	dl ld_11_025
0403ED C9 0C 04    0599*  	dl ld_11_026
0403F0 F3 0C 04    0600*  	dl ld_11_027
0403F3 1D 0D 04    0601*  	dl ld_11_028
0403F6 47 0D 04    0602*  	dl ld_11_029
0403F9 71 0D 04    0603*  	dl ld_11_032
0403FC 9B 0D 04    0604*  	dl ld_11_035
0403FF C5 0D 04    0605*  	dl ld_11_036
040402 EF 0D 04    0606*  	dl ld_11_037
040405 19 0E 04    0607*  	dl ld_11_038
040408 43 0E 04    0608*  	dl ld_11_040
04040B 6D 0E 04    0609*  	dl ld_11_042
04040E 97 0E 04    0610*  	dl ld_11_043
040411 C1 0E 04    0611*  	dl ld_11_044
040414 EB 0E 04    0612*  	dl ld_12_004
040417 15 0F 04    0613*  	dl ld_12_009
04041A 3F 0F 04    0614*  	dl ld_12_010
04041D 69 0F 04    0615*  	dl ld_12_011
040420 93 0F 04    0616*  	dl ld_12_012
040423 BD 0F 04    0617*  	dl ld_12_013
040426 E7 0F 04    0618*  	dl ld_12_014
040429 11 10 04    0619*  	dl ld_12_015
04042C 3B 10 04    0620*  	dl ld_12_016
04042F 65 10 04    0621*  	dl ld_12_020
040432 8F 10 04    0622*  	dl ld_12_024
040435 B9 10 04    0623*  	dl ld_12_025
040438 E3 10 04    0624*  	dl ld_12_026
04043B 0D 11 04    0625*  	dl ld_12_027
04043E 37 11 04    0626*  	dl ld_12_028
040441 61 11 04    0627*  	dl ld_12_029
040444 8B 11 04    0628*  	dl ld_12_032
040447 B5 11 04    0629*  	dl ld_12_035
04044A DF 11 04    0630*  	dl ld_12_036
04044D 09 12 04    0631*  	dl ld_12_037
040450 33 12 04    0632*  	dl ld_12_038
040453 5D 12 04    0633*  	dl ld_12_040
040456 87 12 04    0634*  	dl ld_12_042
040459 B1 12 04    0635*  	dl ld_12_043
04045C DB 12 04    0636*  	dl ld_12_044
04045F 05 13 04    0637*  	dl ld_13_004
040462 2F 13 04    0638*  	dl ld_13_009
040465 59 13 04    0639*  	dl ld_13_010
040468 83 13 04    0640*  	dl ld_13_011
04046B AD 13 04    0641*  	dl ld_13_012
04046E D7 13 04    0642*  	dl ld_13_013
040471 01 14 04    0643*  	dl ld_13_014
040474 2B 14 04    0644*  	dl ld_13_015
040477 55 14 04    0645*  	dl ld_13_016
04047A 7F 14 04    0646*  	dl ld_13_020
04047D A9 14 04    0647*  	dl ld_13_024
040480 D3 14 04    0648*  	dl ld_13_025
040483 FD 14 04    0649*  	dl ld_13_026
040486 27 15 04    0650*  	dl ld_13_027
040489 51 15 04    0651*  	dl ld_13_028
04048C 7B 15 04    0652*  	dl ld_13_029
04048F A5 15 04    0653*  	dl ld_13_032
040492 CF 15 04    0654*  	dl ld_13_035
040495 F9 15 04    0655*  	dl ld_13_036
040498 23 16 04    0656*  	dl ld_13_037
04049B 4D 16 04    0657*  	dl ld_13_038
04049E 77 16 04    0658*  	dl ld_13_040
0404A1 A1 16 04    0659*  	dl ld_13_042
0404A4 CB 16 04    0660*  	dl ld_13_043
0404A7 F5 16 04    0661*  	dl ld_13_044
0404AA 1F 17 04    0662*  	dl ld_14_004
0404AD 49 17 04    0663*  	dl ld_14_009
0404B0 73 17 04    0664*  	dl ld_14_010
0404B3 9D 17 04    0665*  	dl ld_14_011
0404B6 C7 17 04    0666*  	dl ld_14_012
0404B9 F1 17 04    0667*  	dl ld_14_013
0404BC 1B 18 04    0668*  	dl ld_14_014
0404BF 45 18 04    0669*  	dl ld_14_015
0404C2 6F 18 04    0670*  	dl ld_14_016
0404C5 99 18 04    0671*  	dl ld_14_020
0404C8 C3 18 04    0672*  	dl ld_14_024
0404CB ED 18 04    0673*  	dl ld_14_025
0404CE 17 19 04    0674*  	dl ld_14_026
0404D1 41 19 04    0675*  	dl ld_14_027
0404D4 6B 19 04    0676*  	dl ld_14_028
0404D7 95 19 04    0677*  	dl ld_14_029
0404DA BF 19 04    0678*  	dl ld_14_032
0404DD E9 19 04    0679*  	dl ld_14_035
0404E0 13 1A 04    0680*  	dl ld_14_036
0404E3 3D 1A 04    0681*  	dl ld_14_037
0404E6 67 1A 04    0682*  	dl ld_14_038
0404E9 91 1A 04    0683*  	dl ld_14_040
0404EC BB 1A 04    0684*  	dl ld_14_042
0404EF E5 1A 04    0685*  	dl ld_14_043
0404F2 0F 1B 04    0686*  	dl ld_14_044
0404F5 39 1B 04    0687*  	dl ld_15_004
0404F8 63 1B 04    0688*  	dl ld_15_009
0404FB 8D 1B 04    0689*  	dl ld_15_010
0404FE B7 1B 04    0690*  	dl ld_15_011
040501 E1 1B 04    0691*  	dl ld_15_012
040504 0B 1C 04    0692*  	dl ld_15_013
040507 35 1C 04    0693*  	dl ld_15_014
04050A 5F 1C 04    0694*  	dl ld_15_015
04050D 89 1C 04    0695*  	dl ld_15_016
040510 B3 1C 04    0696*  	dl ld_15_020
040513 DD 1C 04    0697*  	dl ld_15_024
040516 07 1D 04    0698*  	dl ld_15_025
040519 31 1D 04    0699*  	dl ld_15_026
04051C 5B 1D 04    0700*  	dl ld_15_027
04051F 85 1D 04    0701*  	dl ld_15_028
040522 AF 1D 04    0702*  	dl ld_15_029
040525 D9 1D 04    0703*  	dl ld_15_032
040528 03 1E 04    0704*  	dl ld_15_035
04052B 2D 1E 04    0705*  	dl ld_15_036
04052E 57 1E 04    0706*  	dl ld_15_037
040531 81 1E 04    0707*  	dl ld_15_038
040534 AB 1E 04    0708*  	dl ld_15_040
040537 D5 1E 04    0709*  	dl ld_15_042
04053A FF 1E 04    0710*  	dl ld_15_043
04053D 29 1F 04    0711*  	dl ld_15_044
040540 53 1F 04    0712*  	dl ld_16_004
040543 7D 1F 04    0713*  	dl ld_16_009
040546 A7 1F 04    0714*  	dl ld_16_010
040549 D1 1F 04    0715*  	dl ld_16_011
04054C FB 1F 04    0716*  	dl ld_16_012
04054F 25 20 04    0717*  	dl ld_16_013
040552 4F 20 04    0718*  	dl ld_16_014
040555 79 20 04    0719*  	dl ld_16_015
040558 A3 20 04    0720*  	dl ld_16_016
04055B CD 20 04    0721*  	dl ld_16_020
04055E F7 20 04    0722*  	dl ld_16_024
040561 21 21 04    0723*  	dl ld_16_025
040564 4B 21 04    0724*  	dl ld_16_026
040567 75 21 04    0725*  	dl ld_16_027
04056A 9F 21 04    0726*  	dl ld_16_028
04056D C9 21 04    0727*  	dl ld_16_029
040570 F3 21 04    0728*  	dl ld_16_032
040573 1D 22 04    0729*  	dl ld_16_035
040576 47 22 04    0730*  	dl ld_16_036
040579 71 22 04    0731*  	dl ld_16_037
04057C 9B 22 04    0732*  	dl ld_16_038
04057F C5 22 04    0733*  	dl ld_16_040
040582 EF 22 04    0734*  	dl ld_16_042
040585 19 23 04    0735*  	dl ld_16_043
040588 43 23 04    0736*  	dl ld_16_044
04058B 6D 23 04    0737*  	dl ld_17_004
04058E 97 23 04    0738*  	dl ld_17_009
040591 C1 23 04    0739*  	dl ld_17_010
040594 EB 23 04    0740*  	dl ld_17_011
040597 15 24 04    0741*  	dl ld_17_012
04059A 3F 24 04    0742*  	dl ld_17_013
04059D 69 24 04    0743*  	dl ld_17_014
0405A0 93 24 04    0744*  	dl ld_17_015
0405A3 BD 24 04    0745*  	dl ld_17_016
0405A6 E7 24 04    0746*  	dl ld_17_020
0405A9 11 25 04    0747*  	dl ld_17_024
0405AC 3B 25 04    0748*  	dl ld_17_025
0405AF 65 25 04    0749*  	dl ld_17_026
0405B2 8F 25 04    0750*  	dl ld_17_027
0405B5 B9 25 04    0751*  	dl ld_17_028
0405B8 E3 25 04    0752*  	dl ld_17_029
0405BB 0D 26 04    0753*  	dl ld_17_032
0405BE 37 26 04    0754*  	dl ld_17_035
0405C1 61 26 04    0755*  	dl ld_17_036
0405C4 8B 26 04    0756*  	dl ld_17_037
0405C7 B5 26 04    0757*  	dl ld_17_038
0405CA DF 26 04    0758*  	dl ld_17_040
0405CD 09 27 04    0759*  	dl ld_17_042
0405D0 33 27 04    0760*  	dl ld_17_043
0405D3 5D 27 04    0761*  	dl ld_17_044
0405D6 87 27 04    0762*  	dl ld_57_004
0405D9 B1 27 04    0763*  	dl ld_57_009
0405DC DB 27 04    0764*  	dl ld_57_010
0405DF 05 28 04    0765*  	dl ld_57_011
0405E2 2F 28 04    0766*  	dl ld_57_012
0405E5 59 28 04    0767*  	dl ld_57_013
0405E8 83 28 04    0768*  	dl ld_57_014
0405EB AD 28 04    0769*  	dl ld_57_015
0405EE D7 28 04    0770*  	dl ld_57_016
0405F1 01 29 04    0771*  	dl ld_57_020
0405F4 2B 29 04    0772*  	dl ld_57_024
0405F7 55 29 04    0773*  	dl ld_57_025
0405FA 7F 29 04    0774*  	dl ld_57_026
0405FD A9 29 04    0775*  	dl ld_57_027
040600 D3 29 04    0776*  	dl ld_57_028
040603 FD 29 04    0777*  	dl ld_57_029
040606 27 2A 04    0778*  	dl ld_57_032
040609 51 2A 04    0779*  	dl ld_57_035
04060C 7B 2A 04    0780*  	dl ld_57_036
04060F A5 2A 04    0781*  	dl ld_57_037
040612 CF 2A 04    0782*  	dl ld_57_038
040615 F9 2A 04    0783*  	dl ld_57_040
040618 23 2B 04    0784*  	dl ld_57_042
04061B 4D 2B 04    0785*  	dl ld_57_043
04061E 77 2B 04    0786*  	dl ld_57_044
040621 A1 2B 04    0787*  	dl ld_58_004
040624 CB 2B 04    0788*  	dl ld_58_009
040627 F5 2B 04    0789*  	dl ld_58_010
04062A 1F 2C 04    0790*  	dl ld_58_011
04062D 49 2C 04    0791*  	dl ld_58_012
040630 73 2C 04    0792*  	dl ld_58_013
040633 9D 2C 04    0793*  	dl ld_58_014
040636 C7 2C 04    0794*  	dl ld_58_015
040639 F1 2C 04    0795*  	dl ld_58_016
04063C 1B 2D 04    0796*  	dl ld_58_020
04063F 45 2D 04    0797*  	dl ld_58_024
040642 6F 2D 04    0798*  	dl ld_58_025
040645 99 2D 04    0799*  	dl ld_58_026
040648 C3 2D 04    0800*  	dl ld_58_027
04064B ED 2D 04    0801*  	dl ld_58_028
04064E 17 2E 04    0802*  	dl ld_58_029
040651 41 2E 04    0803*  	dl ld_58_032
040654 6B 2E 04    0804*  	dl ld_58_035
040657 95 2E 04    0805*  	dl ld_58_036
04065A BF 2E 04    0806*  	dl ld_58_037
04065D E9 2E 04    0807*  	dl ld_58_038
040660 13 2F 04    0808*  	dl ld_58_040
040663 3D 2F 04    0809*  	dl ld_58_042
040666 67 2F 04    0810*  	dl ld_58_043
040669 91 2F 04    0811*  	dl ld_58_044
04066C BB 2F 04    0812*  	dl ld_59_004
04066F E5 2F 04    0813*  	dl ld_59_009
040672 0F 30 04    0814*  	dl ld_59_010
040675 39 30 04    0815*  	dl ld_59_011
040678 63 30 04    0816*  	dl ld_59_012
04067B 8D 30 04    0817*  	dl ld_59_013
04067E B7 30 04    0818*  	dl ld_59_014
040681 E1 30 04    0819*  	dl ld_59_015
040684 0B 31 04    0820*  	dl ld_59_016
040687 35 31 04    0821*  	dl ld_59_020
04068A 5F 31 04    0822*  	dl ld_59_024
04068D 89 31 04    0823*  	dl ld_59_025
040690 B3 31 04    0824*  	dl ld_59_026
040693 DD 31 04    0825*  	dl ld_59_027
040696 07 32 04    0826*  	dl ld_59_028
040699 31 32 04    0827*  	dl ld_59_029
04069C 5B 32 04    0828*  	dl ld_59_032
04069F 85 32 04    0829*  	dl ld_59_035
0406A2 AF 32 04    0830*  	dl ld_59_036
0406A5 D9 32 04    0831*  	dl ld_59_037
0406A8 03 33 04    0832*  	dl ld_59_038
0406AB 2D 33 04    0833*  	dl ld_59_040
0406AE 57 33 04    0834*  	dl ld_59_042
0406B1 81 33 04    0835*  	dl ld_59_043
0406B4 AB 33 04    0836*  	dl ld_59_044
0406B7             0837*  
0406B7             0838*  ; Import cube .rgba2 bitmap files and load them into VDP buffers
0406B7             0839*  
0406B7             0840*  ld_10_004:
0406B7 21 D5 33 04 0841*  	ld hl,F10_004
0406BB 22 3A B5 04 0842*  	ld (cur_filename),hl
0406BF 11 C5 C2 04 0843*  	ld de,filedata
0406C3 01 00 00 01 0844*  	ld bc,65536
0406C7 3E 01       0845*  	ld a,mos_load
0406C9 5B CF       0846*  	RST.LIL 08h
0406CB 21 00 01 00 0847*  	ld hl,BUF_10_004
0406CF 01 24 00 00 0848*  	ld bc,36
0406D3 11 23 00 00 0849*  	ld de,35
0406D7 DD 21 EC 04 0850*  	ld ix,1260
       00          
0406DC CD A5 B6 04 0851*  	call vdu_load_img
0406E0 C9          0852*  	ret
0406E1             0853*  
0406E1             0854*  ld_10_009:
0406E1 21 E9 33 04 0855*  	ld hl,F10_009
0406E5 22 3A B5 04 0856*  	ld (cur_filename),hl
0406E9 11 C5 C2 04 0857*  	ld de,filedata
0406ED 01 00 00 01 0858*  	ld bc,65536
0406F1 3E 01       0859*  	ld a,mos_load
0406F3 5B CF       0860*  	RST.LIL 08h
0406F5 21 01 01 00 0861*  	ld hl,BUF_10_009
0406F9 01 23 00 00 0862*  	ld bc,35
0406FD 11 2D 00 00 0863*  	ld de,45
040701 DD 21 27 06 0864*  	ld ix,1575
       00          
040706 CD A5 B6 04 0865*  	call vdu_load_img
04070A C9          0866*  	ret
04070B             0867*  
04070B             0868*  ld_10_010:
04070B 21 FD 33 04 0869*  	ld hl,F10_010
04070F 22 3A B5 04 0870*  	ld (cur_filename),hl
040713 11 C5 C2 04 0871*  	ld de,filedata
040717 01 00 00 01 0872*  	ld bc,65536
04071B 3E 01       0873*  	ld a,mos_load
04071D 5B CF       0874*  	RST.LIL 08h
04071F 21 02 01 00 0875*  	ld hl,BUF_10_010
040723 01 19 00 00 0876*  	ld bc,25
040727 11 2D 00 00 0877*  	ld de,45
04072B DD 21 65 04 0878*  	ld ix,1125
       00          
040730 CD A5 B6 04 0879*  	call vdu_load_img
040734 C9          0880*  	ret
040735             0881*  
040735             0882*  ld_10_011:
040735 21 11 34 04 0883*  	ld hl,F10_011
040739 22 3A B5 04 0884*  	ld (cur_filename),hl
04073D 11 C5 C2 04 0885*  	ld de,filedata
040741 01 00 00 01 0886*  	ld bc,65536
040745 3E 01       0887*  	ld a,mos_load
040747 5B CF       0888*  	RST.LIL 08h
040749 21 03 01 00 0889*  	ld hl,BUF_10_011
04074D 01 0F 00 00 0890*  	ld bc,15
040751 11 2D 00 00 0891*  	ld de,45
040755 DD 21 A3 02 0892*  	ld ix,675
       00          
04075A CD A5 B6 04 0893*  	call vdu_load_img
04075E C9          0894*  	ret
04075F             0895*  
04075F             0896*  ld_10_012:
04075F 21 25 34 04 0897*  	ld hl,F10_012
040763 22 3A B5 04 0898*  	ld (cur_filename),hl
040767 11 C5 C2 04 0899*  	ld de,filedata
04076B 01 00 00 01 0900*  	ld bc,65536
04076F 3E 01       0901*  	ld a,mos_load
040771 5B CF       0902*  	RST.LIL 08h
040773 21 04 01 00 0903*  	ld hl,BUF_10_012
040777 01 05 00 00 0904*  	ld bc,5
04077B 11 2D 00 00 0905*  	ld de,45
04077F DD 21 E1 00 0906*  	ld ix,225
       00          
040784 CD A5 B6 04 0907*  	call vdu_load_img
040788 C9          0908*  	ret
040789             0909*  
040789             0910*  ld_10_013:
040789 21 39 34 04 0911*  	ld hl,F10_013
04078D 22 3A B5 04 0912*  	ld (cur_filename),hl
040791 11 C5 C2 04 0913*  	ld de,filedata
040795 01 00 00 01 0914*  	ld bc,65536
040799 3E 01       0915*  	ld a,mos_load
04079B 5B CF       0916*  	RST.LIL 08h
04079D 21 05 01 00 0917*  	ld hl,BUF_10_013
0407A1 01 05 00 00 0918*  	ld bc,5
0407A5 11 2B 00 00 0919*  	ld de,43
0407A9 DD 21 D7 00 0920*  	ld ix,215
       00          
0407AE CD A5 B6 04 0921*  	call vdu_load_img
0407B2 C9          0922*  	ret
0407B3             0923*  
0407B3             0924*  ld_10_014:
0407B3 21 4D 34 04 0925*  	ld hl,F10_014
0407B7 22 3A B5 04 0926*  	ld (cur_filename),hl
0407BB 11 C5 C2 04 0927*  	ld de,filedata
0407BF 01 00 00 01 0928*  	ld bc,65536
0407C3 3E 01       0929*  	ld a,mos_load
0407C5 5B CF       0930*  	RST.LIL 08h
0407C7 21 06 01 00 0931*  	ld hl,BUF_10_014
0407CB 01 0F 00 00 0932*  	ld bc,15
0407CF 11 2D 00 00 0933*  	ld de,45
0407D3 DD 21 A3 02 0934*  	ld ix,675
       00          
0407D8 CD A5 B6 04 0935*  	call vdu_load_img
0407DC C9          0936*  	ret
0407DD             0937*  
0407DD             0938*  ld_10_015:
0407DD 21 61 34 04 0939*  	ld hl,F10_015
0407E1 22 3A B5 04 0940*  	ld (cur_filename),hl
0407E5 11 C5 C2 04 0941*  	ld de,filedata
0407E9 01 00 00 01 0942*  	ld bc,65536
0407ED 3E 01       0943*  	ld a,mos_load
0407EF 5B CF       0944*  	RST.LIL 08h
0407F1 21 07 01 00 0945*  	ld hl,BUF_10_015
0407F5 01 19 00 00 0946*  	ld bc,25
0407F9 11 2D 00 00 0947*  	ld de,45
0407FD DD 21 65 04 0948*  	ld ix,1125
       00          
040802 CD A5 B6 04 0949*  	call vdu_load_img
040806 C9          0950*  	ret
040807             0951*  
040807             0952*  ld_10_016:
040807 21 75 34 04 0953*  	ld hl,F10_016
04080B 22 3A B5 04 0954*  	ld (cur_filename),hl
04080F 11 C5 C2 04 0955*  	ld de,filedata
040813 01 00 00 01 0956*  	ld bc,65536
040817 3E 01       0957*  	ld a,mos_load
040819 5B CF       0958*  	RST.LIL 08h
04081B 21 08 01 00 0959*  	ld hl,BUF_10_016
04081F 01 23 00 00 0960*  	ld bc,35
040823 11 2D 00 00 0961*  	ld de,45
040827 DD 21 27 06 0962*  	ld ix,1575
       00          
04082C CD A5 B6 04 0963*  	call vdu_load_img
040830 C9          0964*  	ret
040831             0965*  
040831             0966*  ld_10_020:
040831 21 89 34 04 0967*  	ld hl,F10_020
040835 22 3A B5 04 0968*  	ld (cur_filename),hl
040839 11 C5 C2 04 0969*  	ld de,filedata
04083D 01 00 00 01 0970*  	ld bc,65536
040841 3E 01       0971*  	ld a,mos_load
040843 5B CF       0972*  	RST.LIL 08h
040845 21 09 01 00 0973*  	ld hl,BUF_10_020
040849 01 2E 00 00 0974*  	ld bc,46
04084D 11 2D 00 00 0975*  	ld de,45
040851 DD 21 16 08 0976*  	ld ix,2070
       00          
040856 CD A5 B6 04 0977*  	call vdu_load_img
04085A C9          0978*  	ret
04085B             0979*  
04085B             0980*  ld_10_024:
04085B 21 9D 34 04 0981*  	ld hl,F10_024
04085F 22 3A B5 04 0982*  	ld (cur_filename),hl
040863 11 C5 C2 04 0983*  	ld de,filedata
040867 01 00 00 01 0984*  	ld bc,65536
04086B 3E 01       0985*  	ld a,mos_load
04086D 5B CF       0986*  	RST.LIL 08h
04086F 21 0A 01 00 0987*  	ld hl,BUF_10_024
040873 01 2E 00 00 0988*  	ld bc,46
040877 11 40 00 00 0989*  	ld de,64
04087B DD 21 80 0B 0990*  	ld ix,2944
       00          
040880 CD A5 B6 04 0991*  	call vdu_load_img
040884 C9          0992*  	ret
040885             0993*  
040885             0994*  ld_10_025:
040885 21 B1 34 04 0995*  	ld hl,F10_025
040889 22 3A B5 04 0996*  	ld (cur_filename),hl
04088D 11 C5 C2 04 0997*  	ld de,filedata
040891 01 00 00 01 0998*  	ld bc,65536
040895 3E 01       0999*  	ld a,mos_load
040897 5B CF       1000*  	RST.LIL 08h
040899 21 0B 01 00 1001*  	ld hl,BUF_10_025
04089D 01 1C 00 00 1002*  	ld bc,28
0408A1 11 40 00 00 1003*  	ld de,64
0408A5 DD 21 00 07 1004*  	ld ix,1792
       00          
0408AA CD A5 B6 04 1005*  	call vdu_load_img
0408AE C9          1006*  	ret
0408AF             1007*  
0408AF             1008*  ld_10_026:
0408AF 21 C5 34 04 1009*  	ld hl,F10_026
0408B3 22 3A B5 04 1010*  	ld (cur_filename),hl
0408B7 11 C5 C2 04 1011*  	ld de,filedata
0408BB 01 00 00 01 1012*  	ld bc,65536
0408BF 3E 01       1013*  	ld a,mos_load
0408C1 5B CF       1014*  	RST.LIL 08h
0408C3 21 0C 01 00 1015*  	ld hl,BUF_10_026
0408C7 01 09 00 00 1016*  	ld bc,9
0408CB 11 40 00 00 1017*  	ld de,64
0408CF DD 21 40 02 1018*  	ld ix,576
       00          
0408D4 CD A5 B6 04 1019*  	call vdu_load_img
0408D8 C9          1020*  	ret
0408D9             1021*  
0408D9             1022*  ld_10_027:
0408D9 21 D9 34 04 1023*  	ld hl,F10_027
0408DD 22 3A B5 04 1024*  	ld (cur_filename),hl
0408E1 11 C5 C2 04 1025*  	ld de,filedata
0408E5 01 00 00 01 1026*  	ld bc,65536
0408E9 3E 01       1027*  	ld a,mos_load
0408EB 5B CF       1028*  	RST.LIL 08h
0408ED 21 0D 01 00 1029*  	ld hl,BUF_10_027
0408F1 01 0A 00 00 1030*  	ld bc,10
0408F5 11 3E 00 00 1031*  	ld de,62
0408F9 DD 21 6C 02 1032*  	ld ix,620
       00          
0408FE CD A5 B6 04 1033*  	call vdu_load_img
040902 C9          1034*  	ret
040903             1035*  
040903             1036*  ld_10_028:
040903 21 ED 34 04 1037*  	ld hl,F10_028
040907 22 3A B5 04 1038*  	ld (cur_filename),hl
04090B 11 C5 C2 04 1039*  	ld de,filedata
04090F 01 00 00 01 1040*  	ld bc,65536
040913 3E 01       1041*  	ld a,mos_load
040915 5B CF       1042*  	RST.LIL 08h
040917 21 0E 01 00 1043*  	ld hl,BUF_10_028
04091B 01 1C 00 00 1044*  	ld bc,28
04091F 11 40 00 00 1045*  	ld de,64
040923 DD 21 00 07 1046*  	ld ix,1792
       00          
040928 CD A5 B6 04 1047*  	call vdu_load_img
04092C C9          1048*  	ret
04092D             1049*  
04092D             1050*  ld_10_029:
04092D 21 01 35 04 1051*  	ld hl,F10_029
040931 22 3A B5 04 1052*  	ld (cur_filename),hl
040935 11 C5 C2 04 1053*  	ld de,filedata
040939 01 00 00 01 1054*  	ld bc,65536
04093D 3E 01       1055*  	ld a,mos_load
04093F 5B CF       1056*  	RST.LIL 08h
040941 21 0F 01 00 1057*  	ld hl,BUF_10_029
040945 01 2F 00 00 1058*  	ld bc,47
040949 11 40 00 00 1059*  	ld de,64
04094D DD 21 C0 0B 1060*  	ld ix,3008
       00          
040952 CD A5 B6 04 1061*  	call vdu_load_img
040956 C9          1062*  	ret
040957             1063*  
040957             1064*  ld_10_032:
040957 21 15 35 04 1065*  	ld hl,F10_032
04095B 22 3A B5 04 1066*  	ld (cur_filename),hl
04095F 11 C5 C2 04 1067*  	ld de,filedata
040963 01 00 00 01 1068*  	ld bc,65536
040967 3E 01       1069*  	ld a,mos_load
040969 5B CF       1070*  	RST.LIL 08h
04096B 21 10 01 00 1071*  	ld hl,BUF_10_032
04096F 01 41 00 00 1072*  	ld bc,65
040973 11 40 00 00 1073*  	ld de,64
040977 DD 21 40 10 1074*  	ld ix,4160
       00          
04097C CD A5 B6 04 1075*  	call vdu_load_img
040980 C9          1076*  	ret
040981             1077*  
040981             1078*  ld_10_035:
040981 21 29 35 04 1079*  	ld hl,F10_035
040985 22 3A B5 04 1080*  	ld (cur_filename),hl
040989 11 C5 C2 04 1081*  	ld de,filedata
04098D 01 00 00 01 1082*  	ld bc,65536
040991 3E 01       1083*  	ld a,mos_load
040993 5B CF       1084*  	RST.LIL 08h
040995 21 11 01 00 1085*  	ld hl,BUF_10_035
040999 01 3F 00 00 1086*  	ld bc,63
04099D 11 6B 00 00 1087*  	ld de,107
0409A1 DD 21 55 1A 1088*  	ld ix,6741
       00          
0409A6 CD A5 B6 04 1089*  	call vdu_load_img
0409AA C9          1090*  	ret
0409AB             1091*  
0409AB             1092*  ld_10_036:
0409AB 21 3D 35 04 1093*  	ld hl,F10_036
0409AF 22 3A B5 04 1094*  	ld (cur_filename),hl
0409B3 11 C5 C2 04 1095*  	ld de,filedata
0409B7 01 00 00 01 1096*  	ld bc,65536
0409BB 3E 01       1097*  	ld a,mos_load
0409BD 5B CF       1098*  	RST.LIL 08h
0409BF 21 12 01 00 1099*  	ld hl,BUF_10_036
0409C3 01 16 00 00 1100*  	ld bc,22
0409C7 11 6B 00 00 1101*  	ld de,107
0409CB DD 21 32 09 1102*  	ld ix,2354
       00          
0409D0 CD A5 B6 04 1103*  	call vdu_load_img
0409D4 C9          1104*  	ret
0409D5             1105*  
0409D5             1106*  ld_10_037:
0409D5 21 51 35 04 1107*  	ld hl,F10_037
0409D9 22 3A B5 04 1108*  	ld (cur_filename),hl
0409DD 11 C5 C2 04 1109*  	ld de,filedata
0409E1 01 00 00 01 1110*  	ld bc,65536
0409E5 3E 01       1111*  	ld a,mos_load
0409E7 5B CF       1112*  	RST.LIL 08h
0409E9 21 13 01 00 1113*  	ld hl,BUF_10_037
0409ED 01 15 00 00 1114*  	ld bc,21
0409F1 11 69 00 00 1115*  	ld de,105
0409F5 DD 21 9D 08 1116*  	ld ix,2205
       00          
0409FA CD A5 B6 04 1117*  	call vdu_load_img
0409FE C9          1118*  	ret
0409FF             1119*  
0409FF             1120*  ld_10_038:
0409FF 21 65 35 04 1121*  	ld hl,F10_038
040A03 22 3A B5 04 1122*  	ld (cur_filename),hl
040A07 11 C5 C2 04 1123*  	ld de,filedata
040A0B 01 00 00 01 1124*  	ld bc,65536
040A0F 3E 01       1125*  	ld a,mos_load
040A11 5B CF       1126*  	RST.LIL 08h
040A13 21 14 01 00 1127*  	ld hl,BUF_10_038
040A17 01 3F 00 00 1128*  	ld bc,63
040A1B 11 6B 00 00 1129*  	ld de,107
040A1F DD 21 55 1A 1130*  	ld ix,6741
       00          
040A24 CD A5 B6 04 1131*  	call vdu_load_img
040A28 C9          1132*  	ret
040A29             1133*  
040A29             1134*  ld_10_040:
040A29 21 79 35 04 1135*  	ld hl,F10_040
040A2D 22 3A B5 04 1136*  	ld (cur_filename),hl
040A31 11 C5 C2 04 1137*  	ld de,filedata
040A35 01 00 00 01 1138*  	ld bc,65536
040A39 3E 01       1139*  	ld a,mos_load
040A3B 5B CF       1140*  	RST.LIL 08h
040A3D 21 15 01 00 1141*  	ld hl,BUF_10_040
040A41 01 6C 00 00 1142*  	ld bc,108
040A45 11 6B 00 00 1143*  	ld de,107
040A49 DD 21 24 2D 1144*  	ld ix,11556
       00          
040A4E CD A5 B6 04 1145*  	call vdu_load_img
040A52 C9          1146*  	ret
040A53             1147*  
040A53             1148*  ld_10_042:
040A53 21 8D 35 04 1149*  	ld hl,F10_042
040A57 22 3A B5 04 1150*  	ld (cur_filename),hl
040A5B 11 C5 C2 04 1151*  	ld de,filedata
040A5F 01 00 00 01 1152*  	ld bc,65536
040A63 3E 01       1153*  	ld a,mos_load
040A65 5B CF       1154*  	RST.LIL 08h
040A67 21 16 01 00 1155*  	ld hl,BUF_10_042
040A6B 01 6A 00 00 1156*  	ld bc,106
040A6F 11 A0 00 00 1157*  	ld de,160
040A73 DD 21 40 42 1158*  	ld ix,16960
       00          
040A78 CD A5 B6 04 1159*  	call vdu_load_img
040A7C C9          1160*  	ret
040A7D             1161*  
040A7D             1162*  ld_10_043:
040A7D 21 A1 35 04 1163*  	ld hl,F10_043
040A81 22 3A B5 04 1164*  	ld (cur_filename),hl
040A85 11 C5 C2 04 1165*  	ld de,filedata
040A89 01 00 00 01 1166*  	ld bc,65536
040A8D 3E 01       1167*  	ld a,mos_load
040A8F 5B CF       1168*  	RST.LIL 08h
040A91 21 17 01 00 1169*  	ld hl,BUF_10_043
040A95 01 6B 00 00 1170*  	ld bc,107
040A99 11 A0 00 00 1171*  	ld de,160
040A9D DD 21 E0 42 1172*  	ld ix,17120
       00          
040AA2 CD A5 B6 04 1173*  	call vdu_load_img
040AA6 C9          1174*  	ret
040AA7             1175*  
040AA7             1176*  ld_10_044:
040AA7 21 B5 35 04 1177*  	ld hl,F10_044
040AAB 22 3A B5 04 1178*  	ld (cur_filename),hl
040AAF 11 C5 C2 04 1179*  	ld de,filedata
040AB3 01 00 00 01 1180*  	ld bc,65536
040AB7 3E 01       1181*  	ld a,mos_load
040AB9 5B CF       1182*  	RST.LIL 08h
040ABB 21 18 01 00 1183*  	ld hl,BUF_10_044
040ABF 01 40 01 00 1184*  	ld bc,320
040AC3 11 A0 00 00 1185*  	ld de,160
040AC7 DD 21 00 C8 1186*  	ld ix,51200
       00          
040ACC CD A5 B6 04 1187*  	call vdu_load_img
040AD0 C9          1188*  	ret
040AD1             1189*  
040AD1             1190*  ld_11_004:
040AD1 21 C9 35 04 1191*  	ld hl,F11_004
040AD5 22 3A B5 04 1192*  	ld (cur_filename),hl
040AD9 11 C5 C2 04 1193*  	ld de,filedata
040ADD 01 00 00 01 1194*  	ld bc,65536
040AE1 3E 01       1195*  	ld a,mos_load
040AE3 5B CF       1196*  	RST.LIL 08h
040AE5 21 19 01 00 1197*  	ld hl,BUF_11_004
040AE9 01 24 00 00 1198*  	ld bc,36
040AED 11 23 00 00 1199*  	ld de,35
040AF1 DD 21 EC 04 1200*  	ld ix,1260
       00          
040AF6 CD A5 B6 04 1201*  	call vdu_load_img
040AFA C9          1202*  	ret
040AFB             1203*  
040AFB             1204*  ld_11_009:
040AFB 21 DD 35 04 1205*  	ld hl,F11_009
040AFF 22 3A B5 04 1206*  	ld (cur_filename),hl
040B03 11 C5 C2 04 1207*  	ld de,filedata
040B07 01 00 00 01 1208*  	ld bc,65536
040B0B 3E 01       1209*  	ld a,mos_load
040B0D 5B CF       1210*  	RST.LIL 08h
040B0F 21 1A 01 00 1211*  	ld hl,BUF_11_009
040B13 01 23 00 00 1212*  	ld bc,35
040B17 11 2D 00 00 1213*  	ld de,45
040B1B DD 21 27 06 1214*  	ld ix,1575
       00          
040B20 CD A5 B6 04 1215*  	call vdu_load_img
040B24 C9          1216*  	ret
040B25             1217*  
040B25             1218*  ld_11_010:
040B25 21 F1 35 04 1219*  	ld hl,F11_010
040B29 22 3A B5 04 1220*  	ld (cur_filename),hl
040B2D 11 C5 C2 04 1221*  	ld de,filedata
040B31 01 00 00 01 1222*  	ld bc,65536
040B35 3E 01       1223*  	ld a,mos_load
040B37 5B CF       1224*  	RST.LIL 08h
040B39 21 1B 01 00 1225*  	ld hl,BUF_11_010
040B3D 01 19 00 00 1226*  	ld bc,25
040B41 11 2D 00 00 1227*  	ld de,45
040B45 DD 21 65 04 1228*  	ld ix,1125
       00          
040B4A CD A5 B6 04 1229*  	call vdu_load_img
040B4E C9          1230*  	ret
040B4F             1231*  
040B4F             1232*  ld_11_011:
040B4F 21 05 36 04 1233*  	ld hl,F11_011
040B53 22 3A B5 04 1234*  	ld (cur_filename),hl
040B57 11 C5 C2 04 1235*  	ld de,filedata
040B5B 01 00 00 01 1236*  	ld bc,65536
040B5F 3E 01       1237*  	ld a,mos_load
040B61 5B CF       1238*  	RST.LIL 08h
040B63 21 1C 01 00 1239*  	ld hl,BUF_11_011
040B67 01 0F 00 00 1240*  	ld bc,15
040B6B 11 2D 00 00 1241*  	ld de,45
040B6F DD 21 A3 02 1242*  	ld ix,675
       00          
040B74 CD A5 B6 04 1243*  	call vdu_load_img
040B78 C9          1244*  	ret
040B79             1245*  
040B79             1246*  ld_11_012:
040B79 21 19 36 04 1247*  	ld hl,F11_012
040B7D 22 3A B5 04 1248*  	ld (cur_filename),hl
040B81 11 C5 C2 04 1249*  	ld de,filedata
040B85 01 00 00 01 1250*  	ld bc,65536
040B89 3E 01       1251*  	ld a,mos_load
040B8B 5B CF       1252*  	RST.LIL 08h
040B8D 21 1D 01 00 1253*  	ld hl,BUF_11_012
040B91 01 05 00 00 1254*  	ld bc,5
040B95 11 2D 00 00 1255*  	ld de,45
040B99 DD 21 E1 00 1256*  	ld ix,225
       00          
040B9E CD A5 B6 04 1257*  	call vdu_load_img
040BA2 C9          1258*  	ret
040BA3             1259*  
040BA3             1260*  ld_11_013:
040BA3 21 2D 36 04 1261*  	ld hl,F11_013
040BA7 22 3A B5 04 1262*  	ld (cur_filename),hl
040BAB 11 C5 C2 04 1263*  	ld de,filedata
040BAF 01 00 00 01 1264*  	ld bc,65536
040BB3 3E 01       1265*  	ld a,mos_load
040BB5 5B CF       1266*  	RST.LIL 08h
040BB7 21 1E 01 00 1267*  	ld hl,BUF_11_013
040BBB 01 05 00 00 1268*  	ld bc,5
040BBF 11 2B 00 00 1269*  	ld de,43
040BC3 DD 21 D7 00 1270*  	ld ix,215
       00          
040BC8 CD A5 B6 04 1271*  	call vdu_load_img
040BCC C9          1272*  	ret
040BCD             1273*  
040BCD             1274*  ld_11_014:
040BCD 21 41 36 04 1275*  	ld hl,F11_014
040BD1 22 3A B5 04 1276*  	ld (cur_filename),hl
040BD5 11 C5 C2 04 1277*  	ld de,filedata
040BD9 01 00 00 01 1278*  	ld bc,65536
040BDD 3E 01       1279*  	ld a,mos_load
040BDF 5B CF       1280*  	RST.LIL 08h
040BE1 21 1F 01 00 1281*  	ld hl,BUF_11_014
040BE5 01 0F 00 00 1282*  	ld bc,15
040BE9 11 2D 00 00 1283*  	ld de,45
040BED DD 21 A3 02 1284*  	ld ix,675
       00          
040BF2 CD A5 B6 04 1285*  	call vdu_load_img
040BF6 C9          1286*  	ret
040BF7             1287*  
040BF7             1288*  ld_11_015:
040BF7 21 55 36 04 1289*  	ld hl,F11_015
040BFB 22 3A B5 04 1290*  	ld (cur_filename),hl
040BFF 11 C5 C2 04 1291*  	ld de,filedata
040C03 01 00 00 01 1292*  	ld bc,65536
040C07 3E 01       1293*  	ld a,mos_load
040C09 5B CF       1294*  	RST.LIL 08h
040C0B 21 20 01 00 1295*  	ld hl,BUF_11_015
040C0F 01 19 00 00 1296*  	ld bc,25
040C13 11 2D 00 00 1297*  	ld de,45
040C17 DD 21 65 04 1298*  	ld ix,1125
       00          
040C1C CD A5 B6 04 1299*  	call vdu_load_img
040C20 C9          1300*  	ret
040C21             1301*  
040C21             1302*  ld_11_016:
040C21 21 69 36 04 1303*  	ld hl,F11_016
040C25 22 3A B5 04 1304*  	ld (cur_filename),hl
040C29 11 C5 C2 04 1305*  	ld de,filedata
040C2D 01 00 00 01 1306*  	ld bc,65536
040C31 3E 01       1307*  	ld a,mos_load
040C33 5B CF       1308*  	RST.LIL 08h
040C35 21 21 01 00 1309*  	ld hl,BUF_11_016
040C39 01 23 00 00 1310*  	ld bc,35
040C3D 11 2D 00 00 1311*  	ld de,45
040C41 DD 21 27 06 1312*  	ld ix,1575
       00          
040C46 CD A5 B6 04 1313*  	call vdu_load_img
040C4A C9          1314*  	ret
040C4B             1315*  
040C4B             1316*  ld_11_020:
040C4B 21 7D 36 04 1317*  	ld hl,F11_020
040C4F 22 3A B5 04 1318*  	ld (cur_filename),hl
040C53 11 C5 C2 04 1319*  	ld de,filedata
040C57 01 00 00 01 1320*  	ld bc,65536
040C5B 3E 01       1321*  	ld a,mos_load
040C5D 5B CF       1322*  	RST.LIL 08h
040C5F 21 22 01 00 1323*  	ld hl,BUF_11_020
040C63 01 2E 00 00 1324*  	ld bc,46
040C67 11 2D 00 00 1325*  	ld de,45
040C6B DD 21 16 08 1326*  	ld ix,2070
       00          
040C70 CD A5 B6 04 1327*  	call vdu_load_img
040C74 C9          1328*  	ret
040C75             1329*  
040C75             1330*  ld_11_024:
040C75 21 91 36 04 1331*  	ld hl,F11_024
040C79 22 3A B5 04 1332*  	ld (cur_filename),hl
040C7D 11 C5 C2 04 1333*  	ld de,filedata
040C81 01 00 00 01 1334*  	ld bc,65536
040C85 3E 01       1335*  	ld a,mos_load
040C87 5B CF       1336*  	RST.LIL 08h
040C89 21 23 01 00 1337*  	ld hl,BUF_11_024
040C8D 01 2E 00 00 1338*  	ld bc,46
040C91 11 40 00 00 1339*  	ld de,64
040C95 DD 21 80 0B 1340*  	ld ix,2944
       00          
040C9A CD A5 B6 04 1341*  	call vdu_load_img
040C9E C9          1342*  	ret
040C9F             1343*  
040C9F             1344*  ld_11_025:
040C9F 21 A5 36 04 1345*  	ld hl,F11_025
040CA3 22 3A B5 04 1346*  	ld (cur_filename),hl
040CA7 11 C5 C2 04 1347*  	ld de,filedata
040CAB 01 00 00 01 1348*  	ld bc,65536
040CAF 3E 01       1349*  	ld a,mos_load
040CB1 5B CF       1350*  	RST.LIL 08h
040CB3 21 24 01 00 1351*  	ld hl,BUF_11_025
040CB7 01 1C 00 00 1352*  	ld bc,28
040CBB 11 40 00 00 1353*  	ld de,64
040CBF DD 21 00 07 1354*  	ld ix,1792
       00          
040CC4 CD A5 B6 04 1355*  	call vdu_load_img
040CC8 C9          1356*  	ret
040CC9             1357*  
040CC9             1358*  ld_11_026:
040CC9 21 B9 36 04 1359*  	ld hl,F11_026
040CCD 22 3A B5 04 1360*  	ld (cur_filename),hl
040CD1 11 C5 C2 04 1361*  	ld de,filedata
040CD5 01 00 00 01 1362*  	ld bc,65536
040CD9 3E 01       1363*  	ld a,mos_load
040CDB 5B CF       1364*  	RST.LIL 08h
040CDD 21 25 01 00 1365*  	ld hl,BUF_11_026
040CE1 01 09 00 00 1366*  	ld bc,9
040CE5 11 40 00 00 1367*  	ld de,64
040CE9 DD 21 40 02 1368*  	ld ix,576
       00          
040CEE CD A5 B6 04 1369*  	call vdu_load_img
040CF2 C9          1370*  	ret
040CF3             1371*  
040CF3             1372*  ld_11_027:
040CF3 21 CD 36 04 1373*  	ld hl,F11_027
040CF7 22 3A B5 04 1374*  	ld (cur_filename),hl
040CFB 11 C5 C2 04 1375*  	ld de,filedata
040CFF 01 00 00 01 1376*  	ld bc,65536
040D03 3E 01       1377*  	ld a,mos_load
040D05 5B CF       1378*  	RST.LIL 08h
040D07 21 26 01 00 1379*  	ld hl,BUF_11_027
040D0B 01 0A 00 00 1380*  	ld bc,10
040D0F 11 3E 00 00 1381*  	ld de,62
040D13 DD 21 6C 02 1382*  	ld ix,620
       00          
040D18 CD A5 B6 04 1383*  	call vdu_load_img
040D1C C9          1384*  	ret
040D1D             1385*  
040D1D             1386*  ld_11_028:
040D1D 21 E1 36 04 1387*  	ld hl,F11_028
040D21 22 3A B5 04 1388*  	ld (cur_filename),hl
040D25 11 C5 C2 04 1389*  	ld de,filedata
040D29 01 00 00 01 1390*  	ld bc,65536
040D2D 3E 01       1391*  	ld a,mos_load
040D2F 5B CF       1392*  	RST.LIL 08h
040D31 21 27 01 00 1393*  	ld hl,BUF_11_028
040D35 01 1C 00 00 1394*  	ld bc,28
040D39 11 40 00 00 1395*  	ld de,64
040D3D DD 21 00 07 1396*  	ld ix,1792
       00          
040D42 CD A5 B6 04 1397*  	call vdu_load_img
040D46 C9          1398*  	ret
040D47             1399*  
040D47             1400*  ld_11_029:
040D47 21 F5 36 04 1401*  	ld hl,F11_029
040D4B 22 3A B5 04 1402*  	ld (cur_filename),hl
040D4F 11 C5 C2 04 1403*  	ld de,filedata
040D53 01 00 00 01 1404*  	ld bc,65536
040D57 3E 01       1405*  	ld a,mos_load
040D59 5B CF       1406*  	RST.LIL 08h
040D5B 21 28 01 00 1407*  	ld hl,BUF_11_029
040D5F 01 2F 00 00 1408*  	ld bc,47
040D63 11 40 00 00 1409*  	ld de,64
040D67 DD 21 C0 0B 1410*  	ld ix,3008
       00          
040D6C CD A5 B6 04 1411*  	call vdu_load_img
040D70 C9          1412*  	ret
040D71             1413*  
040D71             1414*  ld_11_032:
040D71 21 09 37 04 1415*  	ld hl,F11_032
040D75 22 3A B5 04 1416*  	ld (cur_filename),hl
040D79 11 C5 C2 04 1417*  	ld de,filedata
040D7D 01 00 00 01 1418*  	ld bc,65536
040D81 3E 01       1419*  	ld a,mos_load
040D83 5B CF       1420*  	RST.LIL 08h
040D85 21 29 01 00 1421*  	ld hl,BUF_11_032
040D89 01 41 00 00 1422*  	ld bc,65
040D8D 11 40 00 00 1423*  	ld de,64
040D91 DD 21 40 10 1424*  	ld ix,4160
       00          
040D96 CD A5 B6 04 1425*  	call vdu_load_img
040D9A C9          1426*  	ret
040D9B             1427*  
040D9B             1428*  ld_11_035:
040D9B 21 1D 37 04 1429*  	ld hl,F11_035
040D9F 22 3A B5 04 1430*  	ld (cur_filename),hl
040DA3 11 C5 C2 04 1431*  	ld de,filedata
040DA7 01 00 00 01 1432*  	ld bc,65536
040DAB 3E 01       1433*  	ld a,mos_load
040DAD 5B CF       1434*  	RST.LIL 08h
040DAF 21 2A 01 00 1435*  	ld hl,BUF_11_035
040DB3 01 3F 00 00 1436*  	ld bc,63
040DB7 11 6B 00 00 1437*  	ld de,107
040DBB DD 21 55 1A 1438*  	ld ix,6741
       00          
040DC0 CD A5 B6 04 1439*  	call vdu_load_img
040DC4 C9          1440*  	ret
040DC5             1441*  
040DC5             1442*  ld_11_036:
040DC5 21 31 37 04 1443*  	ld hl,F11_036
040DC9 22 3A B5 04 1444*  	ld (cur_filename),hl
040DCD 11 C5 C2 04 1445*  	ld de,filedata
040DD1 01 00 00 01 1446*  	ld bc,65536
040DD5 3E 01       1447*  	ld a,mos_load
040DD7 5B CF       1448*  	RST.LIL 08h
040DD9 21 2B 01 00 1449*  	ld hl,BUF_11_036
040DDD 01 16 00 00 1450*  	ld bc,22
040DE1 11 6B 00 00 1451*  	ld de,107
040DE5 DD 21 32 09 1452*  	ld ix,2354
       00          
040DEA CD A5 B6 04 1453*  	call vdu_load_img
040DEE C9          1454*  	ret
040DEF             1455*  
040DEF             1456*  ld_11_037:
040DEF 21 45 37 04 1457*  	ld hl,F11_037
040DF3 22 3A B5 04 1458*  	ld (cur_filename),hl
040DF7 11 C5 C2 04 1459*  	ld de,filedata
040DFB 01 00 00 01 1460*  	ld bc,65536
040DFF 3E 01       1461*  	ld a,mos_load
040E01 5B CF       1462*  	RST.LIL 08h
040E03 21 2C 01 00 1463*  	ld hl,BUF_11_037
040E07 01 15 00 00 1464*  	ld bc,21
040E0B 11 69 00 00 1465*  	ld de,105
040E0F DD 21 9D 08 1466*  	ld ix,2205
       00          
040E14 CD A5 B6 04 1467*  	call vdu_load_img
040E18 C9          1468*  	ret
040E19             1469*  
040E19             1470*  ld_11_038:
040E19 21 59 37 04 1471*  	ld hl,F11_038
040E1D 22 3A B5 04 1472*  	ld (cur_filename),hl
040E21 11 C5 C2 04 1473*  	ld de,filedata
040E25 01 00 00 01 1474*  	ld bc,65536
040E29 3E 01       1475*  	ld a,mos_load
040E2B 5B CF       1476*  	RST.LIL 08h
040E2D 21 2D 01 00 1477*  	ld hl,BUF_11_038
040E31 01 3F 00 00 1478*  	ld bc,63
040E35 11 6B 00 00 1479*  	ld de,107
040E39 DD 21 55 1A 1480*  	ld ix,6741
       00          
040E3E CD A5 B6 04 1481*  	call vdu_load_img
040E42 C9          1482*  	ret
040E43             1483*  
040E43             1484*  ld_11_040:
040E43 21 6D 37 04 1485*  	ld hl,F11_040
040E47 22 3A B5 04 1486*  	ld (cur_filename),hl
040E4B 11 C5 C2 04 1487*  	ld de,filedata
040E4F 01 00 00 01 1488*  	ld bc,65536
040E53 3E 01       1489*  	ld a,mos_load
040E55 5B CF       1490*  	RST.LIL 08h
040E57 21 2E 01 00 1491*  	ld hl,BUF_11_040
040E5B 01 6C 00 00 1492*  	ld bc,108
040E5F 11 6B 00 00 1493*  	ld de,107
040E63 DD 21 24 2D 1494*  	ld ix,11556
       00          
040E68 CD A5 B6 04 1495*  	call vdu_load_img
040E6C C9          1496*  	ret
040E6D             1497*  
040E6D             1498*  ld_11_042:
040E6D 21 81 37 04 1499*  	ld hl,F11_042
040E71 22 3A B5 04 1500*  	ld (cur_filename),hl
040E75 11 C5 C2 04 1501*  	ld de,filedata
040E79 01 00 00 01 1502*  	ld bc,65536
040E7D 3E 01       1503*  	ld a,mos_load
040E7F 5B CF       1504*  	RST.LIL 08h
040E81 21 2F 01 00 1505*  	ld hl,BUF_11_042
040E85 01 6A 00 00 1506*  	ld bc,106
040E89 11 A0 00 00 1507*  	ld de,160
040E8D DD 21 40 42 1508*  	ld ix,16960
       00          
040E92 CD A5 B6 04 1509*  	call vdu_load_img
040E96 C9          1510*  	ret
040E97             1511*  
040E97             1512*  ld_11_043:
040E97 21 95 37 04 1513*  	ld hl,F11_043
040E9B 22 3A B5 04 1514*  	ld (cur_filename),hl
040E9F 11 C5 C2 04 1515*  	ld de,filedata
040EA3 01 00 00 01 1516*  	ld bc,65536
040EA7 3E 01       1517*  	ld a,mos_load
040EA9 5B CF       1518*  	RST.LIL 08h
040EAB 21 30 01 00 1519*  	ld hl,BUF_11_043
040EAF 01 6B 00 00 1520*  	ld bc,107
040EB3 11 A0 00 00 1521*  	ld de,160
040EB7 DD 21 E0 42 1522*  	ld ix,17120
       00          
040EBC CD A5 B6 04 1523*  	call vdu_load_img
040EC0 C9          1524*  	ret
040EC1             1525*  
040EC1             1526*  ld_11_044:
040EC1 21 A9 37 04 1527*  	ld hl,F11_044
040EC5 22 3A B5 04 1528*  	ld (cur_filename),hl
040EC9 11 C5 C2 04 1529*  	ld de,filedata
040ECD 01 00 00 01 1530*  	ld bc,65536
040ED1 3E 01       1531*  	ld a,mos_load
040ED3 5B CF       1532*  	RST.LIL 08h
040ED5 21 31 01 00 1533*  	ld hl,BUF_11_044
040ED9 01 40 01 00 1534*  	ld bc,320
040EDD 11 A0 00 00 1535*  	ld de,160
040EE1 DD 21 00 C8 1536*  	ld ix,51200
       00          
040EE6 CD A5 B6 04 1537*  	call vdu_load_img
040EEA C9          1538*  	ret
040EEB             1539*  
040EEB             1540*  ld_12_004:
040EEB 21 BD 37 04 1541*  	ld hl,F12_004
040EEF 22 3A B5 04 1542*  	ld (cur_filename),hl
040EF3 11 C5 C2 04 1543*  	ld de,filedata
040EF7 01 00 00 01 1544*  	ld bc,65536
040EFB 3E 01       1545*  	ld a,mos_load
040EFD 5B CF       1546*  	RST.LIL 08h
040EFF 21 32 01 00 1547*  	ld hl,BUF_12_004
040F03 01 24 00 00 1548*  	ld bc,36
040F07 11 23 00 00 1549*  	ld de,35
040F0B DD 21 EC 04 1550*  	ld ix,1260
       00          
040F10 CD A5 B6 04 1551*  	call vdu_load_img
040F14 C9          1552*  	ret
040F15             1553*  
040F15             1554*  ld_12_009:
040F15 21 D1 37 04 1555*  	ld hl,F12_009
040F19 22 3A B5 04 1556*  	ld (cur_filename),hl
040F1D 11 C5 C2 04 1557*  	ld de,filedata
040F21 01 00 00 01 1558*  	ld bc,65536
040F25 3E 01       1559*  	ld a,mos_load
040F27 5B CF       1560*  	RST.LIL 08h
040F29 21 33 01 00 1561*  	ld hl,BUF_12_009
040F2D 01 23 00 00 1562*  	ld bc,35
040F31 11 2D 00 00 1563*  	ld de,45
040F35 DD 21 27 06 1564*  	ld ix,1575
       00          
040F3A CD A5 B6 04 1565*  	call vdu_load_img
040F3E C9          1566*  	ret
040F3F             1567*  
040F3F             1568*  ld_12_010:
040F3F 21 E5 37 04 1569*  	ld hl,F12_010
040F43 22 3A B5 04 1570*  	ld (cur_filename),hl
040F47 11 C5 C2 04 1571*  	ld de,filedata
040F4B 01 00 00 01 1572*  	ld bc,65536
040F4F 3E 01       1573*  	ld a,mos_load
040F51 5B CF       1574*  	RST.LIL 08h
040F53 21 34 01 00 1575*  	ld hl,BUF_12_010
040F57 01 19 00 00 1576*  	ld bc,25
040F5B 11 2D 00 00 1577*  	ld de,45
040F5F DD 21 65 04 1578*  	ld ix,1125
       00          
040F64 CD A5 B6 04 1579*  	call vdu_load_img
040F68 C9          1580*  	ret
040F69             1581*  
040F69             1582*  ld_12_011:
040F69 21 F9 37 04 1583*  	ld hl,F12_011
040F6D 22 3A B5 04 1584*  	ld (cur_filename),hl
040F71 11 C5 C2 04 1585*  	ld de,filedata
040F75 01 00 00 01 1586*  	ld bc,65536
040F79 3E 01       1587*  	ld a,mos_load
040F7B 5B CF       1588*  	RST.LIL 08h
040F7D 21 35 01 00 1589*  	ld hl,BUF_12_011
040F81 01 0F 00 00 1590*  	ld bc,15
040F85 11 2D 00 00 1591*  	ld de,45
040F89 DD 21 A3 02 1592*  	ld ix,675
       00          
040F8E CD A5 B6 04 1593*  	call vdu_load_img
040F92 C9          1594*  	ret
040F93             1595*  
040F93             1596*  ld_12_012:
040F93 21 0D 38 04 1597*  	ld hl,F12_012
040F97 22 3A B5 04 1598*  	ld (cur_filename),hl
040F9B 11 C5 C2 04 1599*  	ld de,filedata
040F9F 01 00 00 01 1600*  	ld bc,65536
040FA3 3E 01       1601*  	ld a,mos_load
040FA5 5B CF       1602*  	RST.LIL 08h
040FA7 21 36 01 00 1603*  	ld hl,BUF_12_012
040FAB 01 05 00 00 1604*  	ld bc,5
040FAF 11 2D 00 00 1605*  	ld de,45
040FB3 DD 21 E1 00 1606*  	ld ix,225
       00          
040FB8 CD A5 B6 04 1607*  	call vdu_load_img
040FBC C9          1608*  	ret
040FBD             1609*  
040FBD             1610*  ld_12_013:
040FBD 21 21 38 04 1611*  	ld hl,F12_013
040FC1 22 3A B5 04 1612*  	ld (cur_filename),hl
040FC5 11 C5 C2 04 1613*  	ld de,filedata
040FC9 01 00 00 01 1614*  	ld bc,65536
040FCD 3E 01       1615*  	ld a,mos_load
040FCF 5B CF       1616*  	RST.LIL 08h
040FD1 21 37 01 00 1617*  	ld hl,BUF_12_013
040FD5 01 05 00 00 1618*  	ld bc,5
040FD9 11 2B 00 00 1619*  	ld de,43
040FDD DD 21 D7 00 1620*  	ld ix,215
       00          
040FE2 CD A5 B6 04 1621*  	call vdu_load_img
040FE6 C9          1622*  	ret
040FE7             1623*  
040FE7             1624*  ld_12_014:
040FE7 21 35 38 04 1625*  	ld hl,F12_014
040FEB 22 3A B5 04 1626*  	ld (cur_filename),hl
040FEF 11 C5 C2 04 1627*  	ld de,filedata
040FF3 01 00 00 01 1628*  	ld bc,65536
040FF7 3E 01       1629*  	ld a,mos_load
040FF9 5B CF       1630*  	RST.LIL 08h
040FFB 21 38 01 00 1631*  	ld hl,BUF_12_014
040FFF 01 0F 00 00 1632*  	ld bc,15
041003 11 2D 00 00 1633*  	ld de,45
041007 DD 21 A3 02 1634*  	ld ix,675
       00          
04100C CD A5 B6 04 1635*  	call vdu_load_img
041010 C9          1636*  	ret
041011             1637*  
041011             1638*  ld_12_015:
041011 21 49 38 04 1639*  	ld hl,F12_015
041015 22 3A B5 04 1640*  	ld (cur_filename),hl
041019 11 C5 C2 04 1641*  	ld de,filedata
04101D 01 00 00 01 1642*  	ld bc,65536
041021 3E 01       1643*  	ld a,mos_load
041023 5B CF       1644*  	RST.LIL 08h
041025 21 39 01 00 1645*  	ld hl,BUF_12_015
041029 01 19 00 00 1646*  	ld bc,25
04102D 11 2D 00 00 1647*  	ld de,45
041031 DD 21 65 04 1648*  	ld ix,1125
       00          
041036 CD A5 B6 04 1649*  	call vdu_load_img
04103A C9          1650*  	ret
04103B             1651*  
04103B             1652*  ld_12_016:
04103B 21 5D 38 04 1653*  	ld hl,F12_016
04103F 22 3A B5 04 1654*  	ld (cur_filename),hl
041043 11 C5 C2 04 1655*  	ld de,filedata
041047 01 00 00 01 1656*  	ld bc,65536
04104B 3E 01       1657*  	ld a,mos_load
04104D 5B CF       1658*  	RST.LIL 08h
04104F 21 3A 01 00 1659*  	ld hl,BUF_12_016
041053 01 23 00 00 1660*  	ld bc,35
041057 11 2D 00 00 1661*  	ld de,45
04105B DD 21 27 06 1662*  	ld ix,1575
       00          
041060 CD A5 B6 04 1663*  	call vdu_load_img
041064 C9          1664*  	ret
041065             1665*  
041065             1666*  ld_12_020:
041065 21 71 38 04 1667*  	ld hl,F12_020
041069 22 3A B5 04 1668*  	ld (cur_filename),hl
04106D 11 C5 C2 04 1669*  	ld de,filedata
041071 01 00 00 01 1670*  	ld bc,65536
041075 3E 01       1671*  	ld a,mos_load
041077 5B CF       1672*  	RST.LIL 08h
041079 21 3B 01 00 1673*  	ld hl,BUF_12_020
04107D 01 2E 00 00 1674*  	ld bc,46
041081 11 2D 00 00 1675*  	ld de,45
041085 DD 21 16 08 1676*  	ld ix,2070
       00          
04108A CD A5 B6 04 1677*  	call vdu_load_img
04108E C9          1678*  	ret
04108F             1679*  
04108F             1680*  ld_12_024:
04108F 21 85 38 04 1681*  	ld hl,F12_024
041093 22 3A B5 04 1682*  	ld (cur_filename),hl
041097 11 C5 C2 04 1683*  	ld de,filedata
04109B 01 00 00 01 1684*  	ld bc,65536
04109F 3E 01       1685*  	ld a,mos_load
0410A1 5B CF       1686*  	RST.LIL 08h
0410A3 21 3C 01 00 1687*  	ld hl,BUF_12_024
0410A7 01 2E 00 00 1688*  	ld bc,46
0410AB 11 40 00 00 1689*  	ld de,64
0410AF DD 21 80 0B 1690*  	ld ix,2944
       00          
0410B4 CD A5 B6 04 1691*  	call vdu_load_img
0410B8 C9          1692*  	ret
0410B9             1693*  
0410B9             1694*  ld_12_025:
0410B9 21 99 38 04 1695*  	ld hl,F12_025
0410BD 22 3A B5 04 1696*  	ld (cur_filename),hl
0410C1 11 C5 C2 04 1697*  	ld de,filedata
0410C5 01 00 00 01 1698*  	ld bc,65536
0410C9 3E 01       1699*  	ld a,mos_load
0410CB 5B CF       1700*  	RST.LIL 08h
0410CD 21 3D 01 00 1701*  	ld hl,BUF_12_025
0410D1 01 1C 00 00 1702*  	ld bc,28
0410D5 11 40 00 00 1703*  	ld de,64
0410D9 DD 21 00 07 1704*  	ld ix,1792
       00          
0410DE CD A5 B6 04 1705*  	call vdu_load_img
0410E2 C9          1706*  	ret
0410E3             1707*  
0410E3             1708*  ld_12_026:
0410E3 21 AD 38 04 1709*  	ld hl,F12_026
0410E7 22 3A B5 04 1710*  	ld (cur_filename),hl
0410EB 11 C5 C2 04 1711*  	ld de,filedata
0410EF 01 00 00 01 1712*  	ld bc,65536
0410F3 3E 01       1713*  	ld a,mos_load
0410F5 5B CF       1714*  	RST.LIL 08h
0410F7 21 3E 01 00 1715*  	ld hl,BUF_12_026
0410FB 01 09 00 00 1716*  	ld bc,9
0410FF 11 40 00 00 1717*  	ld de,64
041103 DD 21 40 02 1718*  	ld ix,576
       00          
041108 CD A5 B6 04 1719*  	call vdu_load_img
04110C C9          1720*  	ret
04110D             1721*  
04110D             1722*  ld_12_027:
04110D 21 C1 38 04 1723*  	ld hl,F12_027
041111 22 3A B5 04 1724*  	ld (cur_filename),hl
041115 11 C5 C2 04 1725*  	ld de,filedata
041119 01 00 00 01 1726*  	ld bc,65536
04111D 3E 01       1727*  	ld a,mos_load
04111F 5B CF       1728*  	RST.LIL 08h
041121 21 3F 01 00 1729*  	ld hl,BUF_12_027
041125 01 0A 00 00 1730*  	ld bc,10
041129 11 3E 00 00 1731*  	ld de,62
04112D DD 21 6C 02 1732*  	ld ix,620
       00          
041132 CD A5 B6 04 1733*  	call vdu_load_img
041136 C9          1734*  	ret
041137             1735*  
041137             1736*  ld_12_028:
041137 21 D5 38 04 1737*  	ld hl,F12_028
04113B 22 3A B5 04 1738*  	ld (cur_filename),hl
04113F 11 C5 C2 04 1739*  	ld de,filedata
041143 01 00 00 01 1740*  	ld bc,65536
041147 3E 01       1741*  	ld a,mos_load
041149 5B CF       1742*  	RST.LIL 08h
04114B 21 40 01 00 1743*  	ld hl,BUF_12_028
04114F 01 1C 00 00 1744*  	ld bc,28
041153 11 40 00 00 1745*  	ld de,64
041157 DD 21 00 07 1746*  	ld ix,1792
       00          
04115C CD A5 B6 04 1747*  	call vdu_load_img
041160 C9          1748*  	ret
041161             1749*  
041161             1750*  ld_12_029:
041161 21 E9 38 04 1751*  	ld hl,F12_029
041165 22 3A B5 04 1752*  	ld (cur_filename),hl
041169 11 C5 C2 04 1753*  	ld de,filedata
04116D 01 00 00 01 1754*  	ld bc,65536
041171 3E 01       1755*  	ld a,mos_load
041173 5B CF       1756*  	RST.LIL 08h
041175 21 41 01 00 1757*  	ld hl,BUF_12_029
041179 01 2F 00 00 1758*  	ld bc,47
04117D 11 40 00 00 1759*  	ld de,64
041181 DD 21 C0 0B 1760*  	ld ix,3008
       00          
041186 CD A5 B6 04 1761*  	call vdu_load_img
04118A C9          1762*  	ret
04118B             1763*  
04118B             1764*  ld_12_032:
04118B 21 FD 38 04 1765*  	ld hl,F12_032
04118F 22 3A B5 04 1766*  	ld (cur_filename),hl
041193 11 C5 C2 04 1767*  	ld de,filedata
041197 01 00 00 01 1768*  	ld bc,65536
04119B 3E 01       1769*  	ld a,mos_load
04119D 5B CF       1770*  	RST.LIL 08h
04119F 21 42 01 00 1771*  	ld hl,BUF_12_032
0411A3 01 41 00 00 1772*  	ld bc,65
0411A7 11 40 00 00 1773*  	ld de,64
0411AB DD 21 40 10 1774*  	ld ix,4160
       00          
0411B0 CD A5 B6 04 1775*  	call vdu_load_img
0411B4 C9          1776*  	ret
0411B5             1777*  
0411B5             1778*  ld_12_035:
0411B5 21 11 39 04 1779*  	ld hl,F12_035
0411B9 22 3A B5 04 1780*  	ld (cur_filename),hl
0411BD 11 C5 C2 04 1781*  	ld de,filedata
0411C1 01 00 00 01 1782*  	ld bc,65536
0411C5 3E 01       1783*  	ld a,mos_load
0411C7 5B CF       1784*  	RST.LIL 08h
0411C9 21 43 01 00 1785*  	ld hl,BUF_12_035
0411CD 01 3F 00 00 1786*  	ld bc,63
0411D1 11 6B 00 00 1787*  	ld de,107
0411D5 DD 21 55 1A 1788*  	ld ix,6741
       00          
0411DA CD A5 B6 04 1789*  	call vdu_load_img
0411DE C9          1790*  	ret
0411DF             1791*  
0411DF             1792*  ld_12_036:
0411DF 21 25 39 04 1793*  	ld hl,F12_036
0411E3 22 3A B5 04 1794*  	ld (cur_filename),hl
0411E7 11 C5 C2 04 1795*  	ld de,filedata
0411EB 01 00 00 01 1796*  	ld bc,65536
0411EF 3E 01       1797*  	ld a,mos_load
0411F1 5B CF       1798*  	RST.LIL 08h
0411F3 21 44 01 00 1799*  	ld hl,BUF_12_036
0411F7 01 16 00 00 1800*  	ld bc,22
0411FB 11 6B 00 00 1801*  	ld de,107
0411FF DD 21 32 09 1802*  	ld ix,2354
       00          
041204 CD A5 B6 04 1803*  	call vdu_load_img
041208 C9          1804*  	ret
041209             1805*  
041209             1806*  ld_12_037:
041209 21 39 39 04 1807*  	ld hl,F12_037
04120D 22 3A B5 04 1808*  	ld (cur_filename),hl
041211 11 C5 C2 04 1809*  	ld de,filedata
041215 01 00 00 01 1810*  	ld bc,65536
041219 3E 01       1811*  	ld a,mos_load
04121B 5B CF       1812*  	RST.LIL 08h
04121D 21 45 01 00 1813*  	ld hl,BUF_12_037
041221 01 15 00 00 1814*  	ld bc,21
041225 11 69 00 00 1815*  	ld de,105
041229 DD 21 9D 08 1816*  	ld ix,2205
       00          
04122E CD A5 B6 04 1817*  	call vdu_load_img
041232 C9          1818*  	ret
041233             1819*  
041233             1820*  ld_12_038:
041233 21 4D 39 04 1821*  	ld hl,F12_038
041237 22 3A B5 04 1822*  	ld (cur_filename),hl
04123B 11 C5 C2 04 1823*  	ld de,filedata
04123F 01 00 00 01 1824*  	ld bc,65536
041243 3E 01       1825*  	ld a,mos_load
041245 5B CF       1826*  	RST.LIL 08h
041247 21 46 01 00 1827*  	ld hl,BUF_12_038
04124B 01 3F 00 00 1828*  	ld bc,63
04124F 11 6B 00 00 1829*  	ld de,107
041253 DD 21 55 1A 1830*  	ld ix,6741
       00          
041258 CD A5 B6 04 1831*  	call vdu_load_img
04125C C9          1832*  	ret
04125D             1833*  
04125D             1834*  ld_12_040:
04125D 21 61 39 04 1835*  	ld hl,F12_040
041261 22 3A B5 04 1836*  	ld (cur_filename),hl
041265 11 C5 C2 04 1837*  	ld de,filedata
041269 01 00 00 01 1838*  	ld bc,65536
04126D 3E 01       1839*  	ld a,mos_load
04126F 5B CF       1840*  	RST.LIL 08h
041271 21 47 01 00 1841*  	ld hl,BUF_12_040
041275 01 6C 00 00 1842*  	ld bc,108
041279 11 6B 00 00 1843*  	ld de,107
04127D DD 21 24 2D 1844*  	ld ix,11556
       00          
041282 CD A5 B6 04 1845*  	call vdu_load_img
041286 C9          1846*  	ret
041287             1847*  
041287             1848*  ld_12_042:
041287 21 75 39 04 1849*  	ld hl,F12_042
04128B 22 3A B5 04 1850*  	ld (cur_filename),hl
04128F 11 C5 C2 04 1851*  	ld de,filedata
041293 01 00 00 01 1852*  	ld bc,65536
041297 3E 01       1853*  	ld a,mos_load
041299 5B CF       1854*  	RST.LIL 08h
04129B 21 48 01 00 1855*  	ld hl,BUF_12_042
04129F 01 6A 00 00 1856*  	ld bc,106
0412A3 11 A0 00 00 1857*  	ld de,160
0412A7 DD 21 40 42 1858*  	ld ix,16960
       00          
0412AC CD A5 B6 04 1859*  	call vdu_load_img
0412B0 C9          1860*  	ret
0412B1             1861*  
0412B1             1862*  ld_12_043:
0412B1 21 89 39 04 1863*  	ld hl,F12_043
0412B5 22 3A B5 04 1864*  	ld (cur_filename),hl
0412B9 11 C5 C2 04 1865*  	ld de,filedata
0412BD 01 00 00 01 1866*  	ld bc,65536
0412C1 3E 01       1867*  	ld a,mos_load
0412C3 5B CF       1868*  	RST.LIL 08h
0412C5 21 49 01 00 1869*  	ld hl,BUF_12_043
0412C9 01 6B 00 00 1870*  	ld bc,107
0412CD 11 A0 00 00 1871*  	ld de,160
0412D1 DD 21 E0 42 1872*  	ld ix,17120
       00          
0412D6 CD A5 B6 04 1873*  	call vdu_load_img
0412DA C9          1874*  	ret
0412DB             1875*  
0412DB             1876*  ld_12_044:
0412DB 21 9D 39 04 1877*  	ld hl,F12_044
0412DF 22 3A B5 04 1878*  	ld (cur_filename),hl
0412E3 11 C5 C2 04 1879*  	ld de,filedata
0412E7 01 00 00 01 1880*  	ld bc,65536
0412EB 3E 01       1881*  	ld a,mos_load
0412ED 5B CF       1882*  	RST.LIL 08h
0412EF 21 4A 01 00 1883*  	ld hl,BUF_12_044
0412F3 01 40 01 00 1884*  	ld bc,320
0412F7 11 A0 00 00 1885*  	ld de,160
0412FB DD 21 00 C8 1886*  	ld ix,51200
       00          
041300 CD A5 B6 04 1887*  	call vdu_load_img
041304 C9          1888*  	ret
041305             1889*  
041305             1890*  ld_13_004:
041305 21 B1 39 04 1891*  	ld hl,F13_004
041309 22 3A B5 04 1892*  	ld (cur_filename),hl
04130D 11 C5 C2 04 1893*  	ld de,filedata
041311 01 00 00 01 1894*  	ld bc,65536
041315 3E 01       1895*  	ld a,mos_load
041317 5B CF       1896*  	RST.LIL 08h
041319 21 4B 01 00 1897*  	ld hl,BUF_13_004
04131D 01 24 00 00 1898*  	ld bc,36
041321 11 23 00 00 1899*  	ld de,35
041325 DD 21 EC 04 1900*  	ld ix,1260
       00          
04132A CD A5 B6 04 1901*  	call vdu_load_img
04132E C9          1902*  	ret
04132F             1903*  
04132F             1904*  ld_13_009:
04132F 21 C5 39 04 1905*  	ld hl,F13_009
041333 22 3A B5 04 1906*  	ld (cur_filename),hl
041337 11 C5 C2 04 1907*  	ld de,filedata
04133B 01 00 00 01 1908*  	ld bc,65536
04133F 3E 01       1909*  	ld a,mos_load
041341 5B CF       1910*  	RST.LIL 08h
041343 21 4C 01 00 1911*  	ld hl,BUF_13_009
041347 01 23 00 00 1912*  	ld bc,35
04134B 11 2D 00 00 1913*  	ld de,45
04134F DD 21 27 06 1914*  	ld ix,1575
       00          
041354 CD A5 B6 04 1915*  	call vdu_load_img
041358 C9          1916*  	ret
041359             1917*  
041359             1918*  ld_13_010:
041359 21 D9 39 04 1919*  	ld hl,F13_010
04135D 22 3A B5 04 1920*  	ld (cur_filename),hl
041361 11 C5 C2 04 1921*  	ld de,filedata
041365 01 00 00 01 1922*  	ld bc,65536
041369 3E 01       1923*  	ld a,mos_load
04136B 5B CF       1924*  	RST.LIL 08h
04136D 21 4D 01 00 1925*  	ld hl,BUF_13_010
041371 01 19 00 00 1926*  	ld bc,25
041375 11 2D 00 00 1927*  	ld de,45
041379 DD 21 65 04 1928*  	ld ix,1125
       00          
04137E CD A5 B6 04 1929*  	call vdu_load_img
041382 C9          1930*  	ret
041383             1931*  
041383             1932*  ld_13_011:
041383 21 ED 39 04 1933*  	ld hl,F13_011
041387 22 3A B5 04 1934*  	ld (cur_filename),hl
04138B 11 C5 C2 04 1935*  	ld de,filedata
04138F 01 00 00 01 1936*  	ld bc,65536
041393 3E 01       1937*  	ld a,mos_load
041395 5B CF       1938*  	RST.LIL 08h
041397 21 4E 01 00 1939*  	ld hl,BUF_13_011
04139B 01 0F 00 00 1940*  	ld bc,15
04139F 11 2D 00 00 1941*  	ld de,45
0413A3 DD 21 A3 02 1942*  	ld ix,675
       00          
0413A8 CD A5 B6 04 1943*  	call vdu_load_img
0413AC C9          1944*  	ret
0413AD             1945*  
0413AD             1946*  ld_13_012:
0413AD 21 01 3A 04 1947*  	ld hl,F13_012
0413B1 22 3A B5 04 1948*  	ld (cur_filename),hl
0413B5 11 C5 C2 04 1949*  	ld de,filedata
0413B9 01 00 00 01 1950*  	ld bc,65536
0413BD 3E 01       1951*  	ld a,mos_load
0413BF 5B CF       1952*  	RST.LIL 08h
0413C1 21 4F 01 00 1953*  	ld hl,BUF_13_012
0413C5 01 05 00 00 1954*  	ld bc,5
0413C9 11 2D 00 00 1955*  	ld de,45
0413CD DD 21 E1 00 1956*  	ld ix,225
       00          
0413D2 CD A5 B6 04 1957*  	call vdu_load_img
0413D6 C9          1958*  	ret
0413D7             1959*  
0413D7             1960*  ld_13_013:
0413D7 21 15 3A 04 1961*  	ld hl,F13_013
0413DB 22 3A B5 04 1962*  	ld (cur_filename),hl
0413DF 11 C5 C2 04 1963*  	ld de,filedata
0413E3 01 00 00 01 1964*  	ld bc,65536
0413E7 3E 01       1965*  	ld a,mos_load
0413E9 5B CF       1966*  	RST.LIL 08h
0413EB 21 50 01 00 1967*  	ld hl,BUF_13_013
0413EF 01 05 00 00 1968*  	ld bc,5
0413F3 11 2B 00 00 1969*  	ld de,43
0413F7 DD 21 D7 00 1970*  	ld ix,215
       00          
0413FC CD A5 B6 04 1971*  	call vdu_load_img
041400 C9          1972*  	ret
041401             1973*  
041401             1974*  ld_13_014:
041401 21 29 3A 04 1975*  	ld hl,F13_014
041405 22 3A B5 04 1976*  	ld (cur_filename),hl
041409 11 C5 C2 04 1977*  	ld de,filedata
04140D 01 00 00 01 1978*  	ld bc,65536
041411 3E 01       1979*  	ld a,mos_load
041413 5B CF       1980*  	RST.LIL 08h
041415 21 51 01 00 1981*  	ld hl,BUF_13_014
041419 01 0F 00 00 1982*  	ld bc,15
04141D 11 2D 00 00 1983*  	ld de,45
041421 DD 21 A3 02 1984*  	ld ix,675
       00          
041426 CD A5 B6 04 1985*  	call vdu_load_img
04142A C9          1986*  	ret
04142B             1987*  
04142B             1988*  ld_13_015:
04142B 21 3D 3A 04 1989*  	ld hl,F13_015
04142F 22 3A B5 04 1990*  	ld (cur_filename),hl
041433 11 C5 C2 04 1991*  	ld de,filedata
041437 01 00 00 01 1992*  	ld bc,65536
04143B 3E 01       1993*  	ld a,mos_load
04143D 5B CF       1994*  	RST.LIL 08h
04143F 21 52 01 00 1995*  	ld hl,BUF_13_015
041443 01 19 00 00 1996*  	ld bc,25
041447 11 2D 00 00 1997*  	ld de,45
04144B DD 21 65 04 1998*  	ld ix,1125
       00          
041450 CD A5 B6 04 1999*  	call vdu_load_img
041454 C9          2000*  	ret
041455             2001*  
041455             2002*  ld_13_016:
041455 21 51 3A 04 2003*  	ld hl,F13_016
041459 22 3A B5 04 2004*  	ld (cur_filename),hl
04145D 11 C5 C2 04 2005*  	ld de,filedata
041461 01 00 00 01 2006*  	ld bc,65536
041465 3E 01       2007*  	ld a,mos_load
041467 5B CF       2008*  	RST.LIL 08h
041469 21 53 01 00 2009*  	ld hl,BUF_13_016
04146D 01 23 00 00 2010*  	ld bc,35
041471 11 2D 00 00 2011*  	ld de,45
041475 DD 21 27 06 2012*  	ld ix,1575
       00          
04147A CD A5 B6 04 2013*  	call vdu_load_img
04147E C9          2014*  	ret
04147F             2015*  
04147F             2016*  ld_13_020:
04147F 21 65 3A 04 2017*  	ld hl,F13_020
041483 22 3A B5 04 2018*  	ld (cur_filename),hl
041487 11 C5 C2 04 2019*  	ld de,filedata
04148B 01 00 00 01 2020*  	ld bc,65536
04148F 3E 01       2021*  	ld a,mos_load
041491 5B CF       2022*  	RST.LIL 08h
041493 21 54 01 00 2023*  	ld hl,BUF_13_020
041497 01 2E 00 00 2024*  	ld bc,46
04149B 11 2D 00 00 2025*  	ld de,45
04149F DD 21 16 08 2026*  	ld ix,2070
       00          
0414A4 CD A5 B6 04 2027*  	call vdu_load_img
0414A8 C9          2028*  	ret
0414A9             2029*  
0414A9             2030*  ld_13_024:
0414A9 21 79 3A 04 2031*  	ld hl,F13_024
0414AD 22 3A B5 04 2032*  	ld (cur_filename),hl
0414B1 11 C5 C2 04 2033*  	ld de,filedata
0414B5 01 00 00 01 2034*  	ld bc,65536
0414B9 3E 01       2035*  	ld a,mos_load
0414BB 5B CF       2036*  	RST.LIL 08h
0414BD 21 55 01 00 2037*  	ld hl,BUF_13_024
0414C1 01 2E 00 00 2038*  	ld bc,46
0414C5 11 40 00 00 2039*  	ld de,64
0414C9 DD 21 80 0B 2040*  	ld ix,2944
       00          
0414CE CD A5 B6 04 2041*  	call vdu_load_img
0414D2 C9          2042*  	ret
0414D3             2043*  
0414D3             2044*  ld_13_025:
0414D3 21 8D 3A 04 2045*  	ld hl,F13_025
0414D7 22 3A B5 04 2046*  	ld (cur_filename),hl
0414DB 11 C5 C2 04 2047*  	ld de,filedata
0414DF 01 00 00 01 2048*  	ld bc,65536
0414E3 3E 01       2049*  	ld a,mos_load
0414E5 5B CF       2050*  	RST.LIL 08h
0414E7 21 56 01 00 2051*  	ld hl,BUF_13_025
0414EB 01 1C 00 00 2052*  	ld bc,28
0414EF 11 40 00 00 2053*  	ld de,64
0414F3 DD 21 00 07 2054*  	ld ix,1792
       00          
0414F8 CD A5 B6 04 2055*  	call vdu_load_img
0414FC C9          2056*  	ret
0414FD             2057*  
0414FD             2058*  ld_13_026:
0414FD 21 A1 3A 04 2059*  	ld hl,F13_026
041501 22 3A B5 04 2060*  	ld (cur_filename),hl
041505 11 C5 C2 04 2061*  	ld de,filedata
041509 01 00 00 01 2062*  	ld bc,65536
04150D 3E 01       2063*  	ld a,mos_load
04150F 5B CF       2064*  	RST.LIL 08h
041511 21 57 01 00 2065*  	ld hl,BUF_13_026
041515 01 09 00 00 2066*  	ld bc,9
041519 11 40 00 00 2067*  	ld de,64
04151D DD 21 40 02 2068*  	ld ix,576
       00          
041522 CD A5 B6 04 2069*  	call vdu_load_img
041526 C9          2070*  	ret
041527             2071*  
041527             2072*  ld_13_027:
041527 21 B5 3A 04 2073*  	ld hl,F13_027
04152B 22 3A B5 04 2074*  	ld (cur_filename),hl
04152F 11 C5 C2 04 2075*  	ld de,filedata
041533 01 00 00 01 2076*  	ld bc,65536
041537 3E 01       2077*  	ld a,mos_load
041539 5B CF       2078*  	RST.LIL 08h
04153B 21 58 01 00 2079*  	ld hl,BUF_13_027
04153F 01 0A 00 00 2080*  	ld bc,10
041543 11 3E 00 00 2081*  	ld de,62
041547 DD 21 6C 02 2082*  	ld ix,620
       00          
04154C CD A5 B6 04 2083*  	call vdu_load_img
041550 C9          2084*  	ret
041551             2085*  
041551             2086*  ld_13_028:
041551 21 C9 3A 04 2087*  	ld hl,F13_028
041555 22 3A B5 04 2088*  	ld (cur_filename),hl
041559 11 C5 C2 04 2089*  	ld de,filedata
04155D 01 00 00 01 2090*  	ld bc,65536
041561 3E 01       2091*  	ld a,mos_load
041563 5B CF       2092*  	RST.LIL 08h
041565 21 59 01 00 2093*  	ld hl,BUF_13_028
041569 01 1C 00 00 2094*  	ld bc,28
04156D 11 40 00 00 2095*  	ld de,64
041571 DD 21 00 07 2096*  	ld ix,1792
       00          
041576 CD A5 B6 04 2097*  	call vdu_load_img
04157A C9          2098*  	ret
04157B             2099*  
04157B             2100*  ld_13_029:
04157B 21 DD 3A 04 2101*  	ld hl,F13_029
04157F 22 3A B5 04 2102*  	ld (cur_filename),hl
041583 11 C5 C2 04 2103*  	ld de,filedata
041587 01 00 00 01 2104*  	ld bc,65536
04158B 3E 01       2105*  	ld a,mos_load
04158D 5B CF       2106*  	RST.LIL 08h
04158F 21 5A 01 00 2107*  	ld hl,BUF_13_029
041593 01 2F 00 00 2108*  	ld bc,47
041597 11 40 00 00 2109*  	ld de,64
04159B DD 21 C0 0B 2110*  	ld ix,3008
       00          
0415A0 CD A5 B6 04 2111*  	call vdu_load_img
0415A4 C9          2112*  	ret
0415A5             2113*  
0415A5             2114*  ld_13_032:
0415A5 21 F1 3A 04 2115*  	ld hl,F13_032
0415A9 22 3A B5 04 2116*  	ld (cur_filename),hl
0415AD 11 C5 C2 04 2117*  	ld de,filedata
0415B1 01 00 00 01 2118*  	ld bc,65536
0415B5 3E 01       2119*  	ld a,mos_load
0415B7 5B CF       2120*  	RST.LIL 08h
0415B9 21 5B 01 00 2121*  	ld hl,BUF_13_032
0415BD 01 41 00 00 2122*  	ld bc,65
0415C1 11 40 00 00 2123*  	ld de,64
0415C5 DD 21 40 10 2124*  	ld ix,4160
       00          
0415CA CD A5 B6 04 2125*  	call vdu_load_img
0415CE C9          2126*  	ret
0415CF             2127*  
0415CF             2128*  ld_13_035:
0415CF 21 05 3B 04 2129*  	ld hl,F13_035
0415D3 22 3A B5 04 2130*  	ld (cur_filename),hl
0415D7 11 C5 C2 04 2131*  	ld de,filedata
0415DB 01 00 00 01 2132*  	ld bc,65536
0415DF 3E 01       2133*  	ld a,mos_load
0415E1 5B CF       2134*  	RST.LIL 08h
0415E3 21 5C 01 00 2135*  	ld hl,BUF_13_035
0415E7 01 3F 00 00 2136*  	ld bc,63
0415EB 11 6B 00 00 2137*  	ld de,107
0415EF DD 21 55 1A 2138*  	ld ix,6741
       00          
0415F4 CD A5 B6 04 2139*  	call vdu_load_img
0415F8 C9          2140*  	ret
0415F9             2141*  
0415F9             2142*  ld_13_036:
0415F9 21 19 3B 04 2143*  	ld hl,F13_036
0415FD 22 3A B5 04 2144*  	ld (cur_filename),hl
041601 11 C5 C2 04 2145*  	ld de,filedata
041605 01 00 00 01 2146*  	ld bc,65536
041609 3E 01       2147*  	ld a,mos_load
04160B 5B CF       2148*  	RST.LIL 08h
04160D 21 5D 01 00 2149*  	ld hl,BUF_13_036
041611 01 16 00 00 2150*  	ld bc,22
041615 11 6B 00 00 2151*  	ld de,107
041619 DD 21 32 09 2152*  	ld ix,2354
       00          
04161E CD A5 B6 04 2153*  	call vdu_load_img
041622 C9          2154*  	ret
041623             2155*  
041623             2156*  ld_13_037:
041623 21 2D 3B 04 2157*  	ld hl,F13_037
041627 22 3A B5 04 2158*  	ld (cur_filename),hl
04162B 11 C5 C2 04 2159*  	ld de,filedata
04162F 01 00 00 01 2160*  	ld bc,65536
041633 3E 01       2161*  	ld a,mos_load
041635 5B CF       2162*  	RST.LIL 08h
041637 21 5E 01 00 2163*  	ld hl,BUF_13_037
04163B 01 15 00 00 2164*  	ld bc,21
04163F 11 69 00 00 2165*  	ld de,105
041643 DD 21 9D 08 2166*  	ld ix,2205
       00          
041648 CD A5 B6 04 2167*  	call vdu_load_img
04164C C9          2168*  	ret
04164D             2169*  
04164D             2170*  ld_13_038:
04164D 21 41 3B 04 2171*  	ld hl,F13_038
041651 22 3A B5 04 2172*  	ld (cur_filename),hl
041655 11 C5 C2 04 2173*  	ld de,filedata
041659 01 00 00 01 2174*  	ld bc,65536
04165D 3E 01       2175*  	ld a,mos_load
04165F 5B CF       2176*  	RST.LIL 08h
041661 21 5F 01 00 2177*  	ld hl,BUF_13_038
041665 01 3F 00 00 2178*  	ld bc,63
041669 11 6B 00 00 2179*  	ld de,107
04166D DD 21 55 1A 2180*  	ld ix,6741
       00          
041672 CD A5 B6 04 2181*  	call vdu_load_img
041676 C9          2182*  	ret
041677             2183*  
041677             2184*  ld_13_040:
041677 21 55 3B 04 2185*  	ld hl,F13_040
04167B 22 3A B5 04 2186*  	ld (cur_filename),hl
04167F 11 C5 C2 04 2187*  	ld de,filedata
041683 01 00 00 01 2188*  	ld bc,65536
041687 3E 01       2189*  	ld a,mos_load
041689 5B CF       2190*  	RST.LIL 08h
04168B 21 60 01 00 2191*  	ld hl,BUF_13_040
04168F 01 6C 00 00 2192*  	ld bc,108
041693 11 6B 00 00 2193*  	ld de,107
041697 DD 21 24 2D 2194*  	ld ix,11556
       00          
04169C CD A5 B6 04 2195*  	call vdu_load_img
0416A0 C9          2196*  	ret
0416A1             2197*  
0416A1             2198*  ld_13_042:
0416A1 21 69 3B 04 2199*  	ld hl,F13_042
0416A5 22 3A B5 04 2200*  	ld (cur_filename),hl
0416A9 11 C5 C2 04 2201*  	ld de,filedata
0416AD 01 00 00 01 2202*  	ld bc,65536
0416B1 3E 01       2203*  	ld a,mos_load
0416B3 5B CF       2204*  	RST.LIL 08h
0416B5 21 61 01 00 2205*  	ld hl,BUF_13_042
0416B9 01 6A 00 00 2206*  	ld bc,106
0416BD 11 A0 00 00 2207*  	ld de,160
0416C1 DD 21 40 42 2208*  	ld ix,16960
       00          
0416C6 CD A5 B6 04 2209*  	call vdu_load_img
0416CA C9          2210*  	ret
0416CB             2211*  
0416CB             2212*  ld_13_043:
0416CB 21 7D 3B 04 2213*  	ld hl,F13_043
0416CF 22 3A B5 04 2214*  	ld (cur_filename),hl
0416D3 11 C5 C2 04 2215*  	ld de,filedata
0416D7 01 00 00 01 2216*  	ld bc,65536
0416DB 3E 01       2217*  	ld a,mos_load
0416DD 5B CF       2218*  	RST.LIL 08h
0416DF 21 62 01 00 2219*  	ld hl,BUF_13_043
0416E3 01 6B 00 00 2220*  	ld bc,107
0416E7 11 A0 00 00 2221*  	ld de,160
0416EB DD 21 E0 42 2222*  	ld ix,17120
       00          
0416F0 CD A5 B6 04 2223*  	call vdu_load_img
0416F4 C9          2224*  	ret
0416F5             2225*  
0416F5             2226*  ld_13_044:
0416F5 21 91 3B 04 2227*  	ld hl,F13_044
0416F9 22 3A B5 04 2228*  	ld (cur_filename),hl
0416FD 11 C5 C2 04 2229*  	ld de,filedata
041701 01 00 00 01 2230*  	ld bc,65536
041705 3E 01       2231*  	ld a,mos_load
041707 5B CF       2232*  	RST.LIL 08h
041709 21 63 01 00 2233*  	ld hl,BUF_13_044
04170D 01 40 01 00 2234*  	ld bc,320
041711 11 A0 00 00 2235*  	ld de,160
041715 DD 21 00 C8 2236*  	ld ix,51200
       00          
04171A CD A5 B6 04 2237*  	call vdu_load_img
04171E C9          2238*  	ret
04171F             2239*  
04171F             2240*  ld_14_004:
04171F 21 A5 3B 04 2241*  	ld hl,F14_004
041723 22 3A B5 04 2242*  	ld (cur_filename),hl
041727 11 C5 C2 04 2243*  	ld de,filedata
04172B 01 00 00 01 2244*  	ld bc,65536
04172F 3E 01       2245*  	ld a,mos_load
041731 5B CF       2246*  	RST.LIL 08h
041733 21 64 01 00 2247*  	ld hl,BUF_14_004
041737 01 24 00 00 2248*  	ld bc,36
04173B 11 23 00 00 2249*  	ld de,35
04173F DD 21 EC 04 2250*  	ld ix,1260
       00          
041744 CD A5 B6 04 2251*  	call vdu_load_img
041748 C9          2252*  	ret
041749             2253*  
041749             2254*  ld_14_009:
041749 21 B9 3B 04 2255*  	ld hl,F14_009
04174D 22 3A B5 04 2256*  	ld (cur_filename),hl
041751 11 C5 C2 04 2257*  	ld de,filedata
041755 01 00 00 01 2258*  	ld bc,65536
041759 3E 01       2259*  	ld a,mos_load
04175B 5B CF       2260*  	RST.LIL 08h
04175D 21 65 01 00 2261*  	ld hl,BUF_14_009
041761 01 23 00 00 2262*  	ld bc,35
041765 11 2D 00 00 2263*  	ld de,45
041769 DD 21 27 06 2264*  	ld ix,1575
       00          
04176E CD A5 B6 04 2265*  	call vdu_load_img
041772 C9          2266*  	ret
041773             2267*  
041773             2268*  ld_14_010:
041773 21 CD 3B 04 2269*  	ld hl,F14_010
041777 22 3A B5 04 2270*  	ld (cur_filename),hl
04177B 11 C5 C2 04 2271*  	ld de,filedata
04177F 01 00 00 01 2272*  	ld bc,65536
041783 3E 01       2273*  	ld a,mos_load
041785 5B CF       2274*  	RST.LIL 08h
041787 21 66 01 00 2275*  	ld hl,BUF_14_010
04178B 01 19 00 00 2276*  	ld bc,25
04178F 11 2D 00 00 2277*  	ld de,45
041793 DD 21 65 04 2278*  	ld ix,1125
       00          
041798 CD A5 B6 04 2279*  	call vdu_load_img
04179C C9          2280*  	ret
04179D             2281*  
04179D             2282*  ld_14_011:
04179D 21 E1 3B 04 2283*  	ld hl,F14_011
0417A1 22 3A B5 04 2284*  	ld (cur_filename),hl
0417A5 11 C5 C2 04 2285*  	ld de,filedata
0417A9 01 00 00 01 2286*  	ld bc,65536
0417AD 3E 01       2287*  	ld a,mos_load
0417AF 5B CF       2288*  	RST.LIL 08h
0417B1 21 67 01 00 2289*  	ld hl,BUF_14_011
0417B5 01 0F 00 00 2290*  	ld bc,15
0417B9 11 2D 00 00 2291*  	ld de,45
0417BD DD 21 A3 02 2292*  	ld ix,675
       00          
0417C2 CD A5 B6 04 2293*  	call vdu_load_img
0417C6 C9          2294*  	ret
0417C7             2295*  
0417C7             2296*  ld_14_012:
0417C7 21 F5 3B 04 2297*  	ld hl,F14_012
0417CB 22 3A B5 04 2298*  	ld (cur_filename),hl
0417CF 11 C5 C2 04 2299*  	ld de,filedata
0417D3 01 00 00 01 2300*  	ld bc,65536
0417D7 3E 01       2301*  	ld a,mos_load
0417D9 5B CF       2302*  	RST.LIL 08h
0417DB 21 68 01 00 2303*  	ld hl,BUF_14_012
0417DF 01 05 00 00 2304*  	ld bc,5
0417E3 11 2D 00 00 2305*  	ld de,45
0417E7 DD 21 E1 00 2306*  	ld ix,225
       00          
0417EC CD A5 B6 04 2307*  	call vdu_load_img
0417F0 C9          2308*  	ret
0417F1             2309*  
0417F1             2310*  ld_14_013:
0417F1 21 09 3C 04 2311*  	ld hl,F14_013
0417F5 22 3A B5 04 2312*  	ld (cur_filename),hl
0417F9 11 C5 C2 04 2313*  	ld de,filedata
0417FD 01 00 00 01 2314*  	ld bc,65536
041801 3E 01       2315*  	ld a,mos_load
041803 5B CF       2316*  	RST.LIL 08h
041805 21 69 01 00 2317*  	ld hl,BUF_14_013
041809 01 05 00 00 2318*  	ld bc,5
04180D 11 2B 00 00 2319*  	ld de,43
041811 DD 21 D7 00 2320*  	ld ix,215
       00          
041816 CD A5 B6 04 2321*  	call vdu_load_img
04181A C9          2322*  	ret
04181B             2323*  
04181B             2324*  ld_14_014:
04181B 21 1D 3C 04 2325*  	ld hl,F14_014
04181F 22 3A B5 04 2326*  	ld (cur_filename),hl
041823 11 C5 C2 04 2327*  	ld de,filedata
041827 01 00 00 01 2328*  	ld bc,65536
04182B 3E 01       2329*  	ld a,mos_load
04182D 5B CF       2330*  	RST.LIL 08h
04182F 21 6A 01 00 2331*  	ld hl,BUF_14_014
041833 01 0F 00 00 2332*  	ld bc,15
041837 11 2D 00 00 2333*  	ld de,45
04183B DD 21 A3 02 2334*  	ld ix,675
       00          
041840 CD A5 B6 04 2335*  	call vdu_load_img
041844 C9          2336*  	ret
041845             2337*  
041845             2338*  ld_14_015:
041845 21 31 3C 04 2339*  	ld hl,F14_015
041849 22 3A B5 04 2340*  	ld (cur_filename),hl
04184D 11 C5 C2 04 2341*  	ld de,filedata
041851 01 00 00 01 2342*  	ld bc,65536
041855 3E 01       2343*  	ld a,mos_load
041857 5B CF       2344*  	RST.LIL 08h
041859 21 6B 01 00 2345*  	ld hl,BUF_14_015
04185D 01 19 00 00 2346*  	ld bc,25
041861 11 2D 00 00 2347*  	ld de,45
041865 DD 21 65 04 2348*  	ld ix,1125
       00          
04186A CD A5 B6 04 2349*  	call vdu_load_img
04186E C9          2350*  	ret
04186F             2351*  
04186F             2352*  ld_14_016:
04186F 21 45 3C 04 2353*  	ld hl,F14_016
041873 22 3A B5 04 2354*  	ld (cur_filename),hl
041877 11 C5 C2 04 2355*  	ld de,filedata
04187B 01 00 00 01 2356*  	ld bc,65536
04187F 3E 01       2357*  	ld a,mos_load
041881 5B CF       2358*  	RST.LIL 08h
041883 21 6C 01 00 2359*  	ld hl,BUF_14_016
041887 01 23 00 00 2360*  	ld bc,35
04188B 11 2D 00 00 2361*  	ld de,45
04188F DD 21 27 06 2362*  	ld ix,1575
       00          
041894 CD A5 B6 04 2363*  	call vdu_load_img
041898 C9          2364*  	ret
041899             2365*  
041899             2366*  ld_14_020:
041899 21 59 3C 04 2367*  	ld hl,F14_020
04189D 22 3A B5 04 2368*  	ld (cur_filename),hl
0418A1 11 C5 C2 04 2369*  	ld de,filedata
0418A5 01 00 00 01 2370*  	ld bc,65536
0418A9 3E 01       2371*  	ld a,mos_load
0418AB 5B CF       2372*  	RST.LIL 08h
0418AD 21 6D 01 00 2373*  	ld hl,BUF_14_020
0418B1 01 2E 00 00 2374*  	ld bc,46
0418B5 11 2D 00 00 2375*  	ld de,45
0418B9 DD 21 16 08 2376*  	ld ix,2070
       00          
0418BE CD A5 B6 04 2377*  	call vdu_load_img
0418C2 C9          2378*  	ret
0418C3             2379*  
0418C3             2380*  ld_14_024:
0418C3 21 6D 3C 04 2381*  	ld hl,F14_024
0418C7 22 3A B5 04 2382*  	ld (cur_filename),hl
0418CB 11 C5 C2 04 2383*  	ld de,filedata
0418CF 01 00 00 01 2384*  	ld bc,65536
0418D3 3E 01       2385*  	ld a,mos_load
0418D5 5B CF       2386*  	RST.LIL 08h
0418D7 21 6E 01 00 2387*  	ld hl,BUF_14_024
0418DB 01 2E 00 00 2388*  	ld bc,46
0418DF 11 40 00 00 2389*  	ld de,64
0418E3 DD 21 80 0B 2390*  	ld ix,2944
       00          
0418E8 CD A5 B6 04 2391*  	call vdu_load_img
0418EC C9          2392*  	ret
0418ED             2393*  
0418ED             2394*  ld_14_025:
0418ED 21 81 3C 04 2395*  	ld hl,F14_025
0418F1 22 3A B5 04 2396*  	ld (cur_filename),hl
0418F5 11 C5 C2 04 2397*  	ld de,filedata
0418F9 01 00 00 01 2398*  	ld bc,65536
0418FD 3E 01       2399*  	ld a,mos_load
0418FF 5B CF       2400*  	RST.LIL 08h
041901 21 6F 01 00 2401*  	ld hl,BUF_14_025
041905 01 1C 00 00 2402*  	ld bc,28
041909 11 40 00 00 2403*  	ld de,64
04190D DD 21 00 07 2404*  	ld ix,1792
       00          
041912 CD A5 B6 04 2405*  	call vdu_load_img
041916 C9          2406*  	ret
041917             2407*  
041917             2408*  ld_14_026:
041917 21 95 3C 04 2409*  	ld hl,F14_026
04191B 22 3A B5 04 2410*  	ld (cur_filename),hl
04191F 11 C5 C2 04 2411*  	ld de,filedata
041923 01 00 00 01 2412*  	ld bc,65536
041927 3E 01       2413*  	ld a,mos_load
041929 5B CF       2414*  	RST.LIL 08h
04192B 21 70 01 00 2415*  	ld hl,BUF_14_026
04192F 01 09 00 00 2416*  	ld bc,9
041933 11 40 00 00 2417*  	ld de,64
041937 DD 21 40 02 2418*  	ld ix,576
       00          
04193C CD A5 B6 04 2419*  	call vdu_load_img
041940 C9          2420*  	ret
041941             2421*  
041941             2422*  ld_14_027:
041941 21 A9 3C 04 2423*  	ld hl,F14_027
041945 22 3A B5 04 2424*  	ld (cur_filename),hl
041949 11 C5 C2 04 2425*  	ld de,filedata
04194D 01 00 00 01 2426*  	ld bc,65536
041951 3E 01       2427*  	ld a,mos_load
041953 5B CF       2428*  	RST.LIL 08h
041955 21 71 01 00 2429*  	ld hl,BUF_14_027
041959 01 0A 00 00 2430*  	ld bc,10
04195D 11 3E 00 00 2431*  	ld de,62
041961 DD 21 6C 02 2432*  	ld ix,620
       00          
041966 CD A5 B6 04 2433*  	call vdu_load_img
04196A C9          2434*  	ret
04196B             2435*  
04196B             2436*  ld_14_028:
04196B 21 BD 3C 04 2437*  	ld hl,F14_028
04196F 22 3A B5 04 2438*  	ld (cur_filename),hl
041973 11 C5 C2 04 2439*  	ld de,filedata
041977 01 00 00 01 2440*  	ld bc,65536
04197B 3E 01       2441*  	ld a,mos_load
04197D 5B CF       2442*  	RST.LIL 08h
04197F 21 72 01 00 2443*  	ld hl,BUF_14_028
041983 01 1C 00 00 2444*  	ld bc,28
041987 11 40 00 00 2445*  	ld de,64
04198B DD 21 00 07 2446*  	ld ix,1792
       00          
041990 CD A5 B6 04 2447*  	call vdu_load_img
041994 C9          2448*  	ret
041995             2449*  
041995             2450*  ld_14_029:
041995 21 D1 3C 04 2451*  	ld hl,F14_029
041999 22 3A B5 04 2452*  	ld (cur_filename),hl
04199D 11 C5 C2 04 2453*  	ld de,filedata
0419A1 01 00 00 01 2454*  	ld bc,65536
0419A5 3E 01       2455*  	ld a,mos_load
0419A7 5B CF       2456*  	RST.LIL 08h
0419A9 21 73 01 00 2457*  	ld hl,BUF_14_029
0419AD 01 2F 00 00 2458*  	ld bc,47
0419B1 11 40 00 00 2459*  	ld de,64
0419B5 DD 21 C0 0B 2460*  	ld ix,3008
       00          
0419BA CD A5 B6 04 2461*  	call vdu_load_img
0419BE C9          2462*  	ret
0419BF             2463*  
0419BF             2464*  ld_14_032:
0419BF 21 E5 3C 04 2465*  	ld hl,F14_032
0419C3 22 3A B5 04 2466*  	ld (cur_filename),hl
0419C7 11 C5 C2 04 2467*  	ld de,filedata
0419CB 01 00 00 01 2468*  	ld bc,65536
0419CF 3E 01       2469*  	ld a,mos_load
0419D1 5B CF       2470*  	RST.LIL 08h
0419D3 21 74 01 00 2471*  	ld hl,BUF_14_032
0419D7 01 41 00 00 2472*  	ld bc,65
0419DB 11 40 00 00 2473*  	ld de,64
0419DF DD 21 40 10 2474*  	ld ix,4160
       00          
0419E4 CD A5 B6 04 2475*  	call vdu_load_img
0419E8 C9          2476*  	ret
0419E9             2477*  
0419E9             2478*  ld_14_035:
0419E9 21 F9 3C 04 2479*  	ld hl,F14_035
0419ED 22 3A B5 04 2480*  	ld (cur_filename),hl
0419F1 11 C5 C2 04 2481*  	ld de,filedata
0419F5 01 00 00 01 2482*  	ld bc,65536
0419F9 3E 01       2483*  	ld a,mos_load
0419FB 5B CF       2484*  	RST.LIL 08h
0419FD 21 75 01 00 2485*  	ld hl,BUF_14_035
041A01 01 3F 00 00 2486*  	ld bc,63
041A05 11 6B 00 00 2487*  	ld de,107
041A09 DD 21 55 1A 2488*  	ld ix,6741
       00          
041A0E CD A5 B6 04 2489*  	call vdu_load_img
041A12 C9          2490*  	ret
041A13             2491*  
041A13             2492*  ld_14_036:
041A13 21 0D 3D 04 2493*  	ld hl,F14_036
041A17 22 3A B5 04 2494*  	ld (cur_filename),hl
041A1B 11 C5 C2 04 2495*  	ld de,filedata
041A1F 01 00 00 01 2496*  	ld bc,65536
041A23 3E 01       2497*  	ld a,mos_load
041A25 5B CF       2498*  	RST.LIL 08h
041A27 21 76 01 00 2499*  	ld hl,BUF_14_036
041A2B 01 16 00 00 2500*  	ld bc,22
041A2F 11 6B 00 00 2501*  	ld de,107
041A33 DD 21 32 09 2502*  	ld ix,2354
       00          
041A38 CD A5 B6 04 2503*  	call vdu_load_img
041A3C C9          2504*  	ret
041A3D             2505*  
041A3D             2506*  ld_14_037:
041A3D 21 21 3D 04 2507*  	ld hl,F14_037
041A41 22 3A B5 04 2508*  	ld (cur_filename),hl
041A45 11 C5 C2 04 2509*  	ld de,filedata
041A49 01 00 00 01 2510*  	ld bc,65536
041A4D 3E 01       2511*  	ld a,mos_load
041A4F 5B CF       2512*  	RST.LIL 08h
041A51 21 77 01 00 2513*  	ld hl,BUF_14_037
041A55 01 15 00 00 2514*  	ld bc,21
041A59 11 69 00 00 2515*  	ld de,105
041A5D DD 21 9D 08 2516*  	ld ix,2205
       00          
041A62 CD A5 B6 04 2517*  	call vdu_load_img
041A66 C9          2518*  	ret
041A67             2519*  
041A67             2520*  ld_14_038:
041A67 21 35 3D 04 2521*  	ld hl,F14_038
041A6B 22 3A B5 04 2522*  	ld (cur_filename),hl
041A6F 11 C5 C2 04 2523*  	ld de,filedata
041A73 01 00 00 01 2524*  	ld bc,65536
041A77 3E 01       2525*  	ld a,mos_load
041A79 5B CF       2526*  	RST.LIL 08h
041A7B 21 78 01 00 2527*  	ld hl,BUF_14_038
041A7F 01 3F 00 00 2528*  	ld bc,63
041A83 11 6B 00 00 2529*  	ld de,107
041A87 DD 21 55 1A 2530*  	ld ix,6741
       00          
041A8C CD A5 B6 04 2531*  	call vdu_load_img
041A90 C9          2532*  	ret
041A91             2533*  
041A91             2534*  ld_14_040:
041A91 21 49 3D 04 2535*  	ld hl,F14_040
041A95 22 3A B5 04 2536*  	ld (cur_filename),hl
041A99 11 C5 C2 04 2537*  	ld de,filedata
041A9D 01 00 00 01 2538*  	ld bc,65536
041AA1 3E 01       2539*  	ld a,mos_load
041AA3 5B CF       2540*  	RST.LIL 08h
041AA5 21 79 01 00 2541*  	ld hl,BUF_14_040
041AA9 01 6C 00 00 2542*  	ld bc,108
041AAD 11 6B 00 00 2543*  	ld de,107
041AB1 DD 21 24 2D 2544*  	ld ix,11556
       00          
041AB6 CD A5 B6 04 2545*  	call vdu_load_img
041ABA C9          2546*  	ret
041ABB             2547*  
041ABB             2548*  ld_14_042:
041ABB 21 5D 3D 04 2549*  	ld hl,F14_042
041ABF 22 3A B5 04 2550*  	ld (cur_filename),hl
041AC3 11 C5 C2 04 2551*  	ld de,filedata
041AC7 01 00 00 01 2552*  	ld bc,65536
041ACB 3E 01       2553*  	ld a,mos_load
041ACD 5B CF       2554*  	RST.LIL 08h
041ACF 21 7A 01 00 2555*  	ld hl,BUF_14_042
041AD3 01 6A 00 00 2556*  	ld bc,106
041AD7 11 A0 00 00 2557*  	ld de,160
041ADB DD 21 40 42 2558*  	ld ix,16960
       00          
041AE0 CD A5 B6 04 2559*  	call vdu_load_img
041AE4 C9          2560*  	ret
041AE5             2561*  
041AE5             2562*  ld_14_043:
041AE5 21 71 3D 04 2563*  	ld hl,F14_043
041AE9 22 3A B5 04 2564*  	ld (cur_filename),hl
041AED 11 C5 C2 04 2565*  	ld de,filedata
041AF1 01 00 00 01 2566*  	ld bc,65536
041AF5 3E 01       2567*  	ld a,mos_load
041AF7 5B CF       2568*  	RST.LIL 08h
041AF9 21 7B 01 00 2569*  	ld hl,BUF_14_043
041AFD 01 6B 00 00 2570*  	ld bc,107
041B01 11 A0 00 00 2571*  	ld de,160
041B05 DD 21 E0 42 2572*  	ld ix,17120
       00          
041B0A CD A5 B6 04 2573*  	call vdu_load_img
041B0E C9          2574*  	ret
041B0F             2575*  
041B0F             2576*  ld_14_044:
041B0F 21 85 3D 04 2577*  	ld hl,F14_044
041B13 22 3A B5 04 2578*  	ld (cur_filename),hl
041B17 11 C5 C2 04 2579*  	ld de,filedata
041B1B 01 00 00 01 2580*  	ld bc,65536
041B1F 3E 01       2581*  	ld a,mos_load
041B21 5B CF       2582*  	RST.LIL 08h
041B23 21 7C 01 00 2583*  	ld hl,BUF_14_044
041B27 01 40 01 00 2584*  	ld bc,320
041B2B 11 A0 00 00 2585*  	ld de,160
041B2F DD 21 00 C8 2586*  	ld ix,51200
       00          
041B34 CD A5 B6 04 2587*  	call vdu_load_img
041B38 C9          2588*  	ret
041B39             2589*  
041B39             2590*  ld_15_004:
041B39 21 99 3D 04 2591*  	ld hl,F15_004
041B3D 22 3A B5 04 2592*  	ld (cur_filename),hl
041B41 11 C5 C2 04 2593*  	ld de,filedata
041B45 01 00 00 01 2594*  	ld bc,65536
041B49 3E 01       2595*  	ld a,mos_load
041B4B 5B CF       2596*  	RST.LIL 08h
041B4D 21 7D 01 00 2597*  	ld hl,BUF_15_004
041B51 01 24 00 00 2598*  	ld bc,36
041B55 11 23 00 00 2599*  	ld de,35
041B59 DD 21 EC 04 2600*  	ld ix,1260
       00          
041B5E CD A5 B6 04 2601*  	call vdu_load_img
041B62 C9          2602*  	ret
041B63             2603*  
041B63             2604*  ld_15_009:
041B63 21 AD 3D 04 2605*  	ld hl,F15_009
041B67 22 3A B5 04 2606*  	ld (cur_filename),hl
041B6B 11 C5 C2 04 2607*  	ld de,filedata
041B6F 01 00 00 01 2608*  	ld bc,65536
041B73 3E 01       2609*  	ld a,mos_load
041B75 5B CF       2610*  	RST.LIL 08h
041B77 21 7E 01 00 2611*  	ld hl,BUF_15_009
041B7B 01 23 00 00 2612*  	ld bc,35
041B7F 11 2D 00 00 2613*  	ld de,45
041B83 DD 21 27 06 2614*  	ld ix,1575
       00          
041B88 CD A5 B6 04 2615*  	call vdu_load_img
041B8C C9          2616*  	ret
041B8D             2617*  
041B8D             2618*  ld_15_010:
041B8D 21 C1 3D 04 2619*  	ld hl,F15_010
041B91 22 3A B5 04 2620*  	ld (cur_filename),hl
041B95 11 C5 C2 04 2621*  	ld de,filedata
041B99 01 00 00 01 2622*  	ld bc,65536
041B9D 3E 01       2623*  	ld a,mos_load
041B9F 5B CF       2624*  	RST.LIL 08h
041BA1 21 7F 01 00 2625*  	ld hl,BUF_15_010
041BA5 01 19 00 00 2626*  	ld bc,25
041BA9 11 2D 00 00 2627*  	ld de,45
041BAD DD 21 65 04 2628*  	ld ix,1125
       00          
041BB2 CD A5 B6 04 2629*  	call vdu_load_img
041BB6 C9          2630*  	ret
041BB7             2631*  
041BB7             2632*  ld_15_011:
041BB7 21 D5 3D 04 2633*  	ld hl,F15_011
041BBB 22 3A B5 04 2634*  	ld (cur_filename),hl
041BBF 11 C5 C2 04 2635*  	ld de,filedata
041BC3 01 00 00 01 2636*  	ld bc,65536
041BC7 3E 01       2637*  	ld a,mos_load
041BC9 5B CF       2638*  	RST.LIL 08h
041BCB 21 80 01 00 2639*  	ld hl,BUF_15_011
041BCF 01 0F 00 00 2640*  	ld bc,15
041BD3 11 2D 00 00 2641*  	ld de,45
041BD7 DD 21 A3 02 2642*  	ld ix,675
       00          
041BDC CD A5 B6 04 2643*  	call vdu_load_img
041BE0 C9          2644*  	ret
041BE1             2645*  
041BE1             2646*  ld_15_012:
041BE1 21 E9 3D 04 2647*  	ld hl,F15_012
041BE5 22 3A B5 04 2648*  	ld (cur_filename),hl
041BE9 11 C5 C2 04 2649*  	ld de,filedata
041BED 01 00 00 01 2650*  	ld bc,65536
041BF1 3E 01       2651*  	ld a,mos_load
041BF3 5B CF       2652*  	RST.LIL 08h
041BF5 21 81 01 00 2653*  	ld hl,BUF_15_012
041BF9 01 05 00 00 2654*  	ld bc,5
041BFD 11 2D 00 00 2655*  	ld de,45
041C01 DD 21 E1 00 2656*  	ld ix,225
       00          
041C06 CD A5 B6 04 2657*  	call vdu_load_img
041C0A C9          2658*  	ret
041C0B             2659*  
041C0B             2660*  ld_15_013:
041C0B 21 FD 3D 04 2661*  	ld hl,F15_013
041C0F 22 3A B5 04 2662*  	ld (cur_filename),hl
041C13 11 C5 C2 04 2663*  	ld de,filedata
041C17 01 00 00 01 2664*  	ld bc,65536
041C1B 3E 01       2665*  	ld a,mos_load
041C1D 5B CF       2666*  	RST.LIL 08h
041C1F 21 82 01 00 2667*  	ld hl,BUF_15_013
041C23 01 05 00 00 2668*  	ld bc,5
041C27 11 2B 00 00 2669*  	ld de,43
041C2B DD 21 D7 00 2670*  	ld ix,215
       00          
041C30 CD A5 B6 04 2671*  	call vdu_load_img
041C34 C9          2672*  	ret
041C35             2673*  
041C35             2674*  ld_15_014:
041C35 21 11 3E 04 2675*  	ld hl,F15_014
041C39 22 3A B5 04 2676*  	ld (cur_filename),hl
041C3D 11 C5 C2 04 2677*  	ld de,filedata
041C41 01 00 00 01 2678*  	ld bc,65536
041C45 3E 01       2679*  	ld a,mos_load
041C47 5B CF       2680*  	RST.LIL 08h
041C49 21 83 01 00 2681*  	ld hl,BUF_15_014
041C4D 01 0F 00 00 2682*  	ld bc,15
041C51 11 2D 00 00 2683*  	ld de,45
041C55 DD 21 A3 02 2684*  	ld ix,675
       00          
041C5A CD A5 B6 04 2685*  	call vdu_load_img
041C5E C9          2686*  	ret
041C5F             2687*  
041C5F             2688*  ld_15_015:
041C5F 21 25 3E 04 2689*  	ld hl,F15_015
041C63 22 3A B5 04 2690*  	ld (cur_filename),hl
041C67 11 C5 C2 04 2691*  	ld de,filedata
041C6B 01 00 00 01 2692*  	ld bc,65536
041C6F 3E 01       2693*  	ld a,mos_load
041C71 5B CF       2694*  	RST.LIL 08h
041C73 21 84 01 00 2695*  	ld hl,BUF_15_015
041C77 01 19 00 00 2696*  	ld bc,25
041C7B 11 2D 00 00 2697*  	ld de,45
041C7F DD 21 65 04 2698*  	ld ix,1125
       00          
041C84 CD A5 B6 04 2699*  	call vdu_load_img
041C88 C9          2700*  	ret
041C89             2701*  
041C89             2702*  ld_15_016:
041C89 21 39 3E 04 2703*  	ld hl,F15_016
041C8D 22 3A B5 04 2704*  	ld (cur_filename),hl
041C91 11 C5 C2 04 2705*  	ld de,filedata
041C95 01 00 00 01 2706*  	ld bc,65536
041C99 3E 01       2707*  	ld a,mos_load
041C9B 5B CF       2708*  	RST.LIL 08h
041C9D 21 85 01 00 2709*  	ld hl,BUF_15_016
041CA1 01 23 00 00 2710*  	ld bc,35
041CA5 11 2D 00 00 2711*  	ld de,45
041CA9 DD 21 27 06 2712*  	ld ix,1575
       00          
041CAE CD A5 B6 04 2713*  	call vdu_load_img
041CB2 C9          2714*  	ret
041CB3             2715*  
041CB3             2716*  ld_15_020:
041CB3 21 4D 3E 04 2717*  	ld hl,F15_020
041CB7 22 3A B5 04 2718*  	ld (cur_filename),hl
041CBB 11 C5 C2 04 2719*  	ld de,filedata
041CBF 01 00 00 01 2720*  	ld bc,65536
041CC3 3E 01       2721*  	ld a,mos_load
041CC5 5B CF       2722*  	RST.LIL 08h
041CC7 21 86 01 00 2723*  	ld hl,BUF_15_020
041CCB 01 2E 00 00 2724*  	ld bc,46
041CCF 11 2D 00 00 2725*  	ld de,45
041CD3 DD 21 16 08 2726*  	ld ix,2070
       00          
041CD8 CD A5 B6 04 2727*  	call vdu_load_img
041CDC C9          2728*  	ret
041CDD             2729*  
041CDD             2730*  ld_15_024:
041CDD 21 61 3E 04 2731*  	ld hl,F15_024
041CE1 22 3A B5 04 2732*  	ld (cur_filename),hl
041CE5 11 C5 C2 04 2733*  	ld de,filedata
041CE9 01 00 00 01 2734*  	ld bc,65536
041CED 3E 01       2735*  	ld a,mos_load
041CEF 5B CF       2736*  	RST.LIL 08h
041CF1 21 87 01 00 2737*  	ld hl,BUF_15_024
041CF5 01 2E 00 00 2738*  	ld bc,46
041CF9 11 40 00 00 2739*  	ld de,64
041CFD DD 21 80 0B 2740*  	ld ix,2944
       00          
041D02 CD A5 B6 04 2741*  	call vdu_load_img
041D06 C9          2742*  	ret
041D07             2743*  
041D07             2744*  ld_15_025:
041D07 21 75 3E 04 2745*  	ld hl,F15_025
041D0B 22 3A B5 04 2746*  	ld (cur_filename),hl
041D0F 11 C5 C2 04 2747*  	ld de,filedata
041D13 01 00 00 01 2748*  	ld bc,65536
041D17 3E 01       2749*  	ld a,mos_load
041D19 5B CF       2750*  	RST.LIL 08h
041D1B 21 88 01 00 2751*  	ld hl,BUF_15_025
041D1F 01 1C 00 00 2752*  	ld bc,28
041D23 11 40 00 00 2753*  	ld de,64
041D27 DD 21 00 07 2754*  	ld ix,1792
       00          
041D2C CD A5 B6 04 2755*  	call vdu_load_img
041D30 C9          2756*  	ret
041D31             2757*  
041D31             2758*  ld_15_026:
041D31 21 89 3E 04 2759*  	ld hl,F15_026
041D35 22 3A B5 04 2760*  	ld (cur_filename),hl
041D39 11 C5 C2 04 2761*  	ld de,filedata
041D3D 01 00 00 01 2762*  	ld bc,65536
041D41 3E 01       2763*  	ld a,mos_load
041D43 5B CF       2764*  	RST.LIL 08h
041D45 21 89 01 00 2765*  	ld hl,BUF_15_026
041D49 01 09 00 00 2766*  	ld bc,9
041D4D 11 40 00 00 2767*  	ld de,64
041D51 DD 21 40 02 2768*  	ld ix,576
       00          
041D56 CD A5 B6 04 2769*  	call vdu_load_img
041D5A C9          2770*  	ret
041D5B             2771*  
041D5B             2772*  ld_15_027:
041D5B 21 9D 3E 04 2773*  	ld hl,F15_027
041D5F 22 3A B5 04 2774*  	ld (cur_filename),hl
041D63 11 C5 C2 04 2775*  	ld de,filedata
041D67 01 00 00 01 2776*  	ld bc,65536
041D6B 3E 01       2777*  	ld a,mos_load
041D6D 5B CF       2778*  	RST.LIL 08h
041D6F 21 8A 01 00 2779*  	ld hl,BUF_15_027
041D73 01 0A 00 00 2780*  	ld bc,10
041D77 11 3E 00 00 2781*  	ld de,62
041D7B DD 21 6C 02 2782*  	ld ix,620
       00          
041D80 CD A5 B6 04 2783*  	call vdu_load_img
041D84 C9          2784*  	ret
041D85             2785*  
041D85             2786*  ld_15_028:
041D85 21 B1 3E 04 2787*  	ld hl,F15_028
041D89 22 3A B5 04 2788*  	ld (cur_filename),hl
041D8D 11 C5 C2 04 2789*  	ld de,filedata
041D91 01 00 00 01 2790*  	ld bc,65536
041D95 3E 01       2791*  	ld a,mos_load
041D97 5B CF       2792*  	RST.LIL 08h
041D99 21 8B 01 00 2793*  	ld hl,BUF_15_028
041D9D 01 1C 00 00 2794*  	ld bc,28
041DA1 11 40 00 00 2795*  	ld de,64
041DA5 DD 21 00 07 2796*  	ld ix,1792
       00          
041DAA CD A5 B6 04 2797*  	call vdu_load_img
041DAE C9          2798*  	ret
041DAF             2799*  
041DAF             2800*  ld_15_029:
041DAF 21 C5 3E 04 2801*  	ld hl,F15_029
041DB3 22 3A B5 04 2802*  	ld (cur_filename),hl
041DB7 11 C5 C2 04 2803*  	ld de,filedata
041DBB 01 00 00 01 2804*  	ld bc,65536
041DBF 3E 01       2805*  	ld a,mos_load
041DC1 5B CF       2806*  	RST.LIL 08h
041DC3 21 8C 01 00 2807*  	ld hl,BUF_15_029
041DC7 01 2F 00 00 2808*  	ld bc,47
041DCB 11 40 00 00 2809*  	ld de,64
041DCF DD 21 C0 0B 2810*  	ld ix,3008
       00          
041DD4 CD A5 B6 04 2811*  	call vdu_load_img
041DD8 C9          2812*  	ret
041DD9             2813*  
041DD9             2814*  ld_15_032:
041DD9 21 D9 3E 04 2815*  	ld hl,F15_032
041DDD 22 3A B5 04 2816*  	ld (cur_filename),hl
041DE1 11 C5 C2 04 2817*  	ld de,filedata
041DE5 01 00 00 01 2818*  	ld bc,65536
041DE9 3E 01       2819*  	ld a,mos_load
041DEB 5B CF       2820*  	RST.LIL 08h
041DED 21 8D 01 00 2821*  	ld hl,BUF_15_032
041DF1 01 41 00 00 2822*  	ld bc,65
041DF5 11 40 00 00 2823*  	ld de,64
041DF9 DD 21 40 10 2824*  	ld ix,4160
       00          
041DFE CD A5 B6 04 2825*  	call vdu_load_img
041E02 C9          2826*  	ret
041E03             2827*  
041E03             2828*  ld_15_035:
041E03 21 ED 3E 04 2829*  	ld hl,F15_035
041E07 22 3A B5 04 2830*  	ld (cur_filename),hl
041E0B 11 C5 C2 04 2831*  	ld de,filedata
041E0F 01 00 00 01 2832*  	ld bc,65536
041E13 3E 01       2833*  	ld a,mos_load
041E15 5B CF       2834*  	RST.LIL 08h
041E17 21 8E 01 00 2835*  	ld hl,BUF_15_035
041E1B 01 3F 00 00 2836*  	ld bc,63
041E1F 11 6B 00 00 2837*  	ld de,107
041E23 DD 21 55 1A 2838*  	ld ix,6741
       00          
041E28 CD A5 B6 04 2839*  	call vdu_load_img
041E2C C9          2840*  	ret
041E2D             2841*  
041E2D             2842*  ld_15_036:
041E2D 21 01 3F 04 2843*  	ld hl,F15_036
041E31 22 3A B5 04 2844*  	ld (cur_filename),hl
041E35 11 C5 C2 04 2845*  	ld de,filedata
041E39 01 00 00 01 2846*  	ld bc,65536
041E3D 3E 01       2847*  	ld a,mos_load
041E3F 5B CF       2848*  	RST.LIL 08h
041E41 21 8F 01 00 2849*  	ld hl,BUF_15_036
041E45 01 16 00 00 2850*  	ld bc,22
041E49 11 6B 00 00 2851*  	ld de,107
041E4D DD 21 32 09 2852*  	ld ix,2354
       00          
041E52 CD A5 B6 04 2853*  	call vdu_load_img
041E56 C9          2854*  	ret
041E57             2855*  
041E57             2856*  ld_15_037:
041E57 21 15 3F 04 2857*  	ld hl,F15_037
041E5B 22 3A B5 04 2858*  	ld (cur_filename),hl
041E5F 11 C5 C2 04 2859*  	ld de,filedata
041E63 01 00 00 01 2860*  	ld bc,65536
041E67 3E 01       2861*  	ld a,mos_load
041E69 5B CF       2862*  	RST.LIL 08h
041E6B 21 90 01 00 2863*  	ld hl,BUF_15_037
041E6F 01 15 00 00 2864*  	ld bc,21
041E73 11 69 00 00 2865*  	ld de,105
041E77 DD 21 9D 08 2866*  	ld ix,2205
       00          
041E7C CD A5 B6 04 2867*  	call vdu_load_img
041E80 C9          2868*  	ret
041E81             2869*  
041E81             2870*  ld_15_038:
041E81 21 29 3F 04 2871*  	ld hl,F15_038
041E85 22 3A B5 04 2872*  	ld (cur_filename),hl
041E89 11 C5 C2 04 2873*  	ld de,filedata
041E8D 01 00 00 01 2874*  	ld bc,65536
041E91 3E 01       2875*  	ld a,mos_load
041E93 5B CF       2876*  	RST.LIL 08h
041E95 21 91 01 00 2877*  	ld hl,BUF_15_038
041E99 01 3F 00 00 2878*  	ld bc,63
041E9D 11 6B 00 00 2879*  	ld de,107
041EA1 DD 21 55 1A 2880*  	ld ix,6741
       00          
041EA6 CD A5 B6 04 2881*  	call vdu_load_img
041EAA C9          2882*  	ret
041EAB             2883*  
041EAB             2884*  ld_15_040:
041EAB 21 3D 3F 04 2885*  	ld hl,F15_040
041EAF 22 3A B5 04 2886*  	ld (cur_filename),hl
041EB3 11 C5 C2 04 2887*  	ld de,filedata
041EB7 01 00 00 01 2888*  	ld bc,65536
041EBB 3E 01       2889*  	ld a,mos_load
041EBD 5B CF       2890*  	RST.LIL 08h
041EBF 21 92 01 00 2891*  	ld hl,BUF_15_040
041EC3 01 6C 00 00 2892*  	ld bc,108
041EC7 11 6B 00 00 2893*  	ld de,107
041ECB DD 21 24 2D 2894*  	ld ix,11556
       00          
041ED0 CD A5 B6 04 2895*  	call vdu_load_img
041ED4 C9          2896*  	ret
041ED5             2897*  
041ED5             2898*  ld_15_042:
041ED5 21 51 3F 04 2899*  	ld hl,F15_042
041ED9 22 3A B5 04 2900*  	ld (cur_filename),hl
041EDD 11 C5 C2 04 2901*  	ld de,filedata
041EE1 01 00 00 01 2902*  	ld bc,65536
041EE5 3E 01       2903*  	ld a,mos_load
041EE7 5B CF       2904*  	RST.LIL 08h
041EE9 21 93 01 00 2905*  	ld hl,BUF_15_042
041EED 01 6A 00 00 2906*  	ld bc,106
041EF1 11 A0 00 00 2907*  	ld de,160
041EF5 DD 21 40 42 2908*  	ld ix,16960
       00          
041EFA CD A5 B6 04 2909*  	call vdu_load_img
041EFE C9          2910*  	ret
041EFF             2911*  
041EFF             2912*  ld_15_043:
041EFF 21 65 3F 04 2913*  	ld hl,F15_043
041F03 22 3A B5 04 2914*  	ld (cur_filename),hl
041F07 11 C5 C2 04 2915*  	ld de,filedata
041F0B 01 00 00 01 2916*  	ld bc,65536
041F0F 3E 01       2917*  	ld a,mos_load
041F11 5B CF       2918*  	RST.LIL 08h
041F13 21 94 01 00 2919*  	ld hl,BUF_15_043
041F17 01 6B 00 00 2920*  	ld bc,107
041F1B 11 A0 00 00 2921*  	ld de,160
041F1F DD 21 E0 42 2922*  	ld ix,17120
       00          
041F24 CD A5 B6 04 2923*  	call vdu_load_img
041F28 C9          2924*  	ret
041F29             2925*  
041F29             2926*  ld_15_044:
041F29 21 79 3F 04 2927*  	ld hl,F15_044
041F2D 22 3A B5 04 2928*  	ld (cur_filename),hl
041F31 11 C5 C2 04 2929*  	ld de,filedata
041F35 01 00 00 01 2930*  	ld bc,65536
041F39 3E 01       2931*  	ld a,mos_load
041F3B 5B CF       2932*  	RST.LIL 08h
041F3D 21 95 01 00 2933*  	ld hl,BUF_15_044
041F41 01 40 01 00 2934*  	ld bc,320
041F45 11 A0 00 00 2935*  	ld de,160
041F49 DD 21 00 C8 2936*  	ld ix,51200
       00          
041F4E CD A5 B6 04 2937*  	call vdu_load_img
041F52 C9          2938*  	ret
041F53             2939*  
041F53             2940*  ld_16_004:
041F53 21 8D 3F 04 2941*  	ld hl,F16_004
041F57 22 3A B5 04 2942*  	ld (cur_filename),hl
041F5B 11 C5 C2 04 2943*  	ld de,filedata
041F5F 01 00 00 01 2944*  	ld bc,65536
041F63 3E 01       2945*  	ld a,mos_load
041F65 5B CF       2946*  	RST.LIL 08h
041F67 21 96 01 00 2947*  	ld hl,BUF_16_004
041F6B 01 24 00 00 2948*  	ld bc,36
041F6F 11 23 00 00 2949*  	ld de,35
041F73 DD 21 EC 04 2950*  	ld ix,1260
       00          
041F78 CD A5 B6 04 2951*  	call vdu_load_img
041F7C C9          2952*  	ret
041F7D             2953*  
041F7D             2954*  ld_16_009:
041F7D 21 A1 3F 04 2955*  	ld hl,F16_009
041F81 22 3A B5 04 2956*  	ld (cur_filename),hl
041F85 11 C5 C2 04 2957*  	ld de,filedata
041F89 01 00 00 01 2958*  	ld bc,65536
041F8D 3E 01       2959*  	ld a,mos_load
041F8F 5B CF       2960*  	RST.LIL 08h
041F91 21 97 01 00 2961*  	ld hl,BUF_16_009
041F95 01 23 00 00 2962*  	ld bc,35
041F99 11 2D 00 00 2963*  	ld de,45
041F9D DD 21 27 06 2964*  	ld ix,1575
       00          
041FA2 CD A5 B6 04 2965*  	call vdu_load_img
041FA6 C9          2966*  	ret
041FA7             2967*  
041FA7             2968*  ld_16_010:
041FA7 21 B5 3F 04 2969*  	ld hl,F16_010
041FAB 22 3A B5 04 2970*  	ld (cur_filename),hl
041FAF 11 C5 C2 04 2971*  	ld de,filedata
041FB3 01 00 00 01 2972*  	ld bc,65536
041FB7 3E 01       2973*  	ld a,mos_load
041FB9 5B CF       2974*  	RST.LIL 08h
041FBB 21 98 01 00 2975*  	ld hl,BUF_16_010
041FBF 01 19 00 00 2976*  	ld bc,25
041FC3 11 2D 00 00 2977*  	ld de,45
041FC7 DD 21 65 04 2978*  	ld ix,1125
       00          
041FCC CD A5 B6 04 2979*  	call vdu_load_img
041FD0 C9          2980*  	ret
041FD1             2981*  
041FD1             2982*  ld_16_011:
041FD1 21 C9 3F 04 2983*  	ld hl,F16_011
041FD5 22 3A B5 04 2984*  	ld (cur_filename),hl
041FD9 11 C5 C2 04 2985*  	ld de,filedata
041FDD 01 00 00 01 2986*  	ld bc,65536
041FE1 3E 01       2987*  	ld a,mos_load
041FE3 5B CF       2988*  	RST.LIL 08h
041FE5 21 99 01 00 2989*  	ld hl,BUF_16_011
041FE9 01 0F 00 00 2990*  	ld bc,15
041FED 11 2D 00 00 2991*  	ld de,45
041FF1 DD 21 A3 02 2992*  	ld ix,675
       00          
041FF6 CD A5 B6 04 2993*  	call vdu_load_img
041FFA C9          2994*  	ret
041FFB             2995*  
041FFB             2996*  ld_16_012:
041FFB 21 DD 3F 04 2997*  	ld hl,F16_012
041FFF 22 3A B5 04 2998*  	ld (cur_filename),hl
042003 11 C5 C2 04 2999*  	ld de,filedata
042007 01 00 00 01 3000*  	ld bc,65536
04200B 3E 01       3001*  	ld a,mos_load
04200D 5B CF       3002*  	RST.LIL 08h
04200F 21 9A 01 00 3003*  	ld hl,BUF_16_012
042013 01 05 00 00 3004*  	ld bc,5
042017 11 2D 00 00 3005*  	ld de,45
04201B DD 21 E1 00 3006*  	ld ix,225
       00          
042020 CD A5 B6 04 3007*  	call vdu_load_img
042024 C9          3008*  	ret
042025             3009*  
042025             3010*  ld_16_013:
042025 21 F1 3F 04 3011*  	ld hl,F16_013
042029 22 3A B5 04 3012*  	ld (cur_filename),hl
04202D 11 C5 C2 04 3013*  	ld de,filedata
042031 01 00 00 01 3014*  	ld bc,65536
042035 3E 01       3015*  	ld a,mos_load
042037 5B CF       3016*  	RST.LIL 08h
042039 21 9B 01 00 3017*  	ld hl,BUF_16_013
04203D 01 05 00 00 3018*  	ld bc,5
042041 11 2B 00 00 3019*  	ld de,43
042045 DD 21 D7 00 3020*  	ld ix,215
       00          
04204A CD A5 B6 04 3021*  	call vdu_load_img
04204E C9          3022*  	ret
04204F             3023*  
04204F             3024*  ld_16_014:
04204F 21 05 40 04 3025*  	ld hl,F16_014
042053 22 3A B5 04 3026*  	ld (cur_filename),hl
042057 11 C5 C2 04 3027*  	ld de,filedata
04205B 01 00 00 01 3028*  	ld bc,65536
04205F 3E 01       3029*  	ld a,mos_load
042061 5B CF       3030*  	RST.LIL 08h
042063 21 9C 01 00 3031*  	ld hl,BUF_16_014
042067 01 0F 00 00 3032*  	ld bc,15
04206B 11 2D 00 00 3033*  	ld de,45
04206F DD 21 A3 02 3034*  	ld ix,675
       00          
042074 CD A5 B6 04 3035*  	call vdu_load_img
042078 C9          3036*  	ret
042079             3037*  
042079             3038*  ld_16_015:
042079 21 19 40 04 3039*  	ld hl,F16_015
04207D 22 3A B5 04 3040*  	ld (cur_filename),hl
042081 11 C5 C2 04 3041*  	ld de,filedata
042085 01 00 00 01 3042*  	ld bc,65536
042089 3E 01       3043*  	ld a,mos_load
04208B 5B CF       3044*  	RST.LIL 08h
04208D 21 9D 01 00 3045*  	ld hl,BUF_16_015
042091 01 19 00 00 3046*  	ld bc,25
042095 11 2D 00 00 3047*  	ld de,45
042099 DD 21 65 04 3048*  	ld ix,1125
       00          
04209E CD A5 B6 04 3049*  	call vdu_load_img
0420A2 C9          3050*  	ret
0420A3             3051*  
0420A3             3052*  ld_16_016:
0420A3 21 2D 40 04 3053*  	ld hl,F16_016
0420A7 22 3A B5 04 3054*  	ld (cur_filename),hl
0420AB 11 C5 C2 04 3055*  	ld de,filedata
0420AF 01 00 00 01 3056*  	ld bc,65536
0420B3 3E 01       3057*  	ld a,mos_load
0420B5 5B CF       3058*  	RST.LIL 08h
0420B7 21 9E 01 00 3059*  	ld hl,BUF_16_016
0420BB 01 23 00 00 3060*  	ld bc,35
0420BF 11 2D 00 00 3061*  	ld de,45
0420C3 DD 21 27 06 3062*  	ld ix,1575
       00          
0420C8 CD A5 B6 04 3063*  	call vdu_load_img
0420CC C9          3064*  	ret
0420CD             3065*  
0420CD             3066*  ld_16_020:
0420CD 21 41 40 04 3067*  	ld hl,F16_020
0420D1 22 3A B5 04 3068*  	ld (cur_filename),hl
0420D5 11 C5 C2 04 3069*  	ld de,filedata
0420D9 01 00 00 01 3070*  	ld bc,65536
0420DD 3E 01       3071*  	ld a,mos_load
0420DF 5B CF       3072*  	RST.LIL 08h
0420E1 21 9F 01 00 3073*  	ld hl,BUF_16_020
0420E5 01 2E 00 00 3074*  	ld bc,46
0420E9 11 2D 00 00 3075*  	ld de,45
0420ED DD 21 16 08 3076*  	ld ix,2070
       00          
0420F2 CD A5 B6 04 3077*  	call vdu_load_img
0420F6 C9          3078*  	ret
0420F7             3079*  
0420F7             3080*  ld_16_024:
0420F7 21 55 40 04 3081*  	ld hl,F16_024
0420FB 22 3A B5 04 3082*  	ld (cur_filename),hl
0420FF 11 C5 C2 04 3083*  	ld de,filedata
042103 01 00 00 01 3084*  	ld bc,65536
042107 3E 01       3085*  	ld a,mos_load
042109 5B CF       3086*  	RST.LIL 08h
04210B 21 A0 01 00 3087*  	ld hl,BUF_16_024
04210F 01 2E 00 00 3088*  	ld bc,46
042113 11 40 00 00 3089*  	ld de,64
042117 DD 21 80 0B 3090*  	ld ix,2944
       00          
04211C CD A5 B6 04 3091*  	call vdu_load_img
042120 C9          3092*  	ret
042121             3093*  
042121             3094*  ld_16_025:
042121 21 69 40 04 3095*  	ld hl,F16_025
042125 22 3A B5 04 3096*  	ld (cur_filename),hl
042129 11 C5 C2 04 3097*  	ld de,filedata
04212D 01 00 00 01 3098*  	ld bc,65536
042131 3E 01       3099*  	ld a,mos_load
042133 5B CF       3100*  	RST.LIL 08h
042135 21 A1 01 00 3101*  	ld hl,BUF_16_025
042139 01 1C 00 00 3102*  	ld bc,28
04213D 11 40 00 00 3103*  	ld de,64
042141 DD 21 00 07 3104*  	ld ix,1792
       00          
042146 CD A5 B6 04 3105*  	call vdu_load_img
04214A C9          3106*  	ret
04214B             3107*  
04214B             3108*  ld_16_026:
04214B 21 7D 40 04 3109*  	ld hl,F16_026
04214F 22 3A B5 04 3110*  	ld (cur_filename),hl
042153 11 C5 C2 04 3111*  	ld de,filedata
042157 01 00 00 01 3112*  	ld bc,65536
04215B 3E 01       3113*  	ld a,mos_load
04215D 5B CF       3114*  	RST.LIL 08h
04215F 21 A2 01 00 3115*  	ld hl,BUF_16_026
042163 01 09 00 00 3116*  	ld bc,9
042167 11 40 00 00 3117*  	ld de,64
04216B DD 21 40 02 3118*  	ld ix,576
       00          
042170 CD A5 B6 04 3119*  	call vdu_load_img
042174 C9          3120*  	ret
042175             3121*  
042175             3122*  ld_16_027:
042175 21 91 40 04 3123*  	ld hl,F16_027
042179 22 3A B5 04 3124*  	ld (cur_filename),hl
04217D 11 C5 C2 04 3125*  	ld de,filedata
042181 01 00 00 01 3126*  	ld bc,65536
042185 3E 01       3127*  	ld a,mos_load
042187 5B CF       3128*  	RST.LIL 08h
042189 21 A3 01 00 3129*  	ld hl,BUF_16_027
04218D 01 0A 00 00 3130*  	ld bc,10
042191 11 3E 00 00 3131*  	ld de,62
042195 DD 21 6C 02 3132*  	ld ix,620
       00          
04219A CD A5 B6 04 3133*  	call vdu_load_img
04219E C9          3134*  	ret
04219F             3135*  
04219F             3136*  ld_16_028:
04219F 21 A5 40 04 3137*  	ld hl,F16_028
0421A3 22 3A B5 04 3138*  	ld (cur_filename),hl
0421A7 11 C5 C2 04 3139*  	ld de,filedata
0421AB 01 00 00 01 3140*  	ld bc,65536
0421AF 3E 01       3141*  	ld a,mos_load
0421B1 5B CF       3142*  	RST.LIL 08h
0421B3 21 A4 01 00 3143*  	ld hl,BUF_16_028
0421B7 01 1C 00 00 3144*  	ld bc,28
0421BB 11 40 00 00 3145*  	ld de,64
0421BF DD 21 00 07 3146*  	ld ix,1792
       00          
0421C4 CD A5 B6 04 3147*  	call vdu_load_img
0421C8 C9          3148*  	ret
0421C9             3149*  
0421C9             3150*  ld_16_029:
0421C9 21 B9 40 04 3151*  	ld hl,F16_029
0421CD 22 3A B5 04 3152*  	ld (cur_filename),hl
0421D1 11 C5 C2 04 3153*  	ld de,filedata
0421D5 01 00 00 01 3154*  	ld bc,65536
0421D9 3E 01       3155*  	ld a,mos_load
0421DB 5B CF       3156*  	RST.LIL 08h
0421DD 21 A5 01 00 3157*  	ld hl,BUF_16_029
0421E1 01 2F 00 00 3158*  	ld bc,47
0421E5 11 40 00 00 3159*  	ld de,64
0421E9 DD 21 C0 0B 3160*  	ld ix,3008
       00          
0421EE CD A5 B6 04 3161*  	call vdu_load_img
0421F2 C9          3162*  	ret
0421F3             3163*  
0421F3             3164*  ld_16_032:
0421F3 21 CD 40 04 3165*  	ld hl,F16_032
0421F7 22 3A B5 04 3166*  	ld (cur_filename),hl
0421FB 11 C5 C2 04 3167*  	ld de,filedata
0421FF 01 00 00 01 3168*  	ld bc,65536
042203 3E 01       3169*  	ld a,mos_load
042205 5B CF       3170*  	RST.LIL 08h
042207 21 A6 01 00 3171*  	ld hl,BUF_16_032
04220B 01 41 00 00 3172*  	ld bc,65
04220F 11 40 00 00 3173*  	ld de,64
042213 DD 21 40 10 3174*  	ld ix,4160
       00          
042218 CD A5 B6 04 3175*  	call vdu_load_img
04221C C9          3176*  	ret
04221D             3177*  
04221D             3178*  ld_16_035:
04221D 21 E1 40 04 3179*  	ld hl,F16_035
042221 22 3A B5 04 3180*  	ld (cur_filename),hl
042225 11 C5 C2 04 3181*  	ld de,filedata
042229 01 00 00 01 3182*  	ld bc,65536
04222D 3E 01       3183*  	ld a,mos_load
04222F 5B CF       3184*  	RST.LIL 08h
042231 21 A7 01 00 3185*  	ld hl,BUF_16_035
042235 01 3F 00 00 3186*  	ld bc,63
042239 11 6B 00 00 3187*  	ld de,107
04223D DD 21 55 1A 3188*  	ld ix,6741
       00          
042242 CD A5 B6 04 3189*  	call vdu_load_img
042246 C9          3190*  	ret
042247             3191*  
042247             3192*  ld_16_036:
042247 21 F5 40 04 3193*  	ld hl,F16_036
04224B 22 3A B5 04 3194*  	ld (cur_filename),hl
04224F 11 C5 C2 04 3195*  	ld de,filedata
042253 01 00 00 01 3196*  	ld bc,65536
042257 3E 01       3197*  	ld a,mos_load
042259 5B CF       3198*  	RST.LIL 08h
04225B 21 A8 01 00 3199*  	ld hl,BUF_16_036
04225F 01 16 00 00 3200*  	ld bc,22
042263 11 6B 00 00 3201*  	ld de,107
042267 DD 21 32 09 3202*  	ld ix,2354
       00          
04226C CD A5 B6 04 3203*  	call vdu_load_img
042270 C9          3204*  	ret
042271             3205*  
042271             3206*  ld_16_037:
042271 21 09 41 04 3207*  	ld hl,F16_037
042275 22 3A B5 04 3208*  	ld (cur_filename),hl
042279 11 C5 C2 04 3209*  	ld de,filedata
04227D 01 00 00 01 3210*  	ld bc,65536
042281 3E 01       3211*  	ld a,mos_load
042283 5B CF       3212*  	RST.LIL 08h
042285 21 A9 01 00 3213*  	ld hl,BUF_16_037
042289 01 15 00 00 3214*  	ld bc,21
04228D 11 69 00 00 3215*  	ld de,105
042291 DD 21 9D 08 3216*  	ld ix,2205
       00          
042296 CD A5 B6 04 3217*  	call vdu_load_img
04229A C9          3218*  	ret
04229B             3219*  
04229B             3220*  ld_16_038:
04229B 21 1D 41 04 3221*  	ld hl,F16_038
04229F 22 3A B5 04 3222*  	ld (cur_filename),hl
0422A3 11 C5 C2 04 3223*  	ld de,filedata
0422A7 01 00 00 01 3224*  	ld bc,65536
0422AB 3E 01       3225*  	ld a,mos_load
0422AD 5B CF       3226*  	RST.LIL 08h
0422AF 21 AA 01 00 3227*  	ld hl,BUF_16_038
0422B3 01 3F 00 00 3228*  	ld bc,63
0422B7 11 6B 00 00 3229*  	ld de,107
0422BB DD 21 55 1A 3230*  	ld ix,6741
       00          
0422C0 CD A5 B6 04 3231*  	call vdu_load_img
0422C4 C9          3232*  	ret
0422C5             3233*  
0422C5             3234*  ld_16_040:
0422C5 21 31 41 04 3235*  	ld hl,F16_040
0422C9 22 3A B5 04 3236*  	ld (cur_filename),hl
0422CD 11 C5 C2 04 3237*  	ld de,filedata
0422D1 01 00 00 01 3238*  	ld bc,65536
0422D5 3E 01       3239*  	ld a,mos_load
0422D7 5B CF       3240*  	RST.LIL 08h
0422D9 21 AB 01 00 3241*  	ld hl,BUF_16_040
0422DD 01 6C 00 00 3242*  	ld bc,108
0422E1 11 6B 00 00 3243*  	ld de,107
0422E5 DD 21 24 2D 3244*  	ld ix,11556
       00          
0422EA CD A5 B6 04 3245*  	call vdu_load_img
0422EE C9          3246*  	ret
0422EF             3247*  
0422EF             3248*  ld_16_042:
0422EF 21 45 41 04 3249*  	ld hl,F16_042
0422F3 22 3A B5 04 3250*  	ld (cur_filename),hl
0422F7 11 C5 C2 04 3251*  	ld de,filedata
0422FB 01 00 00 01 3252*  	ld bc,65536
0422FF 3E 01       3253*  	ld a,mos_load
042301 5B CF       3254*  	RST.LIL 08h
042303 21 AC 01 00 3255*  	ld hl,BUF_16_042
042307 01 6A 00 00 3256*  	ld bc,106
04230B 11 A0 00 00 3257*  	ld de,160
04230F DD 21 40 42 3258*  	ld ix,16960
       00          
042314 CD A5 B6 04 3259*  	call vdu_load_img
042318 C9          3260*  	ret
042319             3261*  
042319             3262*  ld_16_043:
042319 21 59 41 04 3263*  	ld hl,F16_043
04231D 22 3A B5 04 3264*  	ld (cur_filename),hl
042321 11 C5 C2 04 3265*  	ld de,filedata
042325 01 00 00 01 3266*  	ld bc,65536
042329 3E 01       3267*  	ld a,mos_load
04232B 5B CF       3268*  	RST.LIL 08h
04232D 21 AD 01 00 3269*  	ld hl,BUF_16_043
042331 01 6B 00 00 3270*  	ld bc,107
042335 11 A0 00 00 3271*  	ld de,160
042339 DD 21 E0 42 3272*  	ld ix,17120
       00          
04233E CD A5 B6 04 3273*  	call vdu_load_img
042342 C9          3274*  	ret
042343             3275*  
042343             3276*  ld_16_044:
042343 21 6D 41 04 3277*  	ld hl,F16_044
042347 22 3A B5 04 3278*  	ld (cur_filename),hl
04234B 11 C5 C2 04 3279*  	ld de,filedata
04234F 01 00 00 01 3280*  	ld bc,65536
042353 3E 01       3281*  	ld a,mos_load
042355 5B CF       3282*  	RST.LIL 08h
042357 21 AE 01 00 3283*  	ld hl,BUF_16_044
04235B 01 40 01 00 3284*  	ld bc,320
04235F 11 A0 00 00 3285*  	ld de,160
042363 DD 21 00 C8 3286*  	ld ix,51200
       00          
042368 CD A5 B6 04 3287*  	call vdu_load_img
04236C C9          3288*  	ret
04236D             3289*  
04236D             3290*  ld_17_004:
04236D 21 81 41 04 3291*  	ld hl,F17_004
042371 22 3A B5 04 3292*  	ld (cur_filename),hl
042375 11 C5 C2 04 3293*  	ld de,filedata
042379 01 00 00 01 3294*  	ld bc,65536
04237D 3E 01       3295*  	ld a,mos_load
04237F 5B CF       3296*  	RST.LIL 08h
042381 21 AF 01 00 3297*  	ld hl,BUF_17_004
042385 01 24 00 00 3298*  	ld bc,36
042389 11 23 00 00 3299*  	ld de,35
04238D DD 21 EC 04 3300*  	ld ix,1260
       00          
042392 CD A5 B6 04 3301*  	call vdu_load_img
042396 C9          3302*  	ret
042397             3303*  
042397             3304*  ld_17_009:
042397 21 95 41 04 3305*  	ld hl,F17_009
04239B 22 3A B5 04 3306*  	ld (cur_filename),hl
04239F 11 C5 C2 04 3307*  	ld de,filedata
0423A3 01 00 00 01 3308*  	ld bc,65536
0423A7 3E 01       3309*  	ld a,mos_load
0423A9 5B CF       3310*  	RST.LIL 08h
0423AB 21 B0 01 00 3311*  	ld hl,BUF_17_009
0423AF 01 23 00 00 3312*  	ld bc,35
0423B3 11 2D 00 00 3313*  	ld de,45
0423B7 DD 21 27 06 3314*  	ld ix,1575
       00          
0423BC CD A5 B6 04 3315*  	call vdu_load_img
0423C0 C9          3316*  	ret
0423C1             3317*  
0423C1             3318*  ld_17_010:
0423C1 21 A9 41 04 3319*  	ld hl,F17_010
0423C5 22 3A B5 04 3320*  	ld (cur_filename),hl
0423C9 11 C5 C2 04 3321*  	ld de,filedata
0423CD 01 00 00 01 3322*  	ld bc,65536
0423D1 3E 01       3323*  	ld a,mos_load
0423D3 5B CF       3324*  	RST.LIL 08h
0423D5 21 B1 01 00 3325*  	ld hl,BUF_17_010
0423D9 01 19 00 00 3326*  	ld bc,25
0423DD 11 2D 00 00 3327*  	ld de,45
0423E1 DD 21 65 04 3328*  	ld ix,1125
       00          
0423E6 CD A5 B6 04 3329*  	call vdu_load_img
0423EA C9          3330*  	ret
0423EB             3331*  
0423EB             3332*  ld_17_011:
0423EB 21 BD 41 04 3333*  	ld hl,F17_011
0423EF 22 3A B5 04 3334*  	ld (cur_filename),hl
0423F3 11 C5 C2 04 3335*  	ld de,filedata
0423F7 01 00 00 01 3336*  	ld bc,65536
0423FB 3E 01       3337*  	ld a,mos_load
0423FD 5B CF       3338*  	RST.LIL 08h
0423FF 21 B2 01 00 3339*  	ld hl,BUF_17_011
042403 01 0F 00 00 3340*  	ld bc,15
042407 11 2D 00 00 3341*  	ld de,45
04240B DD 21 A3 02 3342*  	ld ix,675
       00          
042410 CD A5 B6 04 3343*  	call vdu_load_img
042414 C9          3344*  	ret
042415             3345*  
042415             3346*  ld_17_012:
042415 21 D1 41 04 3347*  	ld hl,F17_012
042419 22 3A B5 04 3348*  	ld (cur_filename),hl
04241D 11 C5 C2 04 3349*  	ld de,filedata
042421 01 00 00 01 3350*  	ld bc,65536
042425 3E 01       3351*  	ld a,mos_load
042427 5B CF       3352*  	RST.LIL 08h
042429 21 B3 01 00 3353*  	ld hl,BUF_17_012
04242D 01 05 00 00 3354*  	ld bc,5
042431 11 2D 00 00 3355*  	ld de,45
042435 DD 21 E1 00 3356*  	ld ix,225
       00          
04243A CD A5 B6 04 3357*  	call vdu_load_img
04243E C9          3358*  	ret
04243F             3359*  
04243F             3360*  ld_17_013:
04243F 21 E5 41 04 3361*  	ld hl,F17_013
042443 22 3A B5 04 3362*  	ld (cur_filename),hl
042447 11 C5 C2 04 3363*  	ld de,filedata
04244B 01 00 00 01 3364*  	ld bc,65536
04244F 3E 01       3365*  	ld a,mos_load
042451 5B CF       3366*  	RST.LIL 08h
042453 21 B4 01 00 3367*  	ld hl,BUF_17_013
042457 01 05 00 00 3368*  	ld bc,5
04245B 11 2B 00 00 3369*  	ld de,43
04245F DD 21 D7 00 3370*  	ld ix,215
       00          
042464 CD A5 B6 04 3371*  	call vdu_load_img
042468 C9          3372*  	ret
042469             3373*  
042469             3374*  ld_17_014:
042469 21 F9 41 04 3375*  	ld hl,F17_014
04246D 22 3A B5 04 3376*  	ld (cur_filename),hl
042471 11 C5 C2 04 3377*  	ld de,filedata
042475 01 00 00 01 3378*  	ld bc,65536
042479 3E 01       3379*  	ld a,mos_load
04247B 5B CF       3380*  	RST.LIL 08h
04247D 21 B5 01 00 3381*  	ld hl,BUF_17_014
042481 01 0F 00 00 3382*  	ld bc,15
042485 11 2D 00 00 3383*  	ld de,45
042489 DD 21 A3 02 3384*  	ld ix,675
       00          
04248E CD A5 B6 04 3385*  	call vdu_load_img
042492 C9          3386*  	ret
042493             3387*  
042493             3388*  ld_17_015:
042493 21 0D 42 04 3389*  	ld hl,F17_015
042497 22 3A B5 04 3390*  	ld (cur_filename),hl
04249B 11 C5 C2 04 3391*  	ld de,filedata
04249F 01 00 00 01 3392*  	ld bc,65536
0424A3 3E 01       3393*  	ld a,mos_load
0424A5 5B CF       3394*  	RST.LIL 08h
0424A7 21 B6 01 00 3395*  	ld hl,BUF_17_015
0424AB 01 19 00 00 3396*  	ld bc,25
0424AF 11 2D 00 00 3397*  	ld de,45
0424B3 DD 21 65 04 3398*  	ld ix,1125
       00          
0424B8 CD A5 B6 04 3399*  	call vdu_load_img
0424BC C9          3400*  	ret
0424BD             3401*  
0424BD             3402*  ld_17_016:
0424BD 21 21 42 04 3403*  	ld hl,F17_016
0424C1 22 3A B5 04 3404*  	ld (cur_filename),hl
0424C5 11 C5 C2 04 3405*  	ld de,filedata
0424C9 01 00 00 01 3406*  	ld bc,65536
0424CD 3E 01       3407*  	ld a,mos_load
0424CF 5B CF       3408*  	RST.LIL 08h
0424D1 21 B7 01 00 3409*  	ld hl,BUF_17_016
0424D5 01 23 00 00 3410*  	ld bc,35
0424D9 11 2D 00 00 3411*  	ld de,45
0424DD DD 21 27 06 3412*  	ld ix,1575
       00          
0424E2 CD A5 B6 04 3413*  	call vdu_load_img
0424E6 C9          3414*  	ret
0424E7             3415*  
0424E7             3416*  ld_17_020:
0424E7 21 35 42 04 3417*  	ld hl,F17_020
0424EB 22 3A B5 04 3418*  	ld (cur_filename),hl
0424EF 11 C5 C2 04 3419*  	ld de,filedata
0424F3 01 00 00 01 3420*  	ld bc,65536
0424F7 3E 01       3421*  	ld a,mos_load
0424F9 5B CF       3422*  	RST.LIL 08h
0424FB 21 B8 01 00 3423*  	ld hl,BUF_17_020
0424FF 01 2E 00 00 3424*  	ld bc,46
042503 11 2D 00 00 3425*  	ld de,45
042507 DD 21 16 08 3426*  	ld ix,2070
       00          
04250C CD A5 B6 04 3427*  	call vdu_load_img
042510 C9          3428*  	ret
042511             3429*  
042511             3430*  ld_17_024:
042511 21 49 42 04 3431*  	ld hl,F17_024
042515 22 3A B5 04 3432*  	ld (cur_filename),hl
042519 11 C5 C2 04 3433*  	ld de,filedata
04251D 01 00 00 01 3434*  	ld bc,65536
042521 3E 01       3435*  	ld a,mos_load
042523 5B CF       3436*  	RST.LIL 08h
042525 21 B9 01 00 3437*  	ld hl,BUF_17_024
042529 01 2E 00 00 3438*  	ld bc,46
04252D 11 40 00 00 3439*  	ld de,64
042531 DD 21 80 0B 3440*  	ld ix,2944
       00          
042536 CD A5 B6 04 3441*  	call vdu_load_img
04253A C9          3442*  	ret
04253B             3443*  
04253B             3444*  ld_17_025:
04253B 21 5D 42 04 3445*  	ld hl,F17_025
04253F 22 3A B5 04 3446*  	ld (cur_filename),hl
042543 11 C5 C2 04 3447*  	ld de,filedata
042547 01 00 00 01 3448*  	ld bc,65536
04254B 3E 01       3449*  	ld a,mos_load
04254D 5B CF       3450*  	RST.LIL 08h
04254F 21 BA 01 00 3451*  	ld hl,BUF_17_025
042553 01 1C 00 00 3452*  	ld bc,28
042557 11 40 00 00 3453*  	ld de,64
04255B DD 21 00 07 3454*  	ld ix,1792
       00          
042560 CD A5 B6 04 3455*  	call vdu_load_img
042564 C9          3456*  	ret
042565             3457*  
042565             3458*  ld_17_026:
042565 21 71 42 04 3459*  	ld hl,F17_026
042569 22 3A B5 04 3460*  	ld (cur_filename),hl
04256D 11 C5 C2 04 3461*  	ld de,filedata
042571 01 00 00 01 3462*  	ld bc,65536
042575 3E 01       3463*  	ld a,mos_load
042577 5B CF       3464*  	RST.LIL 08h
042579 21 BB 01 00 3465*  	ld hl,BUF_17_026
04257D 01 09 00 00 3466*  	ld bc,9
042581 11 40 00 00 3467*  	ld de,64
042585 DD 21 40 02 3468*  	ld ix,576
       00          
04258A CD A5 B6 04 3469*  	call vdu_load_img
04258E C9          3470*  	ret
04258F             3471*  
04258F             3472*  ld_17_027:
04258F 21 85 42 04 3473*  	ld hl,F17_027
042593 22 3A B5 04 3474*  	ld (cur_filename),hl
042597 11 C5 C2 04 3475*  	ld de,filedata
04259B 01 00 00 01 3476*  	ld bc,65536
04259F 3E 01       3477*  	ld a,mos_load
0425A1 5B CF       3478*  	RST.LIL 08h
0425A3 21 BC 01 00 3479*  	ld hl,BUF_17_027
0425A7 01 0A 00 00 3480*  	ld bc,10
0425AB 11 3E 00 00 3481*  	ld de,62
0425AF DD 21 6C 02 3482*  	ld ix,620
       00          
0425B4 CD A5 B6 04 3483*  	call vdu_load_img
0425B8 C9          3484*  	ret
0425B9             3485*  
0425B9             3486*  ld_17_028:
0425B9 21 99 42 04 3487*  	ld hl,F17_028
0425BD 22 3A B5 04 3488*  	ld (cur_filename),hl
0425C1 11 C5 C2 04 3489*  	ld de,filedata
0425C5 01 00 00 01 3490*  	ld bc,65536
0425C9 3E 01       3491*  	ld a,mos_load
0425CB 5B CF       3492*  	RST.LIL 08h
0425CD 21 BD 01 00 3493*  	ld hl,BUF_17_028
0425D1 01 1C 00 00 3494*  	ld bc,28
0425D5 11 40 00 00 3495*  	ld de,64
0425D9 DD 21 00 07 3496*  	ld ix,1792
       00          
0425DE CD A5 B6 04 3497*  	call vdu_load_img
0425E2 C9          3498*  	ret
0425E3             3499*  
0425E3             3500*  ld_17_029:
0425E3 21 AD 42 04 3501*  	ld hl,F17_029
0425E7 22 3A B5 04 3502*  	ld (cur_filename),hl
0425EB 11 C5 C2 04 3503*  	ld de,filedata
0425EF 01 00 00 01 3504*  	ld bc,65536
0425F3 3E 01       3505*  	ld a,mos_load
0425F5 5B CF       3506*  	RST.LIL 08h
0425F7 21 BE 01 00 3507*  	ld hl,BUF_17_029
0425FB 01 2F 00 00 3508*  	ld bc,47
0425FF 11 40 00 00 3509*  	ld de,64
042603 DD 21 C0 0B 3510*  	ld ix,3008
       00          
042608 CD A5 B6 04 3511*  	call vdu_load_img
04260C C9          3512*  	ret
04260D             3513*  
04260D             3514*  ld_17_032:
04260D 21 C1 42 04 3515*  	ld hl,F17_032
042611 22 3A B5 04 3516*  	ld (cur_filename),hl
042615 11 C5 C2 04 3517*  	ld de,filedata
042619 01 00 00 01 3518*  	ld bc,65536
04261D 3E 01       3519*  	ld a,mos_load
04261F 5B CF       3520*  	RST.LIL 08h
042621 21 BF 01 00 3521*  	ld hl,BUF_17_032
042625 01 41 00 00 3522*  	ld bc,65
042629 11 40 00 00 3523*  	ld de,64
04262D DD 21 40 10 3524*  	ld ix,4160
       00          
042632 CD A5 B6 04 3525*  	call vdu_load_img
042636 C9          3526*  	ret
042637             3527*  
042637             3528*  ld_17_035:
042637 21 D5 42 04 3529*  	ld hl,F17_035
04263B 22 3A B5 04 3530*  	ld (cur_filename),hl
04263F 11 C5 C2 04 3531*  	ld de,filedata
042643 01 00 00 01 3532*  	ld bc,65536
042647 3E 01       3533*  	ld a,mos_load
042649 5B CF       3534*  	RST.LIL 08h
04264B 21 C0 01 00 3535*  	ld hl,BUF_17_035
04264F 01 3F 00 00 3536*  	ld bc,63
042653 11 6B 00 00 3537*  	ld de,107
042657 DD 21 55 1A 3538*  	ld ix,6741
       00          
04265C CD A5 B6 04 3539*  	call vdu_load_img
042660 C9          3540*  	ret
042661             3541*  
042661             3542*  ld_17_036:
042661 21 E9 42 04 3543*  	ld hl,F17_036
042665 22 3A B5 04 3544*  	ld (cur_filename),hl
042669 11 C5 C2 04 3545*  	ld de,filedata
04266D 01 00 00 01 3546*  	ld bc,65536
042671 3E 01       3547*  	ld a,mos_load
042673 5B CF       3548*  	RST.LIL 08h
042675 21 C1 01 00 3549*  	ld hl,BUF_17_036
042679 01 16 00 00 3550*  	ld bc,22
04267D 11 6B 00 00 3551*  	ld de,107
042681 DD 21 32 09 3552*  	ld ix,2354
       00          
042686 CD A5 B6 04 3553*  	call vdu_load_img
04268A C9          3554*  	ret
04268B             3555*  
04268B             3556*  ld_17_037:
04268B 21 FD 42 04 3557*  	ld hl,F17_037
04268F 22 3A B5 04 3558*  	ld (cur_filename),hl
042693 11 C5 C2 04 3559*  	ld de,filedata
042697 01 00 00 01 3560*  	ld bc,65536
04269B 3E 01       3561*  	ld a,mos_load
04269D 5B CF       3562*  	RST.LIL 08h
04269F 21 C2 01 00 3563*  	ld hl,BUF_17_037
0426A3 01 15 00 00 3564*  	ld bc,21
0426A7 11 69 00 00 3565*  	ld de,105
0426AB DD 21 9D 08 3566*  	ld ix,2205
       00          
0426B0 CD A5 B6 04 3567*  	call vdu_load_img
0426B4 C9          3568*  	ret
0426B5             3569*  
0426B5             3570*  ld_17_038:
0426B5 21 11 43 04 3571*  	ld hl,F17_038
0426B9 22 3A B5 04 3572*  	ld (cur_filename),hl
0426BD 11 C5 C2 04 3573*  	ld de,filedata
0426C1 01 00 00 01 3574*  	ld bc,65536
0426C5 3E 01       3575*  	ld a,mos_load
0426C7 5B CF       3576*  	RST.LIL 08h
0426C9 21 C3 01 00 3577*  	ld hl,BUF_17_038
0426CD 01 3F 00 00 3578*  	ld bc,63
0426D1 11 6B 00 00 3579*  	ld de,107
0426D5 DD 21 55 1A 3580*  	ld ix,6741
       00          
0426DA CD A5 B6 04 3581*  	call vdu_load_img
0426DE C9          3582*  	ret
0426DF             3583*  
0426DF             3584*  ld_17_040:
0426DF 21 25 43 04 3585*  	ld hl,F17_040
0426E3 22 3A B5 04 3586*  	ld (cur_filename),hl
0426E7 11 C5 C2 04 3587*  	ld de,filedata
0426EB 01 00 00 01 3588*  	ld bc,65536
0426EF 3E 01       3589*  	ld a,mos_load
0426F1 5B CF       3590*  	RST.LIL 08h
0426F3 21 C4 01 00 3591*  	ld hl,BUF_17_040
0426F7 01 6C 00 00 3592*  	ld bc,108
0426FB 11 6B 00 00 3593*  	ld de,107
0426FF DD 21 24 2D 3594*  	ld ix,11556
       00          
042704 CD A5 B6 04 3595*  	call vdu_load_img
042708 C9          3596*  	ret
042709             3597*  
042709             3598*  ld_17_042:
042709 21 39 43 04 3599*  	ld hl,F17_042
04270D 22 3A B5 04 3600*  	ld (cur_filename),hl
042711 11 C5 C2 04 3601*  	ld de,filedata
042715 01 00 00 01 3602*  	ld bc,65536
042719 3E 01       3603*  	ld a,mos_load
04271B 5B CF       3604*  	RST.LIL 08h
04271D 21 C5 01 00 3605*  	ld hl,BUF_17_042
042721 01 6A 00 00 3606*  	ld bc,106
042725 11 A0 00 00 3607*  	ld de,160
042729 DD 21 40 42 3608*  	ld ix,16960
       00          
04272E CD A5 B6 04 3609*  	call vdu_load_img
042732 C9          3610*  	ret
042733             3611*  
042733             3612*  ld_17_043:
042733 21 4D 43 04 3613*  	ld hl,F17_043
042737 22 3A B5 04 3614*  	ld (cur_filename),hl
04273B 11 C5 C2 04 3615*  	ld de,filedata
04273F 01 00 00 01 3616*  	ld bc,65536
042743 3E 01       3617*  	ld a,mos_load
042745 5B CF       3618*  	RST.LIL 08h
042747 21 C6 01 00 3619*  	ld hl,BUF_17_043
04274B 01 6B 00 00 3620*  	ld bc,107
04274F 11 A0 00 00 3621*  	ld de,160
042753 DD 21 E0 42 3622*  	ld ix,17120
       00          
042758 CD A5 B6 04 3623*  	call vdu_load_img
04275C C9          3624*  	ret
04275D             3625*  
04275D             3626*  ld_17_044:
04275D 21 61 43 04 3627*  	ld hl,F17_044
042761 22 3A B5 04 3628*  	ld (cur_filename),hl
042765 11 C5 C2 04 3629*  	ld de,filedata
042769 01 00 00 01 3630*  	ld bc,65536
04276D 3E 01       3631*  	ld a,mos_load
04276F 5B CF       3632*  	RST.LIL 08h
042771 21 C7 01 00 3633*  	ld hl,BUF_17_044
042775 01 40 01 00 3634*  	ld bc,320
042779 11 A0 00 00 3635*  	ld de,160
04277D DD 21 00 C8 3636*  	ld ix,51200
       00          
042782 CD A5 B6 04 3637*  	call vdu_load_img
042786 C9          3638*  	ret
042787             3639*  
042787             3640*  ld_57_004:
042787 21 75 43 04 3641*  	ld hl,F57_004
04278B 22 3A B5 04 3642*  	ld (cur_filename),hl
04278F 11 C5 C2 04 3643*  	ld de,filedata
042793 01 00 00 01 3644*  	ld bc,65536
042797 3E 01       3645*  	ld a,mos_load
042799 5B CF       3646*  	RST.LIL 08h
04279B 21 C8 01 00 3647*  	ld hl,BUF_57_004
04279F 01 24 00 00 3648*  	ld bc,36
0427A3 11 23 00 00 3649*  	ld de,35
0427A7 DD 21 EC 04 3650*  	ld ix,1260
       00          
0427AC CD A5 B6 04 3651*  	call vdu_load_img
0427B0 C9          3652*  	ret
0427B1             3653*  
0427B1             3654*  ld_57_009:
0427B1 21 89 43 04 3655*  	ld hl,F57_009
0427B5 22 3A B5 04 3656*  	ld (cur_filename),hl
0427B9 11 C5 C2 04 3657*  	ld de,filedata
0427BD 01 00 00 01 3658*  	ld bc,65536
0427C1 3E 01       3659*  	ld a,mos_load
0427C3 5B CF       3660*  	RST.LIL 08h
0427C5 21 C9 01 00 3661*  	ld hl,BUF_57_009
0427C9 01 23 00 00 3662*  	ld bc,35
0427CD 11 2D 00 00 3663*  	ld de,45
0427D1 DD 21 27 06 3664*  	ld ix,1575
       00          
0427D6 CD A5 B6 04 3665*  	call vdu_load_img
0427DA C9          3666*  	ret
0427DB             3667*  
0427DB             3668*  ld_57_010:
0427DB 21 9D 43 04 3669*  	ld hl,F57_010
0427DF 22 3A B5 04 3670*  	ld (cur_filename),hl
0427E3 11 C5 C2 04 3671*  	ld de,filedata
0427E7 01 00 00 01 3672*  	ld bc,65536
0427EB 3E 01       3673*  	ld a,mos_load
0427ED 5B CF       3674*  	RST.LIL 08h
0427EF 21 CA 01 00 3675*  	ld hl,BUF_57_010
0427F3 01 19 00 00 3676*  	ld bc,25
0427F7 11 2D 00 00 3677*  	ld de,45
0427FB DD 21 65 04 3678*  	ld ix,1125
       00          
042800 CD A5 B6 04 3679*  	call vdu_load_img
042804 C9          3680*  	ret
042805             3681*  
042805             3682*  ld_57_011:
042805 21 B1 43 04 3683*  	ld hl,F57_011
042809 22 3A B5 04 3684*  	ld (cur_filename),hl
04280D 11 C5 C2 04 3685*  	ld de,filedata
042811 01 00 00 01 3686*  	ld bc,65536
042815 3E 01       3687*  	ld a,mos_load
042817 5B CF       3688*  	RST.LIL 08h
042819 21 CB 01 00 3689*  	ld hl,BUF_57_011
04281D 01 0F 00 00 3690*  	ld bc,15
042821 11 2D 00 00 3691*  	ld de,45
042825 DD 21 A3 02 3692*  	ld ix,675
       00          
04282A CD A5 B6 04 3693*  	call vdu_load_img
04282E C9          3694*  	ret
04282F             3695*  
04282F             3696*  ld_57_012:
04282F 21 C5 43 04 3697*  	ld hl,F57_012
042833 22 3A B5 04 3698*  	ld (cur_filename),hl
042837 11 C5 C2 04 3699*  	ld de,filedata
04283B 01 00 00 01 3700*  	ld bc,65536
04283F 3E 01       3701*  	ld a,mos_load
042841 5B CF       3702*  	RST.LIL 08h
042843 21 CC 01 00 3703*  	ld hl,BUF_57_012
042847 01 05 00 00 3704*  	ld bc,5
04284B 11 2D 00 00 3705*  	ld de,45
04284F DD 21 E1 00 3706*  	ld ix,225
       00          
042854 CD A5 B6 04 3707*  	call vdu_load_img
042858 C9          3708*  	ret
042859             3709*  
042859             3710*  ld_57_013:
042859 21 D9 43 04 3711*  	ld hl,F57_013
04285D 22 3A B5 04 3712*  	ld (cur_filename),hl
042861 11 C5 C2 04 3713*  	ld de,filedata
042865 01 00 00 01 3714*  	ld bc,65536
042869 3E 01       3715*  	ld a,mos_load
04286B 5B CF       3716*  	RST.LIL 08h
04286D 21 CD 01 00 3717*  	ld hl,BUF_57_013
042871 01 05 00 00 3718*  	ld bc,5
042875 11 2B 00 00 3719*  	ld de,43
042879 DD 21 D7 00 3720*  	ld ix,215
       00          
04287E CD A5 B6 04 3721*  	call vdu_load_img
042882 C9          3722*  	ret
042883             3723*  
042883             3724*  ld_57_014:
042883 21 ED 43 04 3725*  	ld hl,F57_014
042887 22 3A B5 04 3726*  	ld (cur_filename),hl
04288B 11 C5 C2 04 3727*  	ld de,filedata
04288F 01 00 00 01 3728*  	ld bc,65536
042893 3E 01       3729*  	ld a,mos_load
042895 5B CF       3730*  	RST.LIL 08h
042897 21 CE 01 00 3731*  	ld hl,BUF_57_014
04289B 01 0F 00 00 3732*  	ld bc,15
04289F 11 2D 00 00 3733*  	ld de,45
0428A3 DD 21 A3 02 3734*  	ld ix,675
       00          
0428A8 CD A5 B6 04 3735*  	call vdu_load_img
0428AC C9          3736*  	ret
0428AD             3737*  
0428AD             3738*  ld_57_015:
0428AD 21 01 44 04 3739*  	ld hl,F57_015
0428B1 22 3A B5 04 3740*  	ld (cur_filename),hl
0428B5 11 C5 C2 04 3741*  	ld de,filedata
0428B9 01 00 00 01 3742*  	ld bc,65536
0428BD 3E 01       3743*  	ld a,mos_load
0428BF 5B CF       3744*  	RST.LIL 08h
0428C1 21 CF 01 00 3745*  	ld hl,BUF_57_015
0428C5 01 19 00 00 3746*  	ld bc,25
0428C9 11 2D 00 00 3747*  	ld de,45
0428CD DD 21 65 04 3748*  	ld ix,1125
       00          
0428D2 CD A5 B6 04 3749*  	call vdu_load_img
0428D6 C9          3750*  	ret
0428D7             3751*  
0428D7             3752*  ld_57_016:
0428D7 21 15 44 04 3753*  	ld hl,F57_016
0428DB 22 3A B5 04 3754*  	ld (cur_filename),hl
0428DF 11 C5 C2 04 3755*  	ld de,filedata
0428E3 01 00 00 01 3756*  	ld bc,65536
0428E7 3E 01       3757*  	ld a,mos_load
0428E9 5B CF       3758*  	RST.LIL 08h
0428EB 21 D0 01 00 3759*  	ld hl,BUF_57_016
0428EF 01 23 00 00 3760*  	ld bc,35
0428F3 11 2D 00 00 3761*  	ld de,45
0428F7 DD 21 27 06 3762*  	ld ix,1575
       00          
0428FC CD A5 B6 04 3763*  	call vdu_load_img
042900 C9          3764*  	ret
042901             3765*  
042901             3766*  ld_57_020:
042901 21 29 44 04 3767*  	ld hl,F57_020
042905 22 3A B5 04 3768*  	ld (cur_filename),hl
042909 11 C5 C2 04 3769*  	ld de,filedata
04290D 01 00 00 01 3770*  	ld bc,65536
042911 3E 01       3771*  	ld a,mos_load
042913 5B CF       3772*  	RST.LIL 08h
042915 21 D1 01 00 3773*  	ld hl,BUF_57_020
042919 01 2E 00 00 3774*  	ld bc,46
04291D 11 2D 00 00 3775*  	ld de,45
042921 DD 21 16 08 3776*  	ld ix,2070
       00          
042926 CD A5 B6 04 3777*  	call vdu_load_img
04292A C9          3778*  	ret
04292B             3779*  
04292B             3780*  ld_57_024:
04292B 21 3D 44 04 3781*  	ld hl,F57_024
04292F 22 3A B5 04 3782*  	ld (cur_filename),hl
042933 11 C5 C2 04 3783*  	ld de,filedata
042937 01 00 00 01 3784*  	ld bc,65536
04293B 3E 01       3785*  	ld a,mos_load
04293D 5B CF       3786*  	RST.LIL 08h
04293F 21 D2 01 00 3787*  	ld hl,BUF_57_024
042943 01 2E 00 00 3788*  	ld bc,46
042947 11 40 00 00 3789*  	ld de,64
04294B DD 21 80 0B 3790*  	ld ix,2944
       00          
042950 CD A5 B6 04 3791*  	call vdu_load_img
042954 C9          3792*  	ret
042955             3793*  
042955             3794*  ld_57_025:
042955 21 51 44 04 3795*  	ld hl,F57_025
042959 22 3A B5 04 3796*  	ld (cur_filename),hl
04295D 11 C5 C2 04 3797*  	ld de,filedata
042961 01 00 00 01 3798*  	ld bc,65536
042965 3E 01       3799*  	ld a,mos_load
042967 5B CF       3800*  	RST.LIL 08h
042969 21 D3 01 00 3801*  	ld hl,BUF_57_025
04296D 01 1C 00 00 3802*  	ld bc,28
042971 11 40 00 00 3803*  	ld de,64
042975 DD 21 00 07 3804*  	ld ix,1792
       00          
04297A CD A5 B6 04 3805*  	call vdu_load_img
04297E C9          3806*  	ret
04297F             3807*  
04297F             3808*  ld_57_026:
04297F 21 65 44 04 3809*  	ld hl,F57_026
042983 22 3A B5 04 3810*  	ld (cur_filename),hl
042987 11 C5 C2 04 3811*  	ld de,filedata
04298B 01 00 00 01 3812*  	ld bc,65536
04298F 3E 01       3813*  	ld a,mos_load
042991 5B CF       3814*  	RST.LIL 08h
042993 21 D4 01 00 3815*  	ld hl,BUF_57_026
042997 01 09 00 00 3816*  	ld bc,9
04299B 11 40 00 00 3817*  	ld de,64
04299F DD 21 40 02 3818*  	ld ix,576
       00          
0429A4 CD A5 B6 04 3819*  	call vdu_load_img
0429A8 C9          3820*  	ret
0429A9             3821*  
0429A9             3822*  ld_57_027:
0429A9 21 79 44 04 3823*  	ld hl,F57_027
0429AD 22 3A B5 04 3824*  	ld (cur_filename),hl
0429B1 11 C5 C2 04 3825*  	ld de,filedata
0429B5 01 00 00 01 3826*  	ld bc,65536
0429B9 3E 01       3827*  	ld a,mos_load
0429BB 5B CF       3828*  	RST.LIL 08h
0429BD 21 D5 01 00 3829*  	ld hl,BUF_57_027
0429C1 01 0A 00 00 3830*  	ld bc,10
0429C5 11 3E 00 00 3831*  	ld de,62
0429C9 DD 21 6C 02 3832*  	ld ix,620
       00          
0429CE CD A5 B6 04 3833*  	call vdu_load_img
0429D2 C9          3834*  	ret
0429D3             3835*  
0429D3             3836*  ld_57_028:
0429D3 21 8D 44 04 3837*  	ld hl,F57_028
0429D7 22 3A B5 04 3838*  	ld (cur_filename),hl
0429DB 11 C5 C2 04 3839*  	ld de,filedata
0429DF 01 00 00 01 3840*  	ld bc,65536
0429E3 3E 01       3841*  	ld a,mos_load
0429E5 5B CF       3842*  	RST.LIL 08h
0429E7 21 D6 01 00 3843*  	ld hl,BUF_57_028
0429EB 01 1C 00 00 3844*  	ld bc,28
0429EF 11 40 00 00 3845*  	ld de,64
0429F3 DD 21 00 07 3846*  	ld ix,1792
       00          
0429F8 CD A5 B6 04 3847*  	call vdu_load_img
0429FC C9          3848*  	ret
0429FD             3849*  
0429FD             3850*  ld_57_029:
0429FD 21 A1 44 04 3851*  	ld hl,F57_029
042A01 22 3A B5 04 3852*  	ld (cur_filename),hl
042A05 11 C5 C2 04 3853*  	ld de,filedata
042A09 01 00 00 01 3854*  	ld bc,65536
042A0D 3E 01       3855*  	ld a,mos_load
042A0F 5B CF       3856*  	RST.LIL 08h
042A11 21 D7 01 00 3857*  	ld hl,BUF_57_029
042A15 01 2F 00 00 3858*  	ld bc,47
042A19 11 40 00 00 3859*  	ld de,64
042A1D DD 21 C0 0B 3860*  	ld ix,3008
       00          
042A22 CD A5 B6 04 3861*  	call vdu_load_img
042A26 C9          3862*  	ret
042A27             3863*  
042A27             3864*  ld_57_032:
042A27 21 B5 44 04 3865*  	ld hl,F57_032
042A2B 22 3A B5 04 3866*  	ld (cur_filename),hl
042A2F 11 C5 C2 04 3867*  	ld de,filedata
042A33 01 00 00 01 3868*  	ld bc,65536
042A37 3E 01       3869*  	ld a,mos_load
042A39 5B CF       3870*  	RST.LIL 08h
042A3B 21 D8 01 00 3871*  	ld hl,BUF_57_032
042A3F 01 41 00 00 3872*  	ld bc,65
042A43 11 40 00 00 3873*  	ld de,64
042A47 DD 21 40 10 3874*  	ld ix,4160
       00          
042A4C CD A5 B6 04 3875*  	call vdu_load_img
042A50 C9          3876*  	ret
042A51             3877*  
042A51             3878*  ld_57_035:
042A51 21 C9 44 04 3879*  	ld hl,F57_035
042A55 22 3A B5 04 3880*  	ld (cur_filename),hl
042A59 11 C5 C2 04 3881*  	ld de,filedata
042A5D 01 00 00 01 3882*  	ld bc,65536
042A61 3E 01       3883*  	ld a,mos_load
042A63 5B CF       3884*  	RST.LIL 08h
042A65 21 D9 01 00 3885*  	ld hl,BUF_57_035
042A69 01 3F 00 00 3886*  	ld bc,63
042A6D 11 6B 00 00 3887*  	ld de,107
042A71 DD 21 55 1A 3888*  	ld ix,6741
       00          
042A76 CD A5 B6 04 3889*  	call vdu_load_img
042A7A C9          3890*  	ret
042A7B             3891*  
042A7B             3892*  ld_57_036:
042A7B 21 DD 44 04 3893*  	ld hl,F57_036
042A7F 22 3A B5 04 3894*  	ld (cur_filename),hl
042A83 11 C5 C2 04 3895*  	ld de,filedata
042A87 01 00 00 01 3896*  	ld bc,65536
042A8B 3E 01       3897*  	ld a,mos_load
042A8D 5B CF       3898*  	RST.LIL 08h
042A8F 21 DA 01 00 3899*  	ld hl,BUF_57_036
042A93 01 16 00 00 3900*  	ld bc,22
042A97 11 6B 00 00 3901*  	ld de,107
042A9B DD 21 32 09 3902*  	ld ix,2354
       00          
042AA0 CD A5 B6 04 3903*  	call vdu_load_img
042AA4 C9          3904*  	ret
042AA5             3905*  
042AA5             3906*  ld_57_037:
042AA5 21 F1 44 04 3907*  	ld hl,F57_037
042AA9 22 3A B5 04 3908*  	ld (cur_filename),hl
042AAD 11 C5 C2 04 3909*  	ld de,filedata
042AB1 01 00 00 01 3910*  	ld bc,65536
042AB5 3E 01       3911*  	ld a,mos_load
042AB7 5B CF       3912*  	RST.LIL 08h
042AB9 21 DB 01 00 3913*  	ld hl,BUF_57_037
042ABD 01 15 00 00 3914*  	ld bc,21
042AC1 11 69 00 00 3915*  	ld de,105
042AC5 DD 21 9D 08 3916*  	ld ix,2205
       00          
042ACA CD A5 B6 04 3917*  	call vdu_load_img
042ACE C9          3918*  	ret
042ACF             3919*  
042ACF             3920*  ld_57_038:
042ACF 21 05 45 04 3921*  	ld hl,F57_038
042AD3 22 3A B5 04 3922*  	ld (cur_filename),hl
042AD7 11 C5 C2 04 3923*  	ld de,filedata
042ADB 01 00 00 01 3924*  	ld bc,65536
042ADF 3E 01       3925*  	ld a,mos_load
042AE1 5B CF       3926*  	RST.LIL 08h
042AE3 21 DC 01 00 3927*  	ld hl,BUF_57_038
042AE7 01 3F 00 00 3928*  	ld bc,63
042AEB 11 6B 00 00 3929*  	ld de,107
042AEF DD 21 55 1A 3930*  	ld ix,6741
       00          
042AF4 CD A5 B6 04 3931*  	call vdu_load_img
042AF8 C9          3932*  	ret
042AF9             3933*  
042AF9             3934*  ld_57_040:
042AF9 21 19 45 04 3935*  	ld hl,F57_040
042AFD 22 3A B5 04 3936*  	ld (cur_filename),hl
042B01 11 C5 C2 04 3937*  	ld de,filedata
042B05 01 00 00 01 3938*  	ld bc,65536
042B09 3E 01       3939*  	ld a,mos_load
042B0B 5B CF       3940*  	RST.LIL 08h
042B0D 21 DD 01 00 3941*  	ld hl,BUF_57_040
042B11 01 6C 00 00 3942*  	ld bc,108
042B15 11 6B 00 00 3943*  	ld de,107
042B19 DD 21 24 2D 3944*  	ld ix,11556
       00          
042B1E CD A5 B6 04 3945*  	call vdu_load_img
042B22 C9          3946*  	ret
042B23             3947*  
042B23             3948*  ld_57_042:
042B23 21 2D 45 04 3949*  	ld hl,F57_042
042B27 22 3A B5 04 3950*  	ld (cur_filename),hl
042B2B 11 C5 C2 04 3951*  	ld de,filedata
042B2F 01 00 00 01 3952*  	ld bc,65536
042B33 3E 01       3953*  	ld a,mos_load
042B35 5B CF       3954*  	RST.LIL 08h
042B37 21 DE 01 00 3955*  	ld hl,BUF_57_042
042B3B 01 6A 00 00 3956*  	ld bc,106
042B3F 11 A0 00 00 3957*  	ld de,160
042B43 DD 21 40 42 3958*  	ld ix,16960
       00          
042B48 CD A5 B6 04 3959*  	call vdu_load_img
042B4C C9          3960*  	ret
042B4D             3961*  
042B4D             3962*  ld_57_043:
042B4D 21 41 45 04 3963*  	ld hl,F57_043
042B51 22 3A B5 04 3964*  	ld (cur_filename),hl
042B55 11 C5 C2 04 3965*  	ld de,filedata
042B59 01 00 00 01 3966*  	ld bc,65536
042B5D 3E 01       3967*  	ld a,mos_load
042B5F 5B CF       3968*  	RST.LIL 08h
042B61 21 DF 01 00 3969*  	ld hl,BUF_57_043
042B65 01 6B 00 00 3970*  	ld bc,107
042B69 11 A0 00 00 3971*  	ld de,160
042B6D DD 21 E0 42 3972*  	ld ix,17120
       00          
042B72 CD A5 B6 04 3973*  	call vdu_load_img
042B76 C9          3974*  	ret
042B77             3975*  
042B77             3976*  ld_57_044:
042B77 21 55 45 04 3977*  	ld hl,F57_044
042B7B 22 3A B5 04 3978*  	ld (cur_filename),hl
042B7F 11 C5 C2 04 3979*  	ld de,filedata
042B83 01 00 00 01 3980*  	ld bc,65536
042B87 3E 01       3981*  	ld a,mos_load
042B89 5B CF       3982*  	RST.LIL 08h
042B8B 21 E0 01 00 3983*  	ld hl,BUF_57_044
042B8F 01 40 01 00 3984*  	ld bc,320
042B93 11 A0 00 00 3985*  	ld de,160
042B97 DD 21 00 C8 3986*  	ld ix,51200
       00          
042B9C CD A5 B6 04 3987*  	call vdu_load_img
042BA0 C9          3988*  	ret
042BA1             3989*  
042BA1             3990*  ld_58_004:
042BA1 21 69 45 04 3991*  	ld hl,F58_004
042BA5 22 3A B5 04 3992*  	ld (cur_filename),hl
042BA9 11 C5 C2 04 3993*  	ld de,filedata
042BAD 01 00 00 01 3994*  	ld bc,65536
042BB1 3E 01       3995*  	ld a,mos_load
042BB3 5B CF       3996*  	RST.LIL 08h
042BB5 21 E1 01 00 3997*  	ld hl,BUF_58_004
042BB9 01 24 00 00 3998*  	ld bc,36
042BBD 11 23 00 00 3999*  	ld de,35
042BC1 DD 21 EC 04 4000*  	ld ix,1260
       00          
042BC6 CD A5 B6 04 4001*  	call vdu_load_img
042BCA C9          4002*  	ret
042BCB             4003*  
042BCB             4004*  ld_58_009:
042BCB 21 7D 45 04 4005*  	ld hl,F58_009
042BCF 22 3A B5 04 4006*  	ld (cur_filename),hl
042BD3 11 C5 C2 04 4007*  	ld de,filedata
042BD7 01 00 00 01 4008*  	ld bc,65536
042BDB 3E 01       4009*  	ld a,mos_load
042BDD 5B CF       4010*  	RST.LIL 08h
042BDF 21 E2 01 00 4011*  	ld hl,BUF_58_009
042BE3 01 23 00 00 4012*  	ld bc,35
042BE7 11 2D 00 00 4013*  	ld de,45
042BEB DD 21 27 06 4014*  	ld ix,1575
       00          
042BF0 CD A5 B6 04 4015*  	call vdu_load_img
042BF4 C9          4016*  	ret
042BF5             4017*  
042BF5             4018*  ld_58_010:
042BF5 21 91 45 04 4019*  	ld hl,F58_010
042BF9 22 3A B5 04 4020*  	ld (cur_filename),hl
042BFD 11 C5 C2 04 4021*  	ld de,filedata
042C01 01 00 00 01 4022*  	ld bc,65536
042C05 3E 01       4023*  	ld a,mos_load
042C07 5B CF       4024*  	RST.LIL 08h
042C09 21 E3 01 00 4025*  	ld hl,BUF_58_010
042C0D 01 19 00 00 4026*  	ld bc,25
042C11 11 2D 00 00 4027*  	ld de,45
042C15 DD 21 65 04 4028*  	ld ix,1125
       00          
042C1A CD A5 B6 04 4029*  	call vdu_load_img
042C1E C9          4030*  	ret
042C1F             4031*  
042C1F             4032*  ld_58_011:
042C1F 21 A5 45 04 4033*  	ld hl,F58_011
042C23 22 3A B5 04 4034*  	ld (cur_filename),hl
042C27 11 C5 C2 04 4035*  	ld de,filedata
042C2B 01 00 00 01 4036*  	ld bc,65536
042C2F 3E 01       4037*  	ld a,mos_load
042C31 5B CF       4038*  	RST.LIL 08h
042C33 21 E4 01 00 4039*  	ld hl,BUF_58_011
042C37 01 0F 00 00 4040*  	ld bc,15
042C3B 11 2D 00 00 4041*  	ld de,45
042C3F DD 21 A3 02 4042*  	ld ix,675
       00          
042C44 CD A5 B6 04 4043*  	call vdu_load_img
042C48 C9          4044*  	ret
042C49             4045*  
042C49             4046*  ld_58_012:
042C49 21 B9 45 04 4047*  	ld hl,F58_012
042C4D 22 3A B5 04 4048*  	ld (cur_filename),hl
042C51 11 C5 C2 04 4049*  	ld de,filedata
042C55 01 00 00 01 4050*  	ld bc,65536
042C59 3E 01       4051*  	ld a,mos_load
042C5B 5B CF       4052*  	RST.LIL 08h
042C5D 21 E5 01 00 4053*  	ld hl,BUF_58_012
042C61 01 05 00 00 4054*  	ld bc,5
042C65 11 2D 00 00 4055*  	ld de,45
042C69 DD 21 E1 00 4056*  	ld ix,225
       00          
042C6E CD A5 B6 04 4057*  	call vdu_load_img
042C72 C9          4058*  	ret
042C73             4059*  
042C73             4060*  ld_58_013:
042C73 21 CD 45 04 4061*  	ld hl,F58_013
042C77 22 3A B5 04 4062*  	ld (cur_filename),hl
042C7B 11 C5 C2 04 4063*  	ld de,filedata
042C7F 01 00 00 01 4064*  	ld bc,65536
042C83 3E 01       4065*  	ld a,mos_load
042C85 5B CF       4066*  	RST.LIL 08h
042C87 21 E6 01 00 4067*  	ld hl,BUF_58_013
042C8B 01 05 00 00 4068*  	ld bc,5
042C8F 11 2B 00 00 4069*  	ld de,43
042C93 DD 21 D7 00 4070*  	ld ix,215
       00          
042C98 CD A5 B6 04 4071*  	call vdu_load_img
042C9C C9          4072*  	ret
042C9D             4073*  
042C9D             4074*  ld_58_014:
042C9D 21 E1 45 04 4075*  	ld hl,F58_014
042CA1 22 3A B5 04 4076*  	ld (cur_filename),hl
042CA5 11 C5 C2 04 4077*  	ld de,filedata
042CA9 01 00 00 01 4078*  	ld bc,65536
042CAD 3E 01       4079*  	ld a,mos_load
042CAF 5B CF       4080*  	RST.LIL 08h
042CB1 21 E7 01 00 4081*  	ld hl,BUF_58_014
042CB5 01 0F 00 00 4082*  	ld bc,15
042CB9 11 2D 00 00 4083*  	ld de,45
042CBD DD 21 A3 02 4084*  	ld ix,675
       00          
042CC2 CD A5 B6 04 4085*  	call vdu_load_img
042CC6 C9          4086*  	ret
042CC7             4087*  
042CC7             4088*  ld_58_015:
042CC7 21 F5 45 04 4089*  	ld hl,F58_015
042CCB 22 3A B5 04 4090*  	ld (cur_filename),hl
042CCF 11 C5 C2 04 4091*  	ld de,filedata
042CD3 01 00 00 01 4092*  	ld bc,65536
042CD7 3E 01       4093*  	ld a,mos_load
042CD9 5B CF       4094*  	RST.LIL 08h
042CDB 21 E8 01 00 4095*  	ld hl,BUF_58_015
042CDF 01 19 00 00 4096*  	ld bc,25
042CE3 11 2D 00 00 4097*  	ld de,45
042CE7 DD 21 65 04 4098*  	ld ix,1125
       00          
042CEC CD A5 B6 04 4099*  	call vdu_load_img
042CF0 C9          4100*  	ret
042CF1             4101*  
042CF1             4102*  ld_58_016:
042CF1 21 09 46 04 4103*  	ld hl,F58_016
042CF5 22 3A B5 04 4104*  	ld (cur_filename),hl
042CF9 11 C5 C2 04 4105*  	ld de,filedata
042CFD 01 00 00 01 4106*  	ld bc,65536
042D01 3E 01       4107*  	ld a,mos_load
042D03 5B CF       4108*  	RST.LIL 08h
042D05 21 E9 01 00 4109*  	ld hl,BUF_58_016
042D09 01 23 00 00 4110*  	ld bc,35
042D0D 11 2D 00 00 4111*  	ld de,45
042D11 DD 21 27 06 4112*  	ld ix,1575
       00          
042D16 CD A5 B6 04 4113*  	call vdu_load_img
042D1A C9          4114*  	ret
042D1B             4115*  
042D1B             4116*  ld_58_020:
042D1B 21 1D 46 04 4117*  	ld hl,F58_020
042D1F 22 3A B5 04 4118*  	ld (cur_filename),hl
042D23 11 C5 C2 04 4119*  	ld de,filedata
042D27 01 00 00 01 4120*  	ld bc,65536
042D2B 3E 01       4121*  	ld a,mos_load
042D2D 5B CF       4122*  	RST.LIL 08h
042D2F 21 EA 01 00 4123*  	ld hl,BUF_58_020
042D33 01 2E 00 00 4124*  	ld bc,46
042D37 11 2D 00 00 4125*  	ld de,45
042D3B DD 21 16 08 4126*  	ld ix,2070
       00          
042D40 CD A5 B6 04 4127*  	call vdu_load_img
042D44 C9          4128*  	ret
042D45             4129*  
042D45             4130*  ld_58_024:
042D45 21 31 46 04 4131*  	ld hl,F58_024
042D49 22 3A B5 04 4132*  	ld (cur_filename),hl
042D4D 11 C5 C2 04 4133*  	ld de,filedata
042D51 01 00 00 01 4134*  	ld bc,65536
042D55 3E 01       4135*  	ld a,mos_load
042D57 5B CF       4136*  	RST.LIL 08h
042D59 21 EB 01 00 4137*  	ld hl,BUF_58_024
042D5D 01 2E 00 00 4138*  	ld bc,46
042D61 11 40 00 00 4139*  	ld de,64
042D65 DD 21 80 0B 4140*  	ld ix,2944
       00          
042D6A CD A5 B6 04 4141*  	call vdu_load_img
042D6E C9          4142*  	ret
042D6F             4143*  
042D6F             4144*  ld_58_025:
042D6F 21 45 46 04 4145*  	ld hl,F58_025
042D73 22 3A B5 04 4146*  	ld (cur_filename),hl
042D77 11 C5 C2 04 4147*  	ld de,filedata
042D7B 01 00 00 01 4148*  	ld bc,65536
042D7F 3E 01       4149*  	ld a,mos_load
042D81 5B CF       4150*  	RST.LIL 08h
042D83 21 EC 01 00 4151*  	ld hl,BUF_58_025
042D87 01 1C 00 00 4152*  	ld bc,28
042D8B 11 40 00 00 4153*  	ld de,64
042D8F DD 21 00 07 4154*  	ld ix,1792
       00          
042D94 CD A5 B6 04 4155*  	call vdu_load_img
042D98 C9          4156*  	ret
042D99             4157*  
042D99             4158*  ld_58_026:
042D99 21 59 46 04 4159*  	ld hl,F58_026
042D9D 22 3A B5 04 4160*  	ld (cur_filename),hl
042DA1 11 C5 C2 04 4161*  	ld de,filedata
042DA5 01 00 00 01 4162*  	ld bc,65536
042DA9 3E 01       4163*  	ld a,mos_load
042DAB 5B CF       4164*  	RST.LIL 08h
042DAD 21 ED 01 00 4165*  	ld hl,BUF_58_026
042DB1 01 09 00 00 4166*  	ld bc,9
042DB5 11 40 00 00 4167*  	ld de,64
042DB9 DD 21 40 02 4168*  	ld ix,576
       00          
042DBE CD A5 B6 04 4169*  	call vdu_load_img
042DC2 C9          4170*  	ret
042DC3             4171*  
042DC3             4172*  ld_58_027:
042DC3 21 6D 46 04 4173*  	ld hl,F58_027
042DC7 22 3A B5 04 4174*  	ld (cur_filename),hl
042DCB 11 C5 C2 04 4175*  	ld de,filedata
042DCF 01 00 00 01 4176*  	ld bc,65536
042DD3 3E 01       4177*  	ld a,mos_load
042DD5 5B CF       4178*  	RST.LIL 08h
042DD7 21 EE 01 00 4179*  	ld hl,BUF_58_027
042DDB 01 0A 00 00 4180*  	ld bc,10
042DDF 11 3E 00 00 4181*  	ld de,62
042DE3 DD 21 6C 02 4182*  	ld ix,620
       00          
042DE8 CD A5 B6 04 4183*  	call vdu_load_img
042DEC C9          4184*  	ret
042DED             4185*  
042DED             4186*  ld_58_028:
042DED 21 81 46 04 4187*  	ld hl,F58_028
042DF1 22 3A B5 04 4188*  	ld (cur_filename),hl
042DF5 11 C5 C2 04 4189*  	ld de,filedata
042DF9 01 00 00 01 4190*  	ld bc,65536
042DFD 3E 01       4191*  	ld a,mos_load
042DFF 5B CF       4192*  	RST.LIL 08h
042E01 21 EF 01 00 4193*  	ld hl,BUF_58_028
042E05 01 1C 00 00 4194*  	ld bc,28
042E09 11 40 00 00 4195*  	ld de,64
042E0D DD 21 00 07 4196*  	ld ix,1792
       00          
042E12 CD A5 B6 04 4197*  	call vdu_load_img
042E16 C9          4198*  	ret
042E17             4199*  
042E17             4200*  ld_58_029:
042E17 21 95 46 04 4201*  	ld hl,F58_029
042E1B 22 3A B5 04 4202*  	ld (cur_filename),hl
042E1F 11 C5 C2 04 4203*  	ld de,filedata
042E23 01 00 00 01 4204*  	ld bc,65536
042E27 3E 01       4205*  	ld a,mos_load
042E29 5B CF       4206*  	RST.LIL 08h
042E2B 21 F0 01 00 4207*  	ld hl,BUF_58_029
042E2F 01 2F 00 00 4208*  	ld bc,47
042E33 11 40 00 00 4209*  	ld de,64
042E37 DD 21 C0 0B 4210*  	ld ix,3008
       00          
042E3C CD A5 B6 04 4211*  	call vdu_load_img
042E40 C9          4212*  	ret
042E41             4213*  
042E41             4214*  ld_58_032:
042E41 21 A9 46 04 4215*  	ld hl,F58_032
042E45 22 3A B5 04 4216*  	ld (cur_filename),hl
042E49 11 C5 C2 04 4217*  	ld de,filedata
042E4D 01 00 00 01 4218*  	ld bc,65536
042E51 3E 01       4219*  	ld a,mos_load
042E53 5B CF       4220*  	RST.LIL 08h
042E55 21 F1 01 00 4221*  	ld hl,BUF_58_032
042E59 01 41 00 00 4222*  	ld bc,65
042E5D 11 40 00 00 4223*  	ld de,64
042E61 DD 21 40 10 4224*  	ld ix,4160
       00          
042E66 CD A5 B6 04 4225*  	call vdu_load_img
042E6A C9          4226*  	ret
042E6B             4227*  
042E6B             4228*  ld_58_035:
042E6B 21 BD 46 04 4229*  	ld hl,F58_035
042E6F 22 3A B5 04 4230*  	ld (cur_filename),hl
042E73 11 C5 C2 04 4231*  	ld de,filedata
042E77 01 00 00 01 4232*  	ld bc,65536
042E7B 3E 01       4233*  	ld a,mos_load
042E7D 5B CF       4234*  	RST.LIL 08h
042E7F 21 F2 01 00 4235*  	ld hl,BUF_58_035
042E83 01 3F 00 00 4236*  	ld bc,63
042E87 11 6B 00 00 4237*  	ld de,107
042E8B DD 21 55 1A 4238*  	ld ix,6741
       00          
042E90 CD A5 B6 04 4239*  	call vdu_load_img
042E94 C9          4240*  	ret
042E95             4241*  
042E95             4242*  ld_58_036:
042E95 21 D1 46 04 4243*  	ld hl,F58_036
042E99 22 3A B5 04 4244*  	ld (cur_filename),hl
042E9D 11 C5 C2 04 4245*  	ld de,filedata
042EA1 01 00 00 01 4246*  	ld bc,65536
042EA5 3E 01       4247*  	ld a,mos_load
042EA7 5B CF       4248*  	RST.LIL 08h
042EA9 21 F3 01 00 4249*  	ld hl,BUF_58_036
042EAD 01 16 00 00 4250*  	ld bc,22
042EB1 11 6B 00 00 4251*  	ld de,107
042EB5 DD 21 32 09 4252*  	ld ix,2354
       00          
042EBA CD A5 B6 04 4253*  	call vdu_load_img
042EBE C9          4254*  	ret
042EBF             4255*  
042EBF             4256*  ld_58_037:
042EBF 21 E5 46 04 4257*  	ld hl,F58_037
042EC3 22 3A B5 04 4258*  	ld (cur_filename),hl
042EC7 11 C5 C2 04 4259*  	ld de,filedata
042ECB 01 00 00 01 4260*  	ld bc,65536
042ECF 3E 01       4261*  	ld a,mos_load
042ED1 5B CF       4262*  	RST.LIL 08h
042ED3 21 F4 01 00 4263*  	ld hl,BUF_58_037
042ED7 01 15 00 00 4264*  	ld bc,21
042EDB 11 69 00 00 4265*  	ld de,105
042EDF DD 21 9D 08 4266*  	ld ix,2205
       00          
042EE4 CD A5 B6 04 4267*  	call vdu_load_img
042EE8 C9          4268*  	ret
042EE9             4269*  
042EE9             4270*  ld_58_038:
042EE9 21 F9 46 04 4271*  	ld hl,F58_038
042EED 22 3A B5 04 4272*  	ld (cur_filename),hl
042EF1 11 C5 C2 04 4273*  	ld de,filedata
042EF5 01 00 00 01 4274*  	ld bc,65536
042EF9 3E 01       4275*  	ld a,mos_load
042EFB 5B CF       4276*  	RST.LIL 08h
042EFD 21 F5 01 00 4277*  	ld hl,BUF_58_038
042F01 01 3F 00 00 4278*  	ld bc,63
042F05 11 6B 00 00 4279*  	ld de,107
042F09 DD 21 55 1A 4280*  	ld ix,6741
       00          
042F0E CD A5 B6 04 4281*  	call vdu_load_img
042F12 C9          4282*  	ret
042F13             4283*  
042F13             4284*  ld_58_040:
042F13 21 0D 47 04 4285*  	ld hl,F58_040
042F17 22 3A B5 04 4286*  	ld (cur_filename),hl
042F1B 11 C5 C2 04 4287*  	ld de,filedata
042F1F 01 00 00 01 4288*  	ld bc,65536
042F23 3E 01       4289*  	ld a,mos_load
042F25 5B CF       4290*  	RST.LIL 08h
042F27 21 F6 01 00 4291*  	ld hl,BUF_58_040
042F2B 01 6C 00 00 4292*  	ld bc,108
042F2F 11 6B 00 00 4293*  	ld de,107
042F33 DD 21 24 2D 4294*  	ld ix,11556
       00          
042F38 CD A5 B6 04 4295*  	call vdu_load_img
042F3C C9          4296*  	ret
042F3D             4297*  
042F3D             4298*  ld_58_042:
042F3D 21 21 47 04 4299*  	ld hl,F58_042
042F41 22 3A B5 04 4300*  	ld (cur_filename),hl
042F45 11 C5 C2 04 4301*  	ld de,filedata
042F49 01 00 00 01 4302*  	ld bc,65536
042F4D 3E 01       4303*  	ld a,mos_load
042F4F 5B CF       4304*  	RST.LIL 08h
042F51 21 F7 01 00 4305*  	ld hl,BUF_58_042
042F55 01 6A 00 00 4306*  	ld bc,106
042F59 11 A0 00 00 4307*  	ld de,160
042F5D DD 21 40 42 4308*  	ld ix,16960
       00          
042F62 CD A5 B6 04 4309*  	call vdu_load_img
042F66 C9          4310*  	ret
042F67             4311*  
042F67             4312*  ld_58_043:
042F67 21 35 47 04 4313*  	ld hl,F58_043
042F6B 22 3A B5 04 4314*  	ld (cur_filename),hl
042F6F 11 C5 C2 04 4315*  	ld de,filedata
042F73 01 00 00 01 4316*  	ld bc,65536
042F77 3E 01       4317*  	ld a,mos_load
042F79 5B CF       4318*  	RST.LIL 08h
042F7B 21 F8 01 00 4319*  	ld hl,BUF_58_043
042F7F 01 6B 00 00 4320*  	ld bc,107
042F83 11 A0 00 00 4321*  	ld de,160
042F87 DD 21 E0 42 4322*  	ld ix,17120
       00          
042F8C CD A5 B6 04 4323*  	call vdu_load_img
042F90 C9          4324*  	ret
042F91             4325*  
042F91             4326*  ld_58_044:
042F91 21 49 47 04 4327*  	ld hl,F58_044
042F95 22 3A B5 04 4328*  	ld (cur_filename),hl
042F99 11 C5 C2 04 4329*  	ld de,filedata
042F9D 01 00 00 01 4330*  	ld bc,65536
042FA1 3E 01       4331*  	ld a,mos_load
042FA3 5B CF       4332*  	RST.LIL 08h
042FA5 21 F9 01 00 4333*  	ld hl,BUF_58_044
042FA9 01 40 01 00 4334*  	ld bc,320
042FAD 11 A0 00 00 4335*  	ld de,160
042FB1 DD 21 00 C8 4336*  	ld ix,51200
       00          
042FB6 CD A5 B6 04 4337*  	call vdu_load_img
042FBA C9          4338*  	ret
042FBB             4339*  
042FBB             4340*  ld_59_004:
042FBB 21 5D 47 04 4341*  	ld hl,F59_004
042FBF 22 3A B5 04 4342*  	ld (cur_filename),hl
042FC3 11 C5 C2 04 4343*  	ld de,filedata
042FC7 01 00 00 01 4344*  	ld bc,65536
042FCB 3E 01       4345*  	ld a,mos_load
042FCD 5B CF       4346*  	RST.LIL 08h
042FCF 21 FA 01 00 4347*  	ld hl,BUF_59_004
042FD3 01 24 00 00 4348*  	ld bc,36
042FD7 11 23 00 00 4349*  	ld de,35
042FDB DD 21 EC 04 4350*  	ld ix,1260
       00          
042FE0 CD A5 B6 04 4351*  	call vdu_load_img
042FE4 C9          4352*  	ret
042FE5             4353*  
042FE5             4354*  ld_59_009:
042FE5 21 71 47 04 4355*  	ld hl,F59_009
042FE9 22 3A B5 04 4356*  	ld (cur_filename),hl
042FED 11 C5 C2 04 4357*  	ld de,filedata
042FF1 01 00 00 01 4358*  	ld bc,65536
042FF5 3E 01       4359*  	ld a,mos_load
042FF7 5B CF       4360*  	RST.LIL 08h
042FF9 21 FB 01 00 4361*  	ld hl,BUF_59_009
042FFD 01 23 00 00 4362*  	ld bc,35
043001 11 2D 00 00 4363*  	ld de,45
043005 DD 21 27 06 4364*  	ld ix,1575
       00          
04300A CD A5 B6 04 4365*  	call vdu_load_img
04300E C9          4366*  	ret
04300F             4367*  
04300F             4368*  ld_59_010:
04300F 21 85 47 04 4369*  	ld hl,F59_010
043013 22 3A B5 04 4370*  	ld (cur_filename),hl
043017 11 C5 C2 04 4371*  	ld de,filedata
04301B 01 00 00 01 4372*  	ld bc,65536
04301F 3E 01       4373*  	ld a,mos_load
043021 5B CF       4374*  	RST.LIL 08h
043023 21 FC 01 00 4375*  	ld hl,BUF_59_010
043027 01 19 00 00 4376*  	ld bc,25
04302B 11 2D 00 00 4377*  	ld de,45
04302F DD 21 65 04 4378*  	ld ix,1125
       00          
043034 CD A5 B6 04 4379*  	call vdu_load_img
043038 C9          4380*  	ret
043039             4381*  
043039             4382*  ld_59_011:
043039 21 99 47 04 4383*  	ld hl,F59_011
04303D 22 3A B5 04 4384*  	ld (cur_filename),hl
043041 11 C5 C2 04 4385*  	ld de,filedata
043045 01 00 00 01 4386*  	ld bc,65536
043049 3E 01       4387*  	ld a,mos_load
04304B 5B CF       4388*  	RST.LIL 08h
04304D 21 FD 01 00 4389*  	ld hl,BUF_59_011
043051 01 0F 00 00 4390*  	ld bc,15
043055 11 2D 00 00 4391*  	ld de,45
043059 DD 21 A3 02 4392*  	ld ix,675
       00          
04305E CD A5 B6 04 4393*  	call vdu_load_img
043062 C9          4394*  	ret
043063             4395*  
043063             4396*  ld_59_012:
043063 21 AD 47 04 4397*  	ld hl,F59_012
043067 22 3A B5 04 4398*  	ld (cur_filename),hl
04306B 11 C5 C2 04 4399*  	ld de,filedata
04306F 01 00 00 01 4400*  	ld bc,65536
043073 3E 01       4401*  	ld a,mos_load
043075 5B CF       4402*  	RST.LIL 08h
043077 21 FE 01 00 4403*  	ld hl,BUF_59_012
04307B 01 05 00 00 4404*  	ld bc,5
04307F 11 2D 00 00 4405*  	ld de,45
043083 DD 21 E1 00 4406*  	ld ix,225
       00          
043088 CD A5 B6 04 4407*  	call vdu_load_img
04308C C9          4408*  	ret
04308D             4409*  
04308D             4410*  ld_59_013:
04308D 21 C1 47 04 4411*  	ld hl,F59_013
043091 22 3A B5 04 4412*  	ld (cur_filename),hl
043095 11 C5 C2 04 4413*  	ld de,filedata
043099 01 00 00 01 4414*  	ld bc,65536
04309D 3E 01       4415*  	ld a,mos_load
04309F 5B CF       4416*  	RST.LIL 08h
0430A1 21 FF 01 00 4417*  	ld hl,BUF_59_013
0430A5 01 05 00 00 4418*  	ld bc,5
0430A9 11 2B 00 00 4419*  	ld de,43
0430AD DD 21 D7 00 4420*  	ld ix,215
       00          
0430B2 CD A5 B6 04 4421*  	call vdu_load_img
0430B6 C9          4422*  	ret
0430B7             4423*  
0430B7             4424*  ld_59_014:
0430B7 21 D5 47 04 4425*  	ld hl,F59_014
0430BB 22 3A B5 04 4426*  	ld (cur_filename),hl
0430BF 11 C5 C2 04 4427*  	ld de,filedata
0430C3 01 00 00 01 4428*  	ld bc,65536
0430C7 3E 01       4429*  	ld a,mos_load
0430C9 5B CF       4430*  	RST.LIL 08h
0430CB 21 00 02 00 4431*  	ld hl,BUF_59_014
0430CF 01 0F 00 00 4432*  	ld bc,15
0430D3 11 2D 00 00 4433*  	ld de,45
0430D7 DD 21 A3 02 4434*  	ld ix,675
       00          
0430DC CD A5 B6 04 4435*  	call vdu_load_img
0430E0 C9          4436*  	ret
0430E1             4437*  
0430E1             4438*  ld_59_015:
0430E1 21 E9 47 04 4439*  	ld hl,F59_015
0430E5 22 3A B5 04 4440*  	ld (cur_filename),hl
0430E9 11 C5 C2 04 4441*  	ld de,filedata
0430ED 01 00 00 01 4442*  	ld bc,65536
0430F1 3E 01       4443*  	ld a,mos_load
0430F3 5B CF       4444*  	RST.LIL 08h
0430F5 21 01 02 00 4445*  	ld hl,BUF_59_015
0430F9 01 19 00 00 4446*  	ld bc,25
0430FD 11 2D 00 00 4447*  	ld de,45
043101 DD 21 65 04 4448*  	ld ix,1125
       00          
043106 CD A5 B6 04 4449*  	call vdu_load_img
04310A C9          4450*  	ret
04310B             4451*  
04310B             4452*  ld_59_016:
04310B 21 FD 47 04 4453*  	ld hl,F59_016
04310F 22 3A B5 04 4454*  	ld (cur_filename),hl
043113 11 C5 C2 04 4455*  	ld de,filedata
043117 01 00 00 01 4456*  	ld bc,65536
04311B 3E 01       4457*  	ld a,mos_load
04311D 5B CF       4458*  	RST.LIL 08h
04311F 21 02 02 00 4459*  	ld hl,BUF_59_016
043123 01 23 00 00 4460*  	ld bc,35
043127 11 2D 00 00 4461*  	ld de,45
04312B DD 21 27 06 4462*  	ld ix,1575
       00          
043130 CD A5 B6 04 4463*  	call vdu_load_img
043134 C9          4464*  	ret
043135             4465*  
043135             4466*  ld_59_020:
043135 21 11 48 04 4467*  	ld hl,F59_020
043139 22 3A B5 04 4468*  	ld (cur_filename),hl
04313D 11 C5 C2 04 4469*  	ld de,filedata
043141 01 00 00 01 4470*  	ld bc,65536
043145 3E 01       4471*  	ld a,mos_load
043147 5B CF       4472*  	RST.LIL 08h
043149 21 03 02 00 4473*  	ld hl,BUF_59_020
04314D 01 2E 00 00 4474*  	ld bc,46
043151 11 2D 00 00 4475*  	ld de,45
043155 DD 21 16 08 4476*  	ld ix,2070
       00          
04315A CD A5 B6 04 4477*  	call vdu_load_img
04315E C9          4478*  	ret
04315F             4479*  
04315F             4480*  ld_59_024:
04315F 21 25 48 04 4481*  	ld hl,F59_024
043163 22 3A B5 04 4482*  	ld (cur_filename),hl
043167 11 C5 C2 04 4483*  	ld de,filedata
04316B 01 00 00 01 4484*  	ld bc,65536
04316F 3E 01       4485*  	ld a,mos_load
043171 5B CF       4486*  	RST.LIL 08h
043173 21 04 02 00 4487*  	ld hl,BUF_59_024
043177 01 2E 00 00 4488*  	ld bc,46
04317B 11 40 00 00 4489*  	ld de,64
04317F DD 21 80 0B 4490*  	ld ix,2944
       00          
043184 CD A5 B6 04 4491*  	call vdu_load_img
043188 C9          4492*  	ret
043189             4493*  
043189             4494*  ld_59_025:
043189 21 39 48 04 4495*  	ld hl,F59_025
04318D 22 3A B5 04 4496*  	ld (cur_filename),hl
043191 11 C5 C2 04 4497*  	ld de,filedata
043195 01 00 00 01 4498*  	ld bc,65536
043199 3E 01       4499*  	ld a,mos_load
04319B 5B CF       4500*  	RST.LIL 08h
04319D 21 05 02 00 4501*  	ld hl,BUF_59_025
0431A1 01 1C 00 00 4502*  	ld bc,28
0431A5 11 40 00 00 4503*  	ld de,64
0431A9 DD 21 00 07 4504*  	ld ix,1792
       00          
0431AE CD A5 B6 04 4505*  	call vdu_load_img
0431B2 C9          4506*  	ret
0431B3             4507*  
0431B3             4508*  ld_59_026:
0431B3 21 4D 48 04 4509*  	ld hl,F59_026
0431B7 22 3A B5 04 4510*  	ld (cur_filename),hl
0431BB 11 C5 C2 04 4511*  	ld de,filedata
0431BF 01 00 00 01 4512*  	ld bc,65536
0431C3 3E 01       4513*  	ld a,mos_load
0431C5 5B CF       4514*  	RST.LIL 08h
0431C7 21 06 02 00 4515*  	ld hl,BUF_59_026
0431CB 01 09 00 00 4516*  	ld bc,9
0431CF 11 40 00 00 4517*  	ld de,64
0431D3 DD 21 40 02 4518*  	ld ix,576
       00          
0431D8 CD A5 B6 04 4519*  	call vdu_load_img
0431DC C9          4520*  	ret
0431DD             4521*  
0431DD             4522*  ld_59_027:
0431DD 21 61 48 04 4523*  	ld hl,F59_027
0431E1 22 3A B5 04 4524*  	ld (cur_filename),hl
0431E5 11 C5 C2 04 4525*  	ld de,filedata
0431E9 01 00 00 01 4526*  	ld bc,65536
0431ED 3E 01       4527*  	ld a,mos_load
0431EF 5B CF       4528*  	RST.LIL 08h
0431F1 21 07 02 00 4529*  	ld hl,BUF_59_027
0431F5 01 0A 00 00 4530*  	ld bc,10
0431F9 11 3E 00 00 4531*  	ld de,62
0431FD DD 21 6C 02 4532*  	ld ix,620
       00          
043202 CD A5 B6 04 4533*  	call vdu_load_img
043206 C9          4534*  	ret
043207             4535*  
043207             4536*  ld_59_028:
043207 21 75 48 04 4537*  	ld hl,F59_028
04320B 22 3A B5 04 4538*  	ld (cur_filename),hl
04320F 11 C5 C2 04 4539*  	ld de,filedata
043213 01 00 00 01 4540*  	ld bc,65536
043217 3E 01       4541*  	ld a,mos_load
043219 5B CF       4542*  	RST.LIL 08h
04321B 21 08 02 00 4543*  	ld hl,BUF_59_028
04321F 01 1C 00 00 4544*  	ld bc,28
043223 11 40 00 00 4545*  	ld de,64
043227 DD 21 00 07 4546*  	ld ix,1792
       00          
04322C CD A5 B6 04 4547*  	call vdu_load_img
043230 C9          4548*  	ret
043231             4549*  
043231             4550*  ld_59_029:
043231 21 89 48 04 4551*  	ld hl,F59_029
043235 22 3A B5 04 4552*  	ld (cur_filename),hl
043239 11 C5 C2 04 4553*  	ld de,filedata
04323D 01 00 00 01 4554*  	ld bc,65536
043241 3E 01       4555*  	ld a,mos_load
043243 5B CF       4556*  	RST.LIL 08h
043245 21 09 02 00 4557*  	ld hl,BUF_59_029
043249 01 2F 00 00 4558*  	ld bc,47
04324D 11 40 00 00 4559*  	ld de,64
043251 DD 21 C0 0B 4560*  	ld ix,3008
       00          
043256 CD A5 B6 04 4561*  	call vdu_load_img
04325A C9          4562*  	ret
04325B             4563*  
04325B             4564*  ld_59_032:
04325B 21 9D 48 04 4565*  	ld hl,F59_032
04325F 22 3A B5 04 4566*  	ld (cur_filename),hl
043263 11 C5 C2 04 4567*  	ld de,filedata
043267 01 00 00 01 4568*  	ld bc,65536
04326B 3E 01       4569*  	ld a,mos_load
04326D 5B CF       4570*  	RST.LIL 08h
04326F 21 0A 02 00 4571*  	ld hl,BUF_59_032
043273 01 41 00 00 4572*  	ld bc,65
043277 11 40 00 00 4573*  	ld de,64
04327B DD 21 40 10 4574*  	ld ix,4160
       00          
043280 CD A5 B6 04 4575*  	call vdu_load_img
043284 C9          4576*  	ret
043285             4577*  
043285             4578*  ld_59_035:
043285 21 B1 48 04 4579*  	ld hl,F59_035
043289 22 3A B5 04 4580*  	ld (cur_filename),hl
04328D 11 C5 C2 04 4581*  	ld de,filedata
043291 01 00 00 01 4582*  	ld bc,65536
043295 3E 01       4583*  	ld a,mos_load
043297 5B CF       4584*  	RST.LIL 08h
043299 21 0B 02 00 4585*  	ld hl,BUF_59_035
04329D 01 3F 00 00 4586*  	ld bc,63
0432A1 11 6B 00 00 4587*  	ld de,107
0432A5 DD 21 55 1A 4588*  	ld ix,6741
       00          
0432AA CD A5 B6 04 4589*  	call vdu_load_img
0432AE C9          4590*  	ret
0432AF             4591*  
0432AF             4592*  ld_59_036:
0432AF 21 C5 48 04 4593*  	ld hl,F59_036
0432B3 22 3A B5 04 4594*  	ld (cur_filename),hl
0432B7 11 C5 C2 04 4595*  	ld de,filedata
0432BB 01 00 00 01 4596*  	ld bc,65536
0432BF 3E 01       4597*  	ld a,mos_load
0432C1 5B CF       4598*  	RST.LIL 08h
0432C3 21 0C 02 00 4599*  	ld hl,BUF_59_036
0432C7 01 16 00 00 4600*  	ld bc,22
0432CB 11 6B 00 00 4601*  	ld de,107
0432CF DD 21 32 09 4602*  	ld ix,2354
       00          
0432D4 CD A5 B6 04 4603*  	call vdu_load_img
0432D8 C9          4604*  	ret
0432D9             4605*  
0432D9             4606*  ld_59_037:
0432D9 21 D9 48 04 4607*  	ld hl,F59_037
0432DD 22 3A B5 04 4608*  	ld (cur_filename),hl
0432E1 11 C5 C2 04 4609*  	ld de,filedata
0432E5 01 00 00 01 4610*  	ld bc,65536
0432E9 3E 01       4611*  	ld a,mos_load
0432EB 5B CF       4612*  	RST.LIL 08h
0432ED 21 0D 02 00 4613*  	ld hl,BUF_59_037
0432F1 01 15 00 00 4614*  	ld bc,21
0432F5 11 69 00 00 4615*  	ld de,105
0432F9 DD 21 9D 08 4616*  	ld ix,2205
       00          
0432FE CD A5 B6 04 4617*  	call vdu_load_img
043302 C9          4618*  	ret
043303             4619*  
043303             4620*  ld_59_038:
043303 21 ED 48 04 4621*  	ld hl,F59_038
043307 22 3A B5 04 4622*  	ld (cur_filename),hl
04330B 11 C5 C2 04 4623*  	ld de,filedata
04330F 01 00 00 01 4624*  	ld bc,65536
043313 3E 01       4625*  	ld a,mos_load
043315 5B CF       4626*  	RST.LIL 08h
043317 21 0E 02 00 4627*  	ld hl,BUF_59_038
04331B 01 3F 00 00 4628*  	ld bc,63
04331F 11 6B 00 00 4629*  	ld de,107
043323 DD 21 55 1A 4630*  	ld ix,6741
       00          
043328 CD A5 B6 04 4631*  	call vdu_load_img
04332C C9          4632*  	ret
04332D             4633*  
04332D             4634*  ld_59_040:
04332D 21 01 49 04 4635*  	ld hl,F59_040
043331 22 3A B5 04 4636*  	ld (cur_filename),hl
043335 11 C5 C2 04 4637*  	ld de,filedata
043339 01 00 00 01 4638*  	ld bc,65536
04333D 3E 01       4639*  	ld a,mos_load
04333F 5B CF       4640*  	RST.LIL 08h
043341 21 0F 02 00 4641*  	ld hl,BUF_59_040
043345 01 6C 00 00 4642*  	ld bc,108
043349 11 6B 00 00 4643*  	ld de,107
04334D DD 21 24 2D 4644*  	ld ix,11556
       00          
043352 CD A5 B6 04 4645*  	call vdu_load_img
043356 C9          4646*  	ret
043357             4647*  
043357             4648*  ld_59_042:
043357 21 15 49 04 4649*  	ld hl,F59_042
04335B 22 3A B5 04 4650*  	ld (cur_filename),hl
04335F 11 C5 C2 04 4651*  	ld de,filedata
043363 01 00 00 01 4652*  	ld bc,65536
043367 3E 01       4653*  	ld a,mos_load
043369 5B CF       4654*  	RST.LIL 08h
04336B 21 10 02 00 4655*  	ld hl,BUF_59_042
04336F 01 6A 00 00 4656*  	ld bc,106
043373 11 A0 00 00 4657*  	ld de,160
043377 DD 21 40 42 4658*  	ld ix,16960
       00          
04337C CD A5 B6 04 4659*  	call vdu_load_img
043380 C9          4660*  	ret
043381             4661*  
043381             4662*  ld_59_043:
043381 21 29 49 04 4663*  	ld hl,F59_043
043385 22 3A B5 04 4664*  	ld (cur_filename),hl
043389 11 C5 C2 04 4665*  	ld de,filedata
04338D 01 00 00 01 4666*  	ld bc,65536
043391 3E 01       4667*  	ld a,mos_load
043393 5B CF       4668*  	RST.LIL 08h
043395 21 11 02 00 4669*  	ld hl,BUF_59_043
043399 01 6B 00 00 4670*  	ld bc,107
04339D 11 A0 00 00 4671*  	ld de,160
0433A1 DD 21 E0 42 4672*  	ld ix,17120
       00          
0433A6 CD A5 B6 04 4673*  	call vdu_load_img
0433AA C9          4674*  	ret
0433AB             4675*  
0433AB             4676*  ld_59_044:
0433AB 21 3D 49 04 4677*  	ld hl,F59_044
0433AF 22 3A B5 04 4678*  	ld (cur_filename),hl
0433B3 11 C5 C2 04 4679*  	ld de,filedata
0433B7 01 00 00 01 4680*  	ld bc,65536
0433BB 3E 01       4681*  	ld a,mos_load
0433BD 5B CF       4682*  	RST.LIL 08h
0433BF 21 12 02 00 4683*  	ld hl,BUF_59_044
0433C3 01 40 01 00 4684*  	ld bc,320
0433C7 11 A0 00 00 4685*  	ld de,160
0433CB DD 21 00 C8 4686*  	ld ix,51200
       00          
0433D0 CD A5 B6 04 4687*  	call vdu_load_img
0433D4 C9          4688*  	ret
0433D5             4689*  
0433D5             4690*  ; File name lookups:
0433D5 70 61 6E 65 4691*  F10_004: db "panels/10_004.rgba2",0
       6C 73 2F 31 
       30 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
0433E9 70 61 6E 65 4692*  F10_009: db "panels/10_009.rgba2",0
       6C 73 2F 31 
       30 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
0433FD 70 61 6E 65 4693*  F10_010: db "panels/10_010.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
043411 70 61 6E 65 4694*  F10_011: db "panels/10_011.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
043425 70 61 6E 65 4695*  F10_012: db "panels/10_012.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043439 70 61 6E 65 4696*  F10_013: db "panels/10_013.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
04344D 70 61 6E 65 4697*  F10_014: db "panels/10_014.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043461 70 61 6E 65 4698*  F10_015: db "panels/10_015.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043475 70 61 6E 65 4699*  F10_016: db "panels/10_016.rgba2",0
       6C 73 2F 31 
       30 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043489 70 61 6E 65 4700*  F10_020: db "panels/10_020.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
04349D 70 61 6E 65 4701*  F10_024: db "panels/10_024.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
0434B1 70 61 6E 65 4702*  F10_025: db "panels/10_025.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
0434C5 70 61 6E 65 4703*  F10_026: db "panels/10_026.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
0434D9 70 61 6E 65 4704*  F10_027: db "panels/10_027.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
0434ED 70 61 6E 65 4705*  F10_028: db "panels/10_028.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
043501 70 61 6E 65 4706*  F10_029: db "panels/10_029.rgba2",0
       6C 73 2F 31 
       30 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043515 70 61 6E 65 4707*  F10_032: db "panels/10_032.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043529 70 61 6E 65 4708*  F10_035: db "panels/10_035.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
04353D 70 61 6E 65 4709*  F10_036: db "panels/10_036.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
043551 70 61 6E 65 4710*  F10_037: db "panels/10_037.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
043565 70 61 6E 65 4711*  F10_038: db "panels/10_038.rgba2",0
       6C 73 2F 31 
       30 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043579 70 61 6E 65 4712*  F10_040: db "panels/10_040.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
04358D 70 61 6E 65 4713*  F10_042: db "panels/10_042.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
0435A1 70 61 6E 65 4714*  F10_043: db "panels/10_043.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0435B5 70 61 6E 65 4715*  F10_044: db "panels/10_044.rgba2",0
       6C 73 2F 31 
       30 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
0435C9 70 61 6E 65 4716*  F11_004: db "panels/11_004.rgba2",0
       6C 73 2F 31 
       31 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
0435DD 70 61 6E 65 4717*  F11_009: db "panels/11_009.rgba2",0
       6C 73 2F 31 
       31 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
0435F1 70 61 6E 65 4718*  F11_010: db "panels/11_010.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
043605 70 61 6E 65 4719*  F11_011: db "panels/11_011.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
043619 70 61 6E 65 4720*  F11_012: db "panels/11_012.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
04362D 70 61 6E 65 4721*  F11_013: db "panels/11_013.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043641 70 61 6E 65 4722*  F11_014: db "panels/11_014.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043655 70 61 6E 65 4723*  F11_015: db "panels/11_015.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043669 70 61 6E 65 4724*  F11_016: db "panels/11_016.rgba2",0
       6C 73 2F 31 
       31 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
04367D 70 61 6E 65 4725*  F11_020: db "panels/11_020.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
043691 70 61 6E 65 4726*  F11_024: db "panels/11_024.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
0436A5 70 61 6E 65 4727*  F11_025: db "panels/11_025.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
0436B9 70 61 6E 65 4728*  F11_026: db "panels/11_026.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
0436CD 70 61 6E 65 4729*  F11_027: db "panels/11_027.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
0436E1 70 61 6E 65 4730*  F11_028: db "panels/11_028.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0436F5 70 61 6E 65 4731*  F11_029: db "panels/11_029.rgba2",0
       6C 73 2F 31 
       31 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043709 70 61 6E 65 4732*  F11_032: db "panels/11_032.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
04371D 70 61 6E 65 4733*  F11_035: db "panels/11_035.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043731 70 61 6E 65 4734*  F11_036: db "panels/11_036.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
043745 70 61 6E 65 4735*  F11_037: db "panels/11_037.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
043759 70 61 6E 65 4736*  F11_038: db "panels/11_038.rgba2",0
       6C 73 2F 31 
       31 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
04376D 70 61 6E 65 4737*  F11_040: db "panels/11_040.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043781 70 61 6E 65 4738*  F11_042: db "panels/11_042.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
043795 70 61 6E 65 4739*  F11_043: db "panels/11_043.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
0437A9 70 61 6E 65 4740*  F11_044: db "panels/11_044.rgba2",0
       6C 73 2F 31 
       31 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
0437BD 70 61 6E 65 4741*  F12_004: db "panels/12_004.rgba2",0
       6C 73 2F 31 
       32 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
0437D1 70 61 6E 65 4742*  F12_009: db "panels/12_009.rgba2",0
       6C 73 2F 31 
       32 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
0437E5 70 61 6E 65 4743*  F12_010: db "panels/12_010.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
0437F9 70 61 6E 65 4744*  F12_011: db "panels/12_011.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
04380D 70 61 6E 65 4745*  F12_012: db "panels/12_012.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043821 70 61 6E 65 4746*  F12_013: db "panels/12_013.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043835 70 61 6E 65 4747*  F12_014: db "panels/12_014.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043849 70 61 6E 65 4748*  F12_015: db "panels/12_015.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
04385D 70 61 6E 65 4749*  F12_016: db "panels/12_016.rgba2",0
       6C 73 2F 31 
       32 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043871 70 61 6E 65 4750*  F12_020: db "panels/12_020.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
043885 70 61 6E 65 4751*  F12_024: db "panels/12_024.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
043899 70 61 6E 65 4752*  F12_025: db "panels/12_025.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
0438AD 70 61 6E 65 4753*  F12_026: db "panels/12_026.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
0438C1 70 61 6E 65 4754*  F12_027: db "panels/12_027.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
0438D5 70 61 6E 65 4755*  F12_028: db "panels/12_028.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0438E9 70 61 6E 65 4756*  F12_029: db "panels/12_029.rgba2",0
       6C 73 2F 31 
       32 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0438FD 70 61 6E 65 4757*  F12_032: db "panels/12_032.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043911 70 61 6E 65 4758*  F12_035: db "panels/12_035.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043925 70 61 6E 65 4759*  F12_036: db "panels/12_036.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
043939 70 61 6E 65 4760*  F12_037: db "panels/12_037.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
04394D 70 61 6E 65 4761*  F12_038: db "panels/12_038.rgba2",0
       6C 73 2F 31 
       32 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043961 70 61 6E 65 4762*  F12_040: db "panels/12_040.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043975 70 61 6E 65 4763*  F12_042: db "panels/12_042.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
043989 70 61 6E 65 4764*  F12_043: db "panels/12_043.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
04399D 70 61 6E 65 4765*  F12_044: db "panels/12_044.rgba2",0
       6C 73 2F 31 
       32 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
0439B1 70 61 6E 65 4766*  F13_004: db "panels/13_004.rgba2",0
       6C 73 2F 31 
       33 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
0439C5 70 61 6E 65 4767*  F13_009: db "panels/13_009.rgba2",0
       6C 73 2F 31 
       33 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
0439D9 70 61 6E 65 4768*  F13_010: db "panels/13_010.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
0439ED 70 61 6E 65 4769*  F13_011: db "panels/13_011.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
043A01 70 61 6E 65 4770*  F13_012: db "panels/13_012.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043A15 70 61 6E 65 4771*  F13_013: db "panels/13_013.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043A29 70 61 6E 65 4772*  F13_014: db "panels/13_014.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043A3D 70 61 6E 65 4773*  F13_015: db "panels/13_015.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043A51 70 61 6E 65 4774*  F13_016: db "panels/13_016.rgba2",0
       6C 73 2F 31 
       33 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043A65 70 61 6E 65 4775*  F13_020: db "panels/13_020.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
043A79 70 61 6E 65 4776*  F13_024: db "panels/13_024.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
043A8D 70 61 6E 65 4777*  F13_025: db "panels/13_025.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
043AA1 70 61 6E 65 4778*  F13_026: db "panels/13_026.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
043AB5 70 61 6E 65 4779*  F13_027: db "panels/13_027.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
043AC9 70 61 6E 65 4780*  F13_028: db "panels/13_028.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
043ADD 70 61 6E 65 4781*  F13_029: db "panels/13_029.rgba2",0
       6C 73 2F 31 
       33 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043AF1 70 61 6E 65 4782*  F13_032: db "panels/13_032.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043B05 70 61 6E 65 4783*  F13_035: db "panels/13_035.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043B19 70 61 6E 65 4784*  F13_036: db "panels/13_036.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
043B2D 70 61 6E 65 4785*  F13_037: db "panels/13_037.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
043B41 70 61 6E 65 4786*  F13_038: db "panels/13_038.rgba2",0
       6C 73 2F 31 
       33 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043B55 70 61 6E 65 4787*  F13_040: db "panels/13_040.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043B69 70 61 6E 65 4788*  F13_042: db "panels/13_042.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
043B7D 70 61 6E 65 4789*  F13_043: db "panels/13_043.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
043B91 70 61 6E 65 4790*  F13_044: db "panels/13_044.rgba2",0
       6C 73 2F 31 
       33 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
043BA5 70 61 6E 65 4791*  F14_004: db "panels/14_004.rgba2",0
       6C 73 2F 31 
       34 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
043BB9 70 61 6E 65 4792*  F14_009: db "panels/14_009.rgba2",0
       6C 73 2F 31 
       34 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
043BCD 70 61 6E 65 4793*  F14_010: db "panels/14_010.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
043BE1 70 61 6E 65 4794*  F14_011: db "panels/14_011.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
043BF5 70 61 6E 65 4795*  F14_012: db "panels/14_012.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043C09 70 61 6E 65 4796*  F14_013: db "panels/14_013.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043C1D 70 61 6E 65 4797*  F14_014: db "panels/14_014.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043C31 70 61 6E 65 4798*  F14_015: db "panels/14_015.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043C45 70 61 6E 65 4799*  F14_016: db "panels/14_016.rgba2",0
       6C 73 2F 31 
       34 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043C59 70 61 6E 65 4800*  F14_020: db "panels/14_020.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
043C6D 70 61 6E 65 4801*  F14_024: db "panels/14_024.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
043C81 70 61 6E 65 4802*  F14_025: db "panels/14_025.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
043C95 70 61 6E 65 4803*  F14_026: db "panels/14_026.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
043CA9 70 61 6E 65 4804*  F14_027: db "panels/14_027.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
043CBD 70 61 6E 65 4805*  F14_028: db "panels/14_028.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
043CD1 70 61 6E 65 4806*  F14_029: db "panels/14_029.rgba2",0
       6C 73 2F 31 
       34 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043CE5 70 61 6E 65 4807*  F14_032: db "panels/14_032.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043CF9 70 61 6E 65 4808*  F14_035: db "panels/14_035.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043D0D 70 61 6E 65 4809*  F14_036: db "panels/14_036.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
043D21 70 61 6E 65 4810*  F14_037: db "panels/14_037.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
043D35 70 61 6E 65 4811*  F14_038: db "panels/14_038.rgba2",0
       6C 73 2F 31 
       34 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043D49 70 61 6E 65 4812*  F14_040: db "panels/14_040.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043D5D 70 61 6E 65 4813*  F14_042: db "panels/14_042.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
043D71 70 61 6E 65 4814*  F14_043: db "panels/14_043.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
043D85 70 61 6E 65 4815*  F14_044: db "panels/14_044.rgba2",0
       6C 73 2F 31 
       34 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
043D99 70 61 6E 65 4816*  F15_004: db "panels/15_004.rgba2",0
       6C 73 2F 31 
       35 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
043DAD 70 61 6E 65 4817*  F15_009: db "panels/15_009.rgba2",0
       6C 73 2F 31 
       35 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
043DC1 70 61 6E 65 4818*  F15_010: db "panels/15_010.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
043DD5 70 61 6E 65 4819*  F15_011: db "panels/15_011.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
043DE9 70 61 6E 65 4820*  F15_012: db "panels/15_012.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043DFD 70 61 6E 65 4821*  F15_013: db "panels/15_013.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
043E11 70 61 6E 65 4822*  F15_014: db "panels/15_014.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
043E25 70 61 6E 65 4823*  F15_015: db "panels/15_015.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
043E39 70 61 6E 65 4824*  F15_016: db "panels/15_016.rgba2",0
       6C 73 2F 31 
       35 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
043E4D 70 61 6E 65 4825*  F15_020: db "panels/15_020.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
043E61 70 61 6E 65 4826*  F15_024: db "panels/15_024.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
043E75 70 61 6E 65 4827*  F15_025: db "panels/15_025.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
043E89 70 61 6E 65 4828*  F15_026: db "panels/15_026.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
043E9D 70 61 6E 65 4829*  F15_027: db "panels/15_027.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
043EB1 70 61 6E 65 4830*  F15_028: db "panels/15_028.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
043EC5 70 61 6E 65 4831*  F15_029: db "panels/15_029.rgba2",0
       6C 73 2F 31 
       35 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
043ED9 70 61 6E 65 4832*  F15_032: db "panels/15_032.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
043EED 70 61 6E 65 4833*  F15_035: db "panels/15_035.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
043F01 70 61 6E 65 4834*  F15_036: db "panels/15_036.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
043F15 70 61 6E 65 4835*  F15_037: db "panels/15_037.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
043F29 70 61 6E 65 4836*  F15_038: db "panels/15_038.rgba2",0
       6C 73 2F 31 
       35 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
043F3D 70 61 6E 65 4837*  F15_040: db "panels/15_040.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
043F51 70 61 6E 65 4838*  F15_042: db "panels/15_042.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
043F65 70 61 6E 65 4839*  F15_043: db "panels/15_043.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
043F79 70 61 6E 65 4840*  F15_044: db "panels/15_044.rgba2",0
       6C 73 2F 31 
       35 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
043F8D 70 61 6E 65 4841*  F16_004: db "panels/16_004.rgba2",0
       6C 73 2F 31 
       36 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
043FA1 70 61 6E 65 4842*  F16_009: db "panels/16_009.rgba2",0
       6C 73 2F 31 
       36 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
043FB5 70 61 6E 65 4843*  F16_010: db "panels/16_010.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
043FC9 70 61 6E 65 4844*  F16_011: db "panels/16_011.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
043FDD 70 61 6E 65 4845*  F16_012: db "panels/16_012.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
043FF1 70 61 6E 65 4846*  F16_013: db "panels/16_013.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
044005 70 61 6E 65 4847*  F16_014: db "panels/16_014.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044019 70 61 6E 65 4848*  F16_015: db "panels/16_015.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
04402D 70 61 6E 65 4849*  F16_016: db "panels/16_016.rgba2",0
       6C 73 2F 31 
       36 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044041 70 61 6E 65 4850*  F16_020: db "panels/16_020.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
044055 70 61 6E 65 4851*  F16_024: db "panels/16_024.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
044069 70 61 6E 65 4852*  F16_025: db "panels/16_025.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
04407D 70 61 6E 65 4853*  F16_026: db "panels/16_026.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
044091 70 61 6E 65 4854*  F16_027: db "panels/16_027.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
0440A5 70 61 6E 65 4855*  F16_028: db "panels/16_028.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0440B9 70 61 6E 65 4856*  F16_029: db "panels/16_029.rgba2",0
       6C 73 2F 31 
       36 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0440CD 70 61 6E 65 4857*  F16_032: db "panels/16_032.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0440E1 70 61 6E 65 4858*  F16_035: db "panels/16_035.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0440F5 70 61 6E 65 4859*  F16_036: db "panels/16_036.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
044109 70 61 6E 65 4860*  F16_037: db "panels/16_037.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
04411D 70 61 6E 65 4861*  F16_038: db "panels/16_038.rgba2",0
       6C 73 2F 31 
       36 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044131 70 61 6E 65 4862*  F16_040: db "panels/16_040.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044145 70 61 6E 65 4863*  F16_042: db "panels/16_042.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
044159 70 61 6E 65 4864*  F16_043: db "panels/16_043.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
04416D 70 61 6E 65 4865*  F16_044: db "panels/16_044.rgba2",0
       6C 73 2F 31 
       36 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
044181 70 61 6E 65 4866*  F17_004: db "panels/17_004.rgba2",0
       6C 73 2F 31 
       37 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
044195 70 61 6E 65 4867*  F17_009: db "panels/17_009.rgba2",0
       6C 73 2F 31 
       37 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
0441A9 70 61 6E 65 4868*  F17_010: db "panels/17_010.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
0441BD 70 61 6E 65 4869*  F17_011: db "panels/17_011.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
0441D1 70 61 6E 65 4870*  F17_012: db "panels/17_012.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0441E5 70 61 6E 65 4871*  F17_013: db "panels/17_013.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0441F9 70 61 6E 65 4872*  F17_014: db "panels/17_014.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
04420D 70 61 6E 65 4873*  F17_015: db "panels/17_015.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044221 70 61 6E 65 4874*  F17_016: db "panels/17_016.rgba2",0
       6C 73 2F 31 
       37 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044235 70 61 6E 65 4875*  F17_020: db "panels/17_020.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
044249 70 61 6E 65 4876*  F17_024: db "panels/17_024.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
04425D 70 61 6E 65 4877*  F17_025: db "panels/17_025.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
044271 70 61 6E 65 4878*  F17_026: db "panels/17_026.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
044285 70 61 6E 65 4879*  F17_027: db "panels/17_027.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
044299 70 61 6E 65 4880*  F17_028: db "panels/17_028.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0442AD 70 61 6E 65 4881*  F17_029: db "panels/17_029.rgba2",0
       6C 73 2F 31 
       37 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0442C1 70 61 6E 65 4882*  F17_032: db "panels/17_032.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0442D5 70 61 6E 65 4883*  F17_035: db "panels/17_035.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0442E9 70 61 6E 65 4884*  F17_036: db "panels/17_036.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
0442FD 70 61 6E 65 4885*  F17_037: db "panels/17_037.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
044311 70 61 6E 65 4886*  F17_038: db "panels/17_038.rgba2",0
       6C 73 2F 31 
       37 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044325 70 61 6E 65 4887*  F17_040: db "panels/17_040.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044339 70 61 6E 65 4888*  F17_042: db "panels/17_042.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
04434D 70 61 6E 65 4889*  F17_043: db "panels/17_043.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044361 70 61 6E 65 4890*  F17_044: db "panels/17_044.rgba2",0
       6C 73 2F 31 
       37 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
044375 70 61 6E 65 4891*  F57_004: db "panels/57_004.rgba2",0
       6C 73 2F 35 
       37 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
044389 70 61 6E 65 4892*  F57_009: db "panels/57_009.rgba2",0
       6C 73 2F 35 
       37 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
04439D 70 61 6E 65 4893*  F57_010: db "panels/57_010.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
0443B1 70 61 6E 65 4894*  F57_011: db "panels/57_011.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
0443C5 70 61 6E 65 4895*  F57_012: db "panels/57_012.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0443D9 70 61 6E 65 4896*  F57_013: db "panels/57_013.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0443ED 70 61 6E 65 4897*  F57_014: db "panels/57_014.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
044401 70 61 6E 65 4898*  F57_015: db "panels/57_015.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044415 70 61 6E 65 4899*  F57_016: db "panels/57_016.rgba2",0
       6C 73 2F 35 
       37 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044429 70 61 6E 65 4900*  F57_020: db "panels/57_020.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
04443D 70 61 6E 65 4901*  F57_024: db "panels/57_024.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
044451 70 61 6E 65 4902*  F57_025: db "panels/57_025.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
044465 70 61 6E 65 4903*  F57_026: db "panels/57_026.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
044479 70 61 6E 65 4904*  F57_027: db "panels/57_027.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
04448D 70 61 6E 65 4905*  F57_028: db "panels/57_028.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
0444A1 70 61 6E 65 4906*  F57_029: db "panels/57_029.rgba2",0
       6C 73 2F 35 
       37 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0444B5 70 61 6E 65 4907*  F57_032: db "panels/57_032.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0444C9 70 61 6E 65 4908*  F57_035: db "panels/57_035.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0444DD 70 61 6E 65 4909*  F57_036: db "panels/57_036.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
0444F1 70 61 6E 65 4910*  F57_037: db "panels/57_037.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
044505 70 61 6E 65 4911*  F57_038: db "panels/57_038.rgba2",0
       6C 73 2F 35 
       37 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044519 70 61 6E 65 4912*  F57_040: db "panels/57_040.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
04452D 70 61 6E 65 4913*  F57_042: db "panels/57_042.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
044541 70 61 6E 65 4914*  F57_043: db "panels/57_043.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044555 70 61 6E 65 4915*  F57_044: db "panels/57_044.rgba2",0
       6C 73 2F 35 
       37 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
044569 70 61 6E 65 4916*  F58_004: db "panels/58_004.rgba2",0
       6C 73 2F 35 
       38 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
04457D 70 61 6E 65 4917*  F58_009: db "panels/58_009.rgba2",0
       6C 73 2F 35 
       38 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
044591 70 61 6E 65 4918*  F58_010: db "panels/58_010.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
0445A5 70 61 6E 65 4919*  F58_011: db "panels/58_011.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
0445B9 70 61 6E 65 4920*  F58_012: db "panels/58_012.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0445CD 70 61 6E 65 4921*  F58_013: db "panels/58_013.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0445E1 70 61 6E 65 4922*  F58_014: db "panels/58_014.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
0445F5 70 61 6E 65 4923*  F58_015: db "panels/58_015.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
044609 70 61 6E 65 4924*  F58_016: db "panels/58_016.rgba2",0
       6C 73 2F 35 
       38 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
04461D 70 61 6E 65 4925*  F58_020: db "panels/58_020.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
044631 70 61 6E 65 4926*  F58_024: db "panels/58_024.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
044645 70 61 6E 65 4927*  F58_025: db "panels/58_025.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
044659 70 61 6E 65 4928*  F58_026: db "panels/58_026.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
04466D 70 61 6E 65 4929*  F58_027: db "panels/58_027.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
044681 70 61 6E 65 4930*  F58_028: db "panels/58_028.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044695 70 61 6E 65 4931*  F58_029: db "panels/58_029.rgba2",0
       6C 73 2F 35 
       38 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
0446A9 70 61 6E 65 4932*  F58_032: db "panels/58_032.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0446BD 70 61 6E 65 4933*  F58_035: db "panels/58_035.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0446D1 70 61 6E 65 4934*  F58_036: db "panels/58_036.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
0446E5 70 61 6E 65 4935*  F58_037: db "panels/58_037.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
0446F9 70 61 6E 65 4936*  F58_038: db "panels/58_038.rgba2",0
       6C 73 2F 35 
       38 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
04470D 70 61 6E 65 4937*  F58_040: db "panels/58_040.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044721 70 61 6E 65 4938*  F58_042: db "panels/58_042.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
044735 70 61 6E 65 4939*  F58_043: db "panels/58_043.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
044749 70 61 6E 65 4940*  F58_044: db "panels/58_044.rgba2",0
       6C 73 2F 35 
       38 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
04475D 70 61 6E 65 4941*  F59_004: db "panels/59_004.rgba2",0
       6C 73 2F 35 
       39 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
044771 70 61 6E 65 4942*  F59_009: db "panels/59_009.rgba2",0
       6C 73 2F 35 
       39 5F 30 30 
       39 2E 72 67 
       62 61 32 00 
044785 70 61 6E 65 4943*  F59_010: db "panels/59_010.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       30 2E 72 67 
       62 61 32 00 
044799 70 61 6E 65 4944*  F59_011: db "panels/59_011.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       31 2E 72 67 
       62 61 32 00 
0447AD 70 61 6E 65 4945*  F59_012: db "panels/59_012.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       32 2E 72 67 
       62 61 32 00 
0447C1 70 61 6E 65 4946*  F59_013: db "panels/59_013.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       33 2E 72 67 
       62 61 32 00 
0447D5 70 61 6E 65 4947*  F59_014: db "panels/59_014.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       34 2E 72 67 
       62 61 32 00 
0447E9 70 61 6E 65 4948*  F59_015: db "panels/59_015.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       35 2E 72 67 
       62 61 32 00 
0447FD 70 61 6E 65 4949*  F59_016: db "panels/59_016.rgba2",0
       6C 73 2F 35 
       39 5F 30 31 
       36 2E 72 67 
       62 61 32 00 
044811 70 61 6E 65 4950*  F59_020: db "panels/59_020.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
044825 70 61 6E 65 4951*  F59_024: db "panels/59_024.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       34 2E 72 67 
       62 61 32 00 
044839 70 61 6E 65 4952*  F59_025: db "panels/59_025.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       35 2E 72 67 
       62 61 32 00 
04484D 70 61 6E 65 4953*  F59_026: db "panels/59_026.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       36 2E 72 67 
       62 61 32 00 
044861 70 61 6E 65 4954*  F59_027: db "panels/59_027.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       37 2E 72 67 
       62 61 32 00 
044875 70 61 6E 65 4955*  F59_028: db "panels/59_028.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       38 2E 72 67 
       62 61 32 00 
044889 70 61 6E 65 4956*  F59_029: db "panels/59_029.rgba2",0
       6C 73 2F 35 
       39 5F 30 32 
       39 2E 72 67 
       62 61 32 00 
04489D 70 61 6E 65 4957*  F59_032: db "panels/59_032.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0448B1 70 61 6E 65 4958*  F59_035: db "panels/59_035.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       35 2E 72 67 
       62 61 32 00 
0448C5 70 61 6E 65 4959*  F59_036: db "panels/59_036.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       36 2E 72 67 
       62 61 32 00 
0448D9 70 61 6E 65 4960*  F59_037: db "panels/59_037.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       37 2E 72 67 
       62 61 32 00 
0448ED 70 61 6E 65 4961*  F59_038: db "panels/59_038.rgba2",0
       6C 73 2F 35 
       39 5F 30 33 
       38 2E 72 67 
       62 61 32 00 
044901 70 61 6E 65 4962*  F59_040: db "panels/59_040.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
044915 70 61 6E 65 4963*  F59_042: db "panels/59_042.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       32 2E 72 67 
       62 61 32 00 
044929 70 61 6E 65 4964*  F59_043: db "panels/59_043.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       33 2E 72 67 
       62 61 32 00 
04493D 70 61 6E 65 4965*  F59_044: db "panels/59_044.rgba2",0
       6C 73 2F 35 
       39 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
044951             4966*  
044951             4967*  ; sprite buffer ids:
044951             4968*  BUF_20_004: equ 0x0213
044951             4969*  BUF_20_020: equ 0x0214
044951             4970*  BUF_20_032: equ 0x0215
044951             4971*  BUF_20_040: equ 0x0216
044951             4972*  BUF_20_044: equ 0x0217
044951             4973*  BUF_21_004: equ 0x0218
044951             4974*  BUF_21_020: equ 0x0219
044951             4975*  BUF_21_032: equ 0x021A
044951             4976*  BUF_21_040: equ 0x021B
044951             4977*  BUF_21_044: equ 0x021C
044951             4978*  BUF_22_004: equ 0x021D
044951             4979*  BUF_22_020: equ 0x021E
044951             4980*  BUF_22_032: equ 0x021F
044951             4981*  BUF_22_040: equ 0x0220
044951             4982*  BUF_22_044: equ 0x0221
044951             4983*  BUF_23_004: equ 0x0222
044951             4984*  BUF_23_020: equ 0x0223
044951             4985*  BUF_23_032: equ 0x0224
044951             4986*  BUF_23_040: equ 0x0225
044951             4987*  BUF_23_044: equ 0x0226
044951             4988*  BUF_24_004: equ 0x0227
044951             4989*  BUF_24_020: equ 0x0228
044951             4990*  BUF_24_032: equ 0x0229
044951             4991*  BUF_24_040: equ 0x022A
044951             4992*  BUF_24_044: equ 0x022B
044951             4993*  BUF_40_004: equ 0x022C
044951             4994*  BUF_40_020: equ 0x022D
044951             4995*  BUF_40_032: equ 0x022E
044951             4996*  BUF_40_040: equ 0x022F
044951             4997*  BUF_40_044: equ 0x0230
044951             4998*  BUF_41_004: equ 0x0231
044951             4999*  BUF_41_020: equ 0x0232
044951             5000*  BUF_41_032: equ 0x0233
044951             5001*  BUF_41_040: equ 0x0234
044951             5002*  BUF_41_044: equ 0x0235
044951             5003*  BUF_42_004: equ 0x0236
044951             5004*  BUF_42_020: equ 0x0237
044951             5005*  BUF_42_032: equ 0x0238
044951             5006*  BUF_42_040: equ 0x0239
044951             5007*  BUF_42_044: equ 0x023A
044951             5008*  BUF_43_004: equ 0x023B
044951             5009*  BUF_43_020: equ 0x023C
044951             5010*  BUF_43_032: equ 0x023D
044951             5011*  BUF_43_040: equ 0x023E
044951             5012*  BUF_43_044: equ 0x023F
044951             5013*  BUF_44_004: equ 0x0240
044951             5014*  BUF_44_020: equ 0x0241
044951             5015*  BUF_44_032: equ 0x0242
044951             5016*  BUF_44_040: equ 0x0243
044951             5017*  BUF_44_044: equ 0x0244
044951             5018*  BUF_45_004: equ 0x0245
044951             5019*  BUF_45_020: equ 0x0246
044951             5020*  BUF_45_032: equ 0x0247
044951             5021*  BUF_45_040: equ 0x0248
044951             5022*  BUF_45_044: equ 0x0249
044951             5023*  BUF_46_004: equ 0x024A
044951             5024*  BUF_46_020: equ 0x024B
044951             5025*  BUF_46_032: equ 0x024C
044951             5026*  BUF_46_040: equ 0x024D
044951             5027*  BUF_46_044: equ 0x024E
044951             5028*  BUF_47_004: equ 0x024F
044951             5029*  BUF_47_020: equ 0x0250
044951             5030*  BUF_47_032: equ 0x0251
044951             5031*  BUF_47_040: equ 0x0252
044951             5032*  BUF_47_044: equ 0x0253
044951             5033*  BUF_48_004: equ 0x0254
044951             5034*  BUF_48_020: equ 0x0255
044951             5035*  BUF_48_032: equ 0x0256
044951             5036*  BUF_48_040: equ 0x0257
044951             5037*  BUF_48_044: equ 0x0258
044951             5038*  BUF_49_004: equ 0x0259
044951             5039*  BUF_49_020: equ 0x025A
044951             5040*  BUF_49_032: equ 0x025B
044951             5041*  BUF_49_040: equ 0x025C
044951             5042*  BUF_49_044: equ 0x025D
044951             5043*  BUF_50_004: equ 0x025E
044951             5044*  BUF_50_020: equ 0x025F
044951             5045*  BUF_50_032: equ 0x0260
044951             5046*  BUF_50_040: equ 0x0261
044951             5047*  BUF_50_044: equ 0x0262
044951             5048*  BUF_51_004: equ 0x0263
044951             5049*  BUF_51_020: equ 0x0264
044951             5050*  BUF_51_032: equ 0x0265
044951             5051*  BUF_51_040: equ 0x0266
044951             5052*  BUF_51_044: equ 0x0267
044951             5053*  BUF_52_004: equ 0x0268
044951             5054*  BUF_52_020: equ 0x0269
044951             5055*  BUF_52_032: equ 0x026A
044951             5056*  BUF_52_040: equ 0x026B
044951             5057*  BUF_52_044: equ 0x026C
044951             5058*  
044951             5059*  sprite_num_panels: equ 90
044951             5060*  
044951             5061*  ; sprite buffer id reverse lookup:
044951             5062*  sprite_buffer_id_lut:
044951 13 02 00    5063*  	dl BUF_20_004
044954 14 02 00    5064*  	dl BUF_20_020
044957 15 02 00    5065*  	dl BUF_20_032
04495A 16 02 00    5066*  	dl BUF_20_040
04495D 17 02 00    5067*  	dl BUF_20_044
044960 18 02 00    5068*  	dl BUF_21_004
044963 19 02 00    5069*  	dl BUF_21_020
044966 1A 02 00    5070*  	dl BUF_21_032
044969 1B 02 00    5071*  	dl BUF_21_040
04496C 1C 02 00    5072*  	dl BUF_21_044
04496F 1D 02 00    5073*  	dl BUF_22_004
044972 1E 02 00    5074*  	dl BUF_22_020
044975 1F 02 00    5075*  	dl BUF_22_032
044978 20 02 00    5076*  	dl BUF_22_040
04497B 21 02 00    5077*  	dl BUF_22_044
04497E 22 02 00    5078*  	dl BUF_23_004
044981 23 02 00    5079*  	dl BUF_23_020
044984 24 02 00    5080*  	dl BUF_23_032
044987 25 02 00    5081*  	dl BUF_23_040
04498A 26 02 00    5082*  	dl BUF_23_044
04498D 27 02 00    5083*  	dl BUF_24_004
044990 28 02 00    5084*  	dl BUF_24_020
044993 29 02 00    5085*  	dl BUF_24_032
044996 2A 02 00    5086*  	dl BUF_24_040
044999 2B 02 00    5087*  	dl BUF_24_044
04499C 2C 02 00    5088*  	dl BUF_40_004
04499F 2D 02 00    5089*  	dl BUF_40_020
0449A2 2E 02 00    5090*  	dl BUF_40_032
0449A5 2F 02 00    5091*  	dl BUF_40_040
0449A8 30 02 00    5092*  	dl BUF_40_044
0449AB 31 02 00    5093*  	dl BUF_41_004
0449AE 32 02 00    5094*  	dl BUF_41_020
0449B1 33 02 00    5095*  	dl BUF_41_032
0449B4 34 02 00    5096*  	dl BUF_41_040
0449B7 35 02 00    5097*  	dl BUF_41_044
0449BA 36 02 00    5098*  	dl BUF_42_004
0449BD 37 02 00    5099*  	dl BUF_42_020
0449C0 38 02 00    5100*  	dl BUF_42_032
0449C3 39 02 00    5101*  	dl BUF_42_040
0449C6 3A 02 00    5102*  	dl BUF_42_044
0449C9 3B 02 00    5103*  	dl BUF_43_004
0449CC 3C 02 00    5104*  	dl BUF_43_020
0449CF 3D 02 00    5105*  	dl BUF_43_032
0449D2 3E 02 00    5106*  	dl BUF_43_040
0449D5 3F 02 00    5107*  	dl BUF_43_044
0449D8 40 02 00    5108*  	dl BUF_44_004
0449DB 41 02 00    5109*  	dl BUF_44_020
0449DE 42 02 00    5110*  	dl BUF_44_032
0449E1 43 02 00    5111*  	dl BUF_44_040
0449E4 44 02 00    5112*  	dl BUF_44_044
0449E7 45 02 00    5113*  	dl BUF_45_004
0449EA 46 02 00    5114*  	dl BUF_45_020
0449ED 47 02 00    5115*  	dl BUF_45_032
0449F0 48 02 00    5116*  	dl BUF_45_040
0449F3 49 02 00    5117*  	dl BUF_45_044
0449F6 4A 02 00    5118*  	dl BUF_46_004
0449F9 4B 02 00    5119*  	dl BUF_46_020
0449FC 4C 02 00    5120*  	dl BUF_46_032
0449FF 4D 02 00    5121*  	dl BUF_46_040
044A02 4E 02 00    5122*  	dl BUF_46_044
044A05 4F 02 00    5123*  	dl BUF_47_004
044A08 50 02 00    5124*  	dl BUF_47_020
044A0B 51 02 00    5125*  	dl BUF_47_032
044A0E 52 02 00    5126*  	dl BUF_47_040
044A11 53 02 00    5127*  	dl BUF_47_044
044A14 54 02 00    5128*  	dl BUF_48_004
044A17 55 02 00    5129*  	dl BUF_48_020
044A1A 56 02 00    5130*  	dl BUF_48_032
044A1D 57 02 00    5131*  	dl BUF_48_040
044A20 58 02 00    5132*  	dl BUF_48_044
044A23 59 02 00    5133*  	dl BUF_49_004
044A26 5A 02 00    5134*  	dl BUF_49_020
044A29 5B 02 00    5135*  	dl BUF_49_032
044A2C 5C 02 00    5136*  	dl BUF_49_040
044A2F 5D 02 00    5137*  	dl BUF_49_044
044A32 5E 02 00    5138*  	dl BUF_50_004
044A35 5F 02 00    5139*  	dl BUF_50_020
044A38 60 02 00    5140*  	dl BUF_50_032
044A3B 61 02 00    5141*  	dl BUF_50_040
044A3E 62 02 00    5142*  	dl BUF_50_044
044A41 63 02 00    5143*  	dl BUF_51_004
044A44 64 02 00    5144*  	dl BUF_51_020
044A47 65 02 00    5145*  	dl BUF_51_032
044A4A 66 02 00    5146*  	dl BUF_51_040
044A4D 67 02 00    5147*  	dl BUF_51_044
044A50 68 02 00    5148*  	dl BUF_52_004
044A53 69 02 00    5149*  	dl BUF_52_020
044A56 6A 02 00    5150*  	dl BUF_52_032
044A59 6B 02 00    5151*  	dl BUF_52_040
044A5C 6C 02 00    5152*  	dl BUF_52_044
044A5F             5153*  
044A5F             5154*  ; sprite load routines jump table:
044A5F             5155*  sprite_load_panels_table:
044A5F 6D 4B 04    5156*  	dl ld_20_004
044A62 97 4B 04    5157*  	dl ld_20_020
044A65 C1 4B 04    5158*  	dl ld_20_032
044A68 EB 4B 04    5159*  	dl ld_20_040
044A6B 15 4C 04    5160*  	dl ld_20_044
044A6E 3F 4C 04    5161*  	dl ld_21_004
044A71 69 4C 04    5162*  	dl ld_21_020
044A74 93 4C 04    5163*  	dl ld_21_032
044A77 BD 4C 04    5164*  	dl ld_21_040
044A7A E7 4C 04    5165*  	dl ld_21_044
044A7D 11 4D 04    5166*  	dl ld_22_004
044A80 3B 4D 04    5167*  	dl ld_22_020
044A83 65 4D 04    5168*  	dl ld_22_032
044A86 8F 4D 04    5169*  	dl ld_22_040
044A89 B9 4D 04    5170*  	dl ld_22_044
044A8C E3 4D 04    5171*  	dl ld_23_004
044A8F 0D 4E 04    5172*  	dl ld_23_020
044A92 37 4E 04    5173*  	dl ld_23_032
044A95 61 4E 04    5174*  	dl ld_23_040
044A98 8B 4E 04    5175*  	dl ld_23_044
044A9B B5 4E 04    5176*  	dl ld_24_004
044A9E DF 4E 04    5177*  	dl ld_24_020
044AA1 09 4F 04    5178*  	dl ld_24_032
044AA4 33 4F 04    5179*  	dl ld_24_040
044AA7 5D 4F 04    5180*  	dl ld_24_044
044AAA 87 4F 04    5181*  	dl ld_40_004
044AAD B1 4F 04    5182*  	dl ld_40_020
044AB0 DB 4F 04    5183*  	dl ld_40_032
044AB3 05 50 04    5184*  	dl ld_40_040
044AB6 2F 50 04    5185*  	dl ld_40_044
044AB9 59 50 04    5186*  	dl ld_41_004
044ABC 83 50 04    5187*  	dl ld_41_020
044ABF AD 50 04    5188*  	dl ld_41_032
044AC2 D7 50 04    5189*  	dl ld_41_040
044AC5 01 51 04    5190*  	dl ld_41_044
044AC8 2B 51 04    5191*  	dl ld_42_004
044ACB 55 51 04    5192*  	dl ld_42_020
044ACE 7F 51 04    5193*  	dl ld_42_032
044AD1 A9 51 04    5194*  	dl ld_42_040
044AD4 D3 51 04    5195*  	dl ld_42_044
044AD7 FD 51 04    5196*  	dl ld_43_004
044ADA 27 52 04    5197*  	dl ld_43_020
044ADD 51 52 04    5198*  	dl ld_43_032
044AE0 7B 52 04    5199*  	dl ld_43_040
044AE3 A5 52 04    5200*  	dl ld_43_044
044AE6 CF 52 04    5201*  	dl ld_44_004
044AE9 F9 52 04    5202*  	dl ld_44_020
044AEC 23 53 04    5203*  	dl ld_44_032
044AEF 4D 53 04    5204*  	dl ld_44_040
044AF2 77 53 04    5205*  	dl ld_44_044
044AF5 A1 53 04    5206*  	dl ld_45_004
044AF8 CB 53 04    5207*  	dl ld_45_020
044AFB F5 53 04    5208*  	dl ld_45_032
044AFE 1F 54 04    5209*  	dl ld_45_040
044B01 49 54 04    5210*  	dl ld_45_044
044B04 73 54 04    5211*  	dl ld_46_004
044B07 9D 54 04    5212*  	dl ld_46_020
044B0A C7 54 04    5213*  	dl ld_46_032
044B0D F1 54 04    5214*  	dl ld_46_040
044B10 1B 55 04    5215*  	dl ld_46_044
044B13 45 55 04    5216*  	dl ld_47_004
044B16 6F 55 04    5217*  	dl ld_47_020
044B19 99 55 04    5218*  	dl ld_47_032
044B1C C3 55 04    5219*  	dl ld_47_040
044B1F ED 55 04    5220*  	dl ld_47_044
044B22 17 56 04    5221*  	dl ld_48_004
044B25 41 56 04    5222*  	dl ld_48_020
044B28 6B 56 04    5223*  	dl ld_48_032
044B2B 95 56 04    5224*  	dl ld_48_040
044B2E BF 56 04    5225*  	dl ld_48_044
044B31 E9 56 04    5226*  	dl ld_49_004
044B34 13 57 04    5227*  	dl ld_49_020
044B37 3D 57 04    5228*  	dl ld_49_032
044B3A 67 57 04    5229*  	dl ld_49_040
044B3D 91 57 04    5230*  	dl ld_49_044
044B40 BB 57 04    5231*  	dl ld_50_004
044B43 E5 57 04    5232*  	dl ld_50_020
044B46 0F 58 04    5233*  	dl ld_50_032
044B49 39 58 04    5234*  	dl ld_50_040
044B4C 63 58 04    5235*  	dl ld_50_044
044B4F 8D 58 04    5236*  	dl ld_51_004
044B52 B7 58 04    5237*  	dl ld_51_020
044B55 E1 58 04    5238*  	dl ld_51_032
044B58 0B 59 04    5239*  	dl ld_51_040
044B5B 35 59 04    5240*  	dl ld_51_044
044B5E 5F 59 04    5241*  	dl ld_52_004
044B61 89 59 04    5242*  	dl ld_52_020
044B64 B3 59 04    5243*  	dl ld_52_032
044B67 DD 59 04    5244*  	dl ld_52_040
044B6A 07 5A 04    5245*  	dl ld_52_044
044B6D             5246*  
044B6D             5247*  ; Import sprite .rgba2 bitmap files and load them into VDP buffers
044B6D             5248*  
044B6D             5249*  ld_20_004:
044B6D 21 31 5A 04 5250*  	ld hl,F20_004
044B71 22 3A B5 04 5251*  	ld (cur_filename),hl
044B75 11 C5 C2 04 5252*  	ld de,filedata
044B79 01 00 00 01 5253*  	ld bc,65536
044B7D 3E 01       5254*  	ld a,mos_load
044B7F 5B CF       5255*  	RST.LIL 08h
044B81 21 13 02 00 5256*  	ld hl,BUF_20_004
044B85 01 13 00 00 5257*  	ld bc,19
044B89 11 12 00 00 5258*  	ld de,18
044B8D DD 21 56 01 5259*  	ld ix,342
       00          
044B92 CD A5 B6 04 5260*  	call vdu_load_img
044B96 C9          5261*  	ret
044B97             5262*  
044B97             5263*  ld_20_020:
044B97 21 45 5A 04 5264*  	ld hl,F20_020
044B9B 22 3A B5 04 5265*  	ld (cur_filename),hl
044B9F 11 C5 C2 04 5266*  	ld de,filedata
044BA3 01 00 00 01 5267*  	ld bc,65536
044BA7 3E 01       5268*  	ld a,mos_load
044BA9 5B CF       5269*  	RST.LIL 08h
044BAB 21 14 02 00 5270*  	ld hl,BUF_20_020
044BAF 01 17 00 00 5271*  	ld bc,23
044BB3 11 17 00 00 5272*  	ld de,23
044BB7 DD 21 11 02 5273*  	ld ix,529
       00          
044BBC CD A5 B6 04 5274*  	call vdu_load_img
044BC0 C9          5275*  	ret
044BC1             5276*  
044BC1             5277*  ld_20_032:
044BC1 21 59 5A 04 5278*  	ld hl,F20_032
044BC5 22 3A B5 04 5279*  	ld (cur_filename),hl
044BC9 11 C5 C2 04 5280*  	ld de,filedata
044BCD 01 00 00 01 5281*  	ld bc,65536
044BD1 3E 01       5282*  	ld a,mos_load
044BD3 5B CF       5283*  	RST.LIL 08h
044BD5 21 15 02 00 5284*  	ld hl,BUF_20_032
044BD9 01 20 00 00 5285*  	ld bc,32
044BDD 11 22 00 00 5286*  	ld de,34
044BE1 DD 21 40 04 5287*  	ld ix,1088
       00          
044BE6 CD A5 B6 04 5288*  	call vdu_load_img
044BEA C9          5289*  	ret
044BEB             5290*  
044BEB             5291*  ld_20_040:
044BEB 21 6D 5A 04 5292*  	ld hl,F20_040
044BEF 22 3A B5 04 5293*  	ld (cur_filename),hl
044BF3 11 C5 C2 04 5294*  	ld de,filedata
044BF7 01 00 00 01 5295*  	ld bc,65536
044BFB 3E 01       5296*  	ld a,mos_load
044BFD 5B CF       5297*  	RST.LIL 08h
044BFF 21 16 02 00 5298*  	ld hl,BUF_20_040
044C03 01 36 00 00 5299*  	ld bc,54
044C07 11 38 00 00 5300*  	ld de,56
044C0B DD 21 D0 0B 5301*  	ld ix,3024
       00          
044C10 CD A5 B6 04 5302*  	call vdu_load_img
044C14 C9          5303*  	ret
044C15             5304*  
044C15             5305*  ld_20_044:
044C15 21 81 5A 04 5306*  	ld hl,F20_044
044C19 22 3A B5 04 5307*  	ld (cur_filename),hl
044C1D 11 C5 C2 04 5308*  	ld de,filedata
044C21 01 00 00 01 5309*  	ld bc,65536
044C25 3E 01       5310*  	ld a,mos_load
044C27 5B CF       5311*  	RST.LIL 08h
044C29 21 17 02 00 5312*  	ld hl,BUF_20_044
044C2D 01 6B 00 00 5313*  	ld bc,107
044C31 11 5B 00 00 5314*  	ld de,91
044C35 DD 21 09 26 5315*  	ld ix,9737
       00          
044C3A CD A5 B6 04 5316*  	call vdu_load_img
044C3E C9          5317*  	ret
044C3F             5318*  
044C3F             5319*  ld_21_004:
044C3F 21 95 5A 04 5320*  	ld hl,F21_004
044C43 22 3A B5 04 5321*  	ld (cur_filename),hl
044C47 11 C5 C2 04 5322*  	ld de,filedata
044C4B 01 00 00 01 5323*  	ld bc,65536
044C4F 3E 01       5324*  	ld a,mos_load
044C51 5B CF       5325*  	RST.LIL 08h
044C53 21 18 02 00 5326*  	ld hl,BUF_21_004
044C57 01 0B 00 00 5327*  	ld bc,11
044C5B 11 0B 00 00 5328*  	ld de,11
044C5F DD 21 79 00 5329*  	ld ix,121
       00          
044C64 CD A5 B6 04 5330*  	call vdu_load_img
044C68 C9          5331*  	ret
044C69             5332*  
044C69             5333*  ld_21_020:
044C69 21 A9 5A 04 5334*  	ld hl,F21_020
044C6D 22 3A B5 04 5335*  	ld (cur_filename),hl
044C71 11 C5 C2 04 5336*  	ld de,filedata
044C75 01 00 00 01 5337*  	ld bc,65536
044C79 3E 01       5338*  	ld a,mos_load
044C7B 5B CF       5339*  	RST.LIL 08h
044C7D 21 19 02 00 5340*  	ld hl,BUF_21_020
044C81 01 0E 00 00 5341*  	ld bc,14
044C85 11 0E 00 00 5342*  	ld de,14
044C89 DD 21 C4 00 5343*  	ld ix,196
       00          
044C8E CD A5 B6 04 5344*  	call vdu_load_img
044C92 C9          5345*  	ret
044C93             5346*  
044C93             5347*  ld_21_032:
044C93 21 BD 5A 04 5348*  	ld hl,F21_032
044C97 22 3A B5 04 5349*  	ld (cur_filename),hl
044C9B 11 C5 C2 04 5350*  	ld de,filedata
044C9F 01 00 00 01 5351*  	ld bc,65536
044CA3 3E 01       5352*  	ld a,mos_load
044CA5 5B CF       5353*  	RST.LIL 08h
044CA7 21 1A 02 00 5354*  	ld hl,BUF_21_032
044CAB 01 14 00 00 5355*  	ld bc,20
044CAF 11 16 00 00 5356*  	ld de,22
044CB3 DD 21 B8 01 5357*  	ld ix,440
       00          
044CB8 CD A5 B6 04 5358*  	call vdu_load_img
044CBC C9          5359*  	ret
044CBD             5360*  
044CBD             5361*  ld_21_040:
044CBD 21 D1 5A 04 5362*  	ld hl,F21_040
044CC1 22 3A B5 04 5363*  	ld (cur_filename),hl
044CC5 11 C5 C2 04 5364*  	ld de,filedata
044CC9 01 00 00 01 5365*  	ld bc,65536
044CCD 3E 01       5366*  	ld a,mos_load
044CCF 5B CF       5367*  	RST.LIL 08h
044CD1 21 1B 02 00 5368*  	ld hl,BUF_21_040
044CD5 01 21 00 00 5369*  	ld bc,33
044CD9 11 24 00 00 5370*  	ld de,36
044CDD DD 21 A4 04 5371*  	ld ix,1188
       00          
044CE2 CD A5 B6 04 5372*  	call vdu_load_img
044CE6 C9          5373*  	ret
044CE7             5374*  
044CE7             5375*  ld_21_044:
044CE7 21 E5 5A 04 5376*  	ld hl,F21_044
044CEB 22 3A B5 04 5377*  	ld (cur_filename),hl
044CEF 11 C5 C2 04 5378*  	ld de,filedata
044CF3 01 00 00 01 5379*  	ld bc,65536
044CF7 3E 01       5380*  	ld a,mos_load
044CF9 5B CF       5381*  	RST.LIL 08h
044CFB 21 1C 02 00 5382*  	ld hl,BUF_21_044
044CFF 01 64 00 00 5383*  	ld bc,100
044D03 11 1E 00 00 5384*  	ld de,30
044D07 DD 21 B8 0B 5385*  	ld ix,3000
       00          
044D0C CD A5 B6 04 5386*  	call vdu_load_img
044D10 C9          5387*  	ret
044D11             5388*  
044D11             5389*  ld_22_004:
044D11 21 F9 5A 04 5390*  	ld hl,F22_004
044D15 22 3A B5 04 5391*  	ld (cur_filename),hl
044D19 11 C5 C2 04 5392*  	ld de,filedata
044D1D 01 00 00 01 5393*  	ld bc,65536
044D21 3E 01       5394*  	ld a,mos_load
044D23 5B CF       5395*  	RST.LIL 08h
044D25 21 1D 02 00 5396*  	ld hl,BUF_22_004
044D29 01 11 00 00 5397*  	ld bc,17
044D2D 11 0B 00 00 5398*  	ld de,11
044D31 DD 21 BB 00 5399*  	ld ix,187
       00          
044D36 CD A5 B6 04 5400*  	call vdu_load_img
044D3A C9          5401*  	ret
044D3B             5402*  
044D3B             5403*  ld_22_020:
044D3B 21 0D 5B 04 5404*  	ld hl,F22_020
044D3F 22 3A B5 04 5405*  	ld (cur_filename),hl
044D43 11 C5 C2 04 5406*  	ld de,filedata
044D47 01 00 00 01 5407*  	ld bc,65536
044D4B 3E 01       5408*  	ld a,mos_load
044D4D 5B CF       5409*  	RST.LIL 08h
044D4F 21 1E 02 00 5410*  	ld hl,BUF_22_020
044D53 01 16 00 00 5411*  	ld bc,22
044D57 11 0E 00 00 5412*  	ld de,14
044D5B DD 21 34 01 5413*  	ld ix,308
       00          
044D60 CD A5 B6 04 5414*  	call vdu_load_img
044D64 C9          5415*  	ret
044D65             5416*  
044D65             5417*  ld_22_032:
044D65 21 21 5B 04 5418*  	ld hl,F22_032
044D69 22 3A B5 04 5419*  	ld (cur_filename),hl
044D6D 11 C5 C2 04 5420*  	ld de,filedata
044D71 01 00 00 01 5421*  	ld bc,65536
044D75 3E 01       5422*  	ld a,mos_load
044D77 5B CF       5423*  	RST.LIL 08h
044D79 21 1F 02 00 5424*  	ld hl,BUF_22_032
044D7D 01 1E 00 00 5425*  	ld bc,30
044D81 11 16 00 00 5426*  	ld de,22
044D85 DD 21 94 02 5427*  	ld ix,660
       00          
044D8A CD A5 B6 04 5428*  	call vdu_load_img
044D8E C9          5429*  	ret
044D8F             5430*  
044D8F             5431*  ld_22_040:
044D8F 21 35 5B 04 5432*  	ld hl,F22_040
044D93 22 3A B5 04 5433*  	ld (cur_filename),hl
044D97 11 C5 C2 04 5434*  	ld de,filedata
044D9B 01 00 00 01 5435*  	ld bc,65536
044D9F 3E 01       5436*  	ld a,mos_load
044DA1 5B CF       5437*  	RST.LIL 08h
044DA3 21 20 02 00 5438*  	ld hl,BUF_22_040
044DA7 01 33 00 00 5439*  	ld bc,51
044DAB 11 24 00 00 5440*  	ld de,36
044DAF DD 21 2C 07 5441*  	ld ix,1836
       00          
044DB4 CD A5 B6 04 5442*  	call vdu_load_img
044DB8 C9          5443*  	ret
044DB9             5444*  
044DB9             5445*  ld_22_044:
044DB9 21 49 5B 04 5446*  	ld hl,F22_044
044DBD 22 3A B5 04 5447*  	ld (cur_filename),hl
044DC1 11 C5 C2 04 5448*  	ld de,filedata
044DC5 01 00 00 01 5449*  	ld bc,65536
044DC9 3E 01       5450*  	ld a,mos_load
044DCB 5B CF       5451*  	RST.LIL 08h
044DCD 21 21 02 00 5452*  	ld hl,BUF_22_044
044DD1 01 96 00 00 5453*  	ld bc,150
044DD5 11 1E 00 00 5454*  	ld de,30
044DD9 DD 21 94 11 5455*  	ld ix,4500
       00          
044DDE CD A5 B6 04 5456*  	call vdu_load_img
044DE2 C9          5457*  	ret
044DE3             5458*  
044DE3             5459*  ld_23_004:
044DE3 21 5D 5B 04 5460*  	ld hl,F23_004
044DE7 22 3A B5 04 5461*  	ld (cur_filename),hl
044DEB 11 C5 C2 04 5462*  	ld de,filedata
044DEF 01 00 00 01 5463*  	ld bc,65536
044DF3 3E 01       5464*  	ld a,mos_load
044DF5 5B CF       5465*  	RST.LIL 08h
044DF7 21 22 02 00 5466*  	ld hl,BUF_23_004
044DFB 01 0E 00 00 5467*  	ld bc,14
044DFF 11 06 00 00 5468*  	ld de,6
044E03 DD 21 54 00 5469*  	ld ix,84
       00          
044E08 CD A5 B6 04 5470*  	call vdu_load_img
044E0C C9          5471*  	ret
044E0D             5472*  
044E0D             5473*  ld_23_020:
044E0D 21 71 5B 04 5474*  	ld hl,F23_020
044E11 22 3A B5 04 5475*  	ld (cur_filename),hl
044E15 11 C5 C2 04 5476*  	ld de,filedata
044E19 01 00 00 01 5477*  	ld bc,65536
044E1D 3E 01       5478*  	ld a,mos_load
044E1F 5B CF       5479*  	RST.LIL 08h
044E21 21 23 02 00 5480*  	ld hl,BUF_23_020
044E25 01 11 00 00 5481*  	ld bc,17
044E29 11 08 00 00 5482*  	ld de,8
044E2D DD 21 88 00 5483*  	ld ix,136
       00          
044E32 CD A5 B6 04 5484*  	call vdu_load_img
044E36 C9          5485*  	ret
044E37             5486*  
044E37             5487*  ld_23_032:
044E37 21 85 5B 04 5488*  	ld hl,F23_032
044E3B 22 3A B5 04 5489*  	ld (cur_filename),hl
044E3F 11 C5 C2 04 5490*  	ld de,filedata
044E43 01 00 00 01 5491*  	ld bc,65536
044E47 3E 01       5492*  	ld a,mos_load
044E49 5B CF       5493*  	RST.LIL 08h
044E4B 21 24 02 00 5494*  	ld hl,BUF_23_032
044E4F 01 19 00 00 5495*  	ld bc,25
044E53 11 0B 00 00 5496*  	ld de,11
044E57 DD 21 13 01 5497*  	ld ix,275
       00          
044E5C CD A5 B6 04 5498*  	call vdu_load_img
044E60 C9          5499*  	ret
044E61             5500*  
044E61             5501*  ld_23_040:
044E61 21 99 5B 04 5502*  	ld hl,F23_040
044E65 22 3A B5 04 5503*  	ld (cur_filename),hl
044E69 11 C5 C2 04 5504*  	ld de,filedata
044E6D 01 00 00 01 5505*  	ld bc,65536
044E71 3E 01       5506*  	ld a,mos_load
044E73 5B CF       5507*  	RST.LIL 08h
044E75 21 25 02 00 5508*  	ld hl,BUF_23_040
044E79 01 28 00 00 5509*  	ld bc,40
044E7D 11 12 00 00 5510*  	ld de,18
044E81 DD 21 D0 02 5511*  	ld ix,720
       00          
044E86 CD A5 B6 04 5512*  	call vdu_load_img
044E8A C9          5513*  	ret
044E8B             5514*  
044E8B             5515*  ld_23_044:
044E8B 21 AD 5B 04 5516*  	ld hl,F23_044
044E8F 22 3A B5 04 5517*  	ld (cur_filename),hl
044E93 11 C5 C2 04 5518*  	ld de,filedata
044E97 01 00 00 01 5519*  	ld bc,65536
044E9B 3E 01       5520*  	ld a,mos_load
044E9D 5B CF       5521*  	RST.LIL 08h
044E9F 21 26 02 00 5522*  	ld hl,BUF_23_044
044EA3 01 01 00 00 5523*  	ld bc,1
044EA7 11 01 00 00 5524*  	ld de,1
044EAB DD 21 01 00 5525*  	ld ix,1
       00          
044EB0 CD A5 B6 04 5526*  	call vdu_load_img
044EB4 C9          5527*  	ret
044EB5             5528*  
044EB5             5529*  ld_24_004:
044EB5 21 C1 5B 04 5530*  	ld hl,F24_004
044EB9 22 3A B5 04 5531*  	ld (cur_filename),hl
044EBD 11 C5 C2 04 5532*  	ld de,filedata
044EC1 01 00 00 01 5533*  	ld bc,65536
044EC5 3E 01       5534*  	ld a,mos_load
044EC7 5B CF       5535*  	RST.LIL 08h
044EC9 21 27 02 00 5536*  	ld hl,BUF_24_004
044ECD 01 0B 00 00 5537*  	ld bc,11
044ED1 11 0B 00 00 5538*  	ld de,11
044ED5 DD 21 79 00 5539*  	ld ix,121
       00          
044EDA CD A5 B6 04 5540*  	call vdu_load_img
044EDE C9          5541*  	ret
044EDF             5542*  
044EDF             5543*  ld_24_020:
044EDF 21 D5 5B 04 5544*  	ld hl,F24_020
044EE3 22 3A B5 04 5545*  	ld (cur_filename),hl
044EE7 11 C5 C2 04 5546*  	ld de,filedata
044EEB 01 00 00 01 5547*  	ld bc,65536
044EEF 3E 01       5548*  	ld a,mos_load
044EF1 5B CF       5549*  	RST.LIL 08h
044EF3 21 28 02 00 5550*  	ld hl,BUF_24_020
044EF7 01 0E 00 00 5551*  	ld bc,14
044EFB 11 0E 00 00 5552*  	ld de,14
044EFF DD 21 C4 00 5553*  	ld ix,196
       00          
044F04 CD A5 B6 04 5554*  	call vdu_load_img
044F08 C9          5555*  	ret
044F09             5556*  
044F09             5557*  ld_24_032:
044F09 21 E9 5B 04 5558*  	ld hl,F24_032
044F0D 22 3A B5 04 5559*  	ld (cur_filename),hl
044F11 11 C5 C2 04 5560*  	ld de,filedata
044F15 01 00 00 01 5561*  	ld bc,65536
044F19 3E 01       5562*  	ld a,mos_load
044F1B 5B CF       5563*  	RST.LIL 08h
044F1D 21 29 02 00 5564*  	ld hl,BUF_24_032
044F21 01 14 00 00 5565*  	ld bc,20
044F25 11 16 00 00 5566*  	ld de,22
044F29 DD 21 B8 01 5567*  	ld ix,440
       00          
044F2E CD A5 B6 04 5568*  	call vdu_load_img
044F32 C9          5569*  	ret
044F33             5570*  
044F33             5571*  ld_24_040:
044F33 21 FD 5B 04 5572*  	ld hl,F24_040
044F37 22 3A B5 04 5573*  	ld (cur_filename),hl
044F3B 11 C5 C2 04 5574*  	ld de,filedata
044F3F 01 00 00 01 5575*  	ld bc,65536
044F43 3E 01       5576*  	ld a,mos_load
044F45 5B CF       5577*  	RST.LIL 08h
044F47 21 2A 02 00 5578*  	ld hl,BUF_24_040
044F4B 01 21 00 00 5579*  	ld bc,33
044F4F 11 24 00 00 5580*  	ld de,36
044F53 DD 21 A4 04 5581*  	ld ix,1188
       00          
044F58 CD A5 B6 04 5582*  	call vdu_load_img
044F5C C9          5583*  	ret
044F5D             5584*  
044F5D             5585*  ld_24_044:
044F5D 21 11 5C 04 5586*  	ld hl,F24_044
044F61 22 3A B5 04 5587*  	ld (cur_filename),hl
044F65 11 C5 C2 04 5588*  	ld de,filedata
044F69 01 00 00 01 5589*  	ld bc,65536
044F6D 3E 01       5590*  	ld a,mos_load
044F6F 5B CF       5591*  	RST.LIL 08h
044F71 21 2B 02 00 5592*  	ld hl,BUF_24_044
044F75 01 64 00 00 5593*  	ld bc,100
044F79 11 1E 00 00 5594*  	ld de,30
044F7D DD 21 B8 0B 5595*  	ld ix,3000
       00          
044F82 CD A5 B6 04 5596*  	call vdu_load_img
044F86 C9          5597*  	ret
044F87             5598*  
044F87             5599*  ld_40_004:
044F87 21 25 5C 04 5600*  	ld hl,F40_004
044F8B 22 3A B5 04 5601*  	ld (cur_filename),hl
044F8F 11 C5 C2 04 5602*  	ld de,filedata
044F93 01 00 00 01 5603*  	ld bc,65536
044F97 3E 01       5604*  	ld a,mos_load
044F99 5B CF       5605*  	RST.LIL 08h
044F9B 21 2C 02 00 5606*  	ld hl,BUF_40_004
044F9F 01 0E 00 00 5607*  	ld bc,14
044FA3 11 07 00 00 5608*  	ld de,7
044FA7 DD 21 62 00 5609*  	ld ix,98
       00          
044FAC CD A5 B6 04 5610*  	call vdu_load_img
044FB0 C9          5611*  	ret
044FB1             5612*  
044FB1             5613*  ld_40_020:
044FB1 21 39 5C 04 5614*  	ld hl,F40_020
044FB5 22 3A B5 04 5615*  	ld (cur_filename),hl
044FB9 11 C5 C2 04 5616*  	ld de,filedata
044FBD 01 00 00 01 5617*  	ld bc,65536
044FC1 3E 01       5618*  	ld a,mos_load
044FC3 5B CF       5619*  	RST.LIL 08h
044FC5 21 2D 02 00 5620*  	ld hl,BUF_40_020
044FC9 01 12 00 00 5621*  	ld bc,18
044FCD 11 0A 00 00 5622*  	ld de,10
044FD1 DD 21 B4 00 5623*  	ld ix,180
       00          
044FD6 CD A5 B6 04 5624*  	call vdu_load_img
044FDA C9          5625*  	ret
044FDB             5626*  
044FDB             5627*  ld_40_032:
044FDB 21 4D 5C 04 5628*  	ld hl,F40_032
044FDF 22 3A B5 04 5629*  	ld (cur_filename),hl
044FE3 11 C5 C2 04 5630*  	ld de,filedata
044FE7 01 00 00 01 5631*  	ld bc,65536
044FEB 3E 01       5632*  	ld a,mos_load
044FED 5B CF       5633*  	RST.LIL 08h
044FEF 21 2E 02 00 5634*  	ld hl,BUF_40_032
044FF3 01 1A 00 00 5635*  	ld bc,26
044FF7 11 0D 00 00 5636*  	ld de,13
044FFB DD 21 52 01 5637*  	ld ix,338
       00          
045000 CD A5 B6 04 5638*  	call vdu_load_img
045004 C9          5639*  	ret
045005             5640*  
045005             5641*  ld_40_040:
045005 21 61 5C 04 5642*  	ld hl,F40_040
045009 22 3A B5 04 5643*  	ld (cur_filename),hl
04500D 11 C5 C2 04 5644*  	ld de,filedata
045011 01 00 00 01 5645*  	ld bc,65536
045015 3E 01       5646*  	ld a,mos_load
045017 5B CF       5647*  	RST.LIL 08h
045019 21 2F 02 00 5648*  	ld hl,BUF_40_040
04501D 01 2B 00 00 5649*  	ld bc,43
045021 11 17 00 00 5650*  	ld de,23
045025 DD 21 DD 03 5651*  	ld ix,989
       00          
04502A CD A5 B6 04 5652*  	call vdu_load_img
04502E C9          5653*  	ret
04502F             5654*  
04502F             5655*  ld_40_044:
04502F 21 75 5C 04 5656*  	ld hl,F40_044
045033 22 3A B5 04 5657*  	ld (cur_filename),hl
045037 11 C5 C2 04 5658*  	ld de,filedata
04503B 01 00 00 01 5659*  	ld bc,65536
04503F 3E 01       5660*  	ld a,mos_load
045041 5B CF       5661*  	RST.LIL 08h
045043 21 30 02 00 5662*  	ld hl,BUF_40_044
045047 01 01 00 00 5663*  	ld bc,1
04504B 11 01 00 00 5664*  	ld de,1
04504F DD 21 01 00 5665*  	ld ix,1
       00          
045054 CD A5 B6 04 5666*  	call vdu_load_img
045058 C9          5667*  	ret
045059             5668*  
045059             5669*  ld_41_004:
045059 21 89 5C 04 5670*  	ld hl,F41_004
04505D 22 3A B5 04 5671*  	ld (cur_filename),hl
045061 11 C5 C2 04 5672*  	ld de,filedata
045065 01 00 00 01 5673*  	ld bc,65536
045069 3E 01       5674*  	ld a,mos_load
04506B 5B CF       5675*  	RST.LIL 08h
04506D 21 31 02 00 5676*  	ld hl,BUF_41_004
045071 01 0B 00 00 5677*  	ld bc,11
045075 11 0B 00 00 5678*  	ld de,11
045079 DD 21 79 00 5679*  	ld ix,121
       00          
04507E CD A5 B6 04 5680*  	call vdu_load_img
045082 C9          5681*  	ret
045083             5682*  
045083             5683*  ld_41_020:
045083 21 9D 5C 04 5684*  	ld hl,F41_020
045087 22 3A B5 04 5685*  	ld (cur_filename),hl
04508B 11 C5 C2 04 5686*  	ld de,filedata
04508F 01 00 00 01 5687*  	ld bc,65536
045093 3E 01       5688*  	ld a,mos_load
045095 5B CF       5689*  	RST.LIL 08h
045097 21 32 02 00 5690*  	ld hl,BUF_41_020
04509B 01 10 00 00 5691*  	ld bc,16
04509F 11 0E 00 00 5692*  	ld de,14
0450A3 DD 21 E0 00 5693*  	ld ix,224
       00          
0450A8 CD A5 B6 04 5694*  	call vdu_load_img
0450AC C9          5695*  	ret
0450AD             5696*  
0450AD             5697*  ld_41_032:
0450AD 21 B1 5C 04 5698*  	ld hl,F41_032
0450B1 22 3A B5 04 5699*  	ld (cur_filename),hl
0450B5 11 C5 C2 04 5700*  	ld de,filedata
0450B9 01 00 00 01 5701*  	ld bc,65536
0450BD 3E 01       5702*  	ld a,mos_load
0450BF 5B CF       5703*  	RST.LIL 08h
0450C1 21 33 02 00 5704*  	ld hl,BUF_41_032
0450C5 01 16 00 00 5705*  	ld bc,22
0450C9 11 14 00 00 5706*  	ld de,20
0450CD DD 21 B8 01 5707*  	ld ix,440
       00          
0450D2 CD A5 B6 04 5708*  	call vdu_load_img
0450D6 C9          5709*  	ret
0450D7             5710*  
0450D7             5711*  ld_41_040:
0450D7 21 C5 5C 04 5712*  	ld hl,F41_040
0450DB 22 3A B5 04 5713*  	ld (cur_filename),hl
0450DF 11 C5 C2 04 5714*  	ld de,filedata
0450E3 01 00 00 01 5715*  	ld bc,65536
0450E7 3E 01       5716*  	ld a,mos_load
0450E9 5B CF       5717*  	RST.LIL 08h
0450EB 21 34 02 00 5718*  	ld hl,BUF_41_040
0450EF 01 25 00 00 5719*  	ld bc,37
0450F3 11 22 00 00 5720*  	ld de,34
0450F7 DD 21 EA 04 5721*  	ld ix,1258
       00          
0450FC CD A5 B6 04 5722*  	call vdu_load_img
045100 C9          5723*  	ret
045101             5724*  
045101             5725*  ld_41_044:
045101 21 D9 5C 04 5726*  	ld hl,F41_044
045105 22 3A B5 04 5727*  	ld (cur_filename),hl
045109 11 C5 C2 04 5728*  	ld de,filedata
04510D 01 00 00 01 5729*  	ld bc,65536
045111 3E 01       5730*  	ld a,mos_load
045113 5B CF       5731*  	RST.LIL 08h
045115 21 35 02 00 5732*  	ld hl,BUF_41_044
045119 01 23 00 00 5733*  	ld bc,35
04511D 11 19 00 00 5734*  	ld de,25
045121 DD 21 6B 03 5735*  	ld ix,875
       00          
045126 CD A5 B6 04 5736*  	call vdu_load_img
04512A C9          5737*  	ret
04512B             5738*  
04512B             5739*  ld_42_004:
04512B 21 ED 5C 04 5740*  	ld hl,F42_004
04512F 22 3A B5 04 5741*  	ld (cur_filename),hl
045133 11 C5 C2 04 5742*  	ld de,filedata
045137 01 00 00 01 5743*  	ld bc,65536
04513B 3E 01       5744*  	ld a,mos_load
04513D 5B CF       5745*  	RST.LIL 08h
04513F 21 36 02 00 5746*  	ld hl,BUF_42_004
045143 01 0A 00 00 5747*  	ld bc,10
045147 11 09 00 00 5748*  	ld de,9
04514B DD 21 5A 00 5749*  	ld ix,90
       00          
045150 CD A5 B6 04 5750*  	call vdu_load_img
045154 C9          5751*  	ret
045155             5752*  
045155             5753*  ld_42_020:
045155 21 01 5D 04 5754*  	ld hl,F42_020
045159 22 3A B5 04 5755*  	ld (cur_filename),hl
04515D 11 C5 C2 04 5756*  	ld de,filedata
045161 01 00 00 01 5757*  	ld bc,65536
045165 3E 01       5758*  	ld a,mos_load
045167 5B CF       5759*  	RST.LIL 08h
045169 21 37 02 00 5760*  	ld hl,BUF_42_020
04516D 01 0E 00 00 5761*  	ld bc,14
045171 11 0B 00 00 5762*  	ld de,11
045175 DD 21 9A 00 5763*  	ld ix,154
       00          
04517A CD A5 B6 04 5764*  	call vdu_load_img
04517E C9          5765*  	ret
04517F             5766*  
04517F             5767*  ld_42_032:
04517F 21 15 5D 04 5768*  	ld hl,F42_032
045183 22 3A B5 04 5769*  	ld (cur_filename),hl
045187 11 C5 C2 04 5770*  	ld de,filedata
04518B 01 00 00 01 5771*  	ld bc,65536
04518F 3E 01       5772*  	ld a,mos_load
045191 5B CF       5773*  	RST.LIL 08h
045193 21 38 02 00 5774*  	ld hl,BUF_42_032
045197 01 13 00 00 5775*  	ld bc,19
04519B 11 10 00 00 5776*  	ld de,16
04519F DD 21 30 01 5777*  	ld ix,304
       00          
0451A4 CD A5 B6 04 5778*  	call vdu_load_img
0451A8 C9          5779*  	ret
0451A9             5780*  
0451A9             5781*  ld_42_040:
0451A9 21 29 5D 04 5782*  	ld hl,F42_040
0451AD 22 3A B5 04 5783*  	ld (cur_filename),hl
0451B1 11 C5 C2 04 5784*  	ld de,filedata
0451B5 01 00 00 01 5785*  	ld bc,65536
0451B9 3E 01       5786*  	ld a,mos_load
0451BB 5B CF       5787*  	RST.LIL 08h
0451BD 21 39 02 00 5788*  	ld hl,BUF_42_040
0451C1 01 20 00 00 5789*  	ld bc,32
0451C5 11 1B 00 00 5790*  	ld de,27
0451C9 DD 21 60 03 5791*  	ld ix,864
       00          
0451CE CD A5 B6 04 5792*  	call vdu_load_img
0451D2 C9          5793*  	ret
0451D3             5794*  
0451D3             5795*  ld_42_044:
0451D3 21 3D 5D 04 5796*  	ld hl,F42_044
0451D7 22 3A B5 04 5797*  	ld (cur_filename),hl
0451DB 11 C5 C2 04 5798*  	ld de,filedata
0451DF 01 00 00 01 5799*  	ld bc,65536
0451E3 3E 01       5800*  	ld a,mos_load
0451E5 5B CF       5801*  	RST.LIL 08h
0451E7 21 3A 02 00 5802*  	ld hl,BUF_42_044
0451EB 01 3F 00 00 5803*  	ld bc,63
0451EF 11 04 00 00 5804*  	ld de,4
0451F3 DD 21 FC 00 5805*  	ld ix,252
       00          
0451F8 CD A5 B6 04 5806*  	call vdu_load_img
0451FC C9          5807*  	ret
0451FD             5808*  
0451FD             5809*  ld_43_004:
0451FD 21 51 5D 04 5810*  	ld hl,F43_004
045201 22 3A B5 04 5811*  	ld (cur_filename),hl
045205 11 C5 C2 04 5812*  	ld de,filedata
045209 01 00 00 01 5813*  	ld bc,65536
04520D 3E 01       5814*  	ld a,mos_load
04520F 5B CF       5815*  	RST.LIL 08h
045211 21 3B 02 00 5816*  	ld hl,BUF_43_004
045215 01 0B 00 00 5817*  	ld bc,11
045219 11 04 00 00 5818*  	ld de,4
04521D DD 21 2C 00 5819*  	ld ix,44
       00          
045222 CD A5 B6 04 5820*  	call vdu_load_img
045226 C9          5821*  	ret
045227             5822*  
045227             5823*  ld_43_020:
045227 21 65 5D 04 5824*  	ld hl,F43_020
04522B 22 3A B5 04 5825*  	ld (cur_filename),hl
04522F 11 C5 C2 04 5826*  	ld de,filedata
045233 01 00 00 01 5827*  	ld bc,65536
045237 3E 01       5828*  	ld a,mos_load
045239 5B CF       5829*  	RST.LIL 08h
04523B 21 3C 02 00 5830*  	ld hl,BUF_43_020
04523F 01 0F 00 00 5831*  	ld bc,15
045243 11 04 00 00 5832*  	ld de,4
045247 DD 21 3C 00 5833*  	ld ix,60
       00          
04524C CD A5 B6 04 5834*  	call vdu_load_img
045250 C9          5835*  	ret
045251             5836*  
045251             5837*  ld_43_032:
045251 21 79 5D 04 5838*  	ld hl,F43_032
045255 22 3A B5 04 5839*  	ld (cur_filename),hl
045259 11 C5 C2 04 5840*  	ld de,filedata
04525D 01 00 00 01 5841*  	ld bc,65536
045261 3E 01       5842*  	ld a,mos_load
045263 5B CF       5843*  	RST.LIL 08h
045265 21 3D 02 00 5844*  	ld hl,BUF_43_032
045269 01 15 00 00 5845*  	ld bc,21
04526D 11 07 00 00 5846*  	ld de,7
045271 DD 21 93 00 5847*  	ld ix,147
       00          
045276 CD A5 B6 04 5848*  	call vdu_load_img
04527A C9          5849*  	ret
04527B             5850*  
04527B             5851*  ld_43_040:
04527B 21 8D 5D 04 5852*  	ld hl,F43_040
04527F 22 3A B5 04 5853*  	ld (cur_filename),hl
045283 11 C5 C2 04 5854*  	ld de,filedata
045287 01 00 00 01 5855*  	ld bc,65536
04528B 3E 01       5856*  	ld a,mos_load
04528D 5B CF       5857*  	RST.LIL 08h
04528F 21 3E 02 00 5858*  	ld hl,BUF_43_040
045293 01 23 00 00 5859*  	ld bc,35
045297 11 0D 00 00 5860*  	ld de,13
04529B DD 21 C7 01 5861*  	ld ix,455
       00          
0452A0 CD A5 B6 04 5862*  	call vdu_load_img
0452A4 C9          5863*  	ret
0452A5             5864*  
0452A5             5865*  ld_43_044:
0452A5 21 A1 5D 04 5866*  	ld hl,F43_044
0452A9 22 3A B5 04 5867*  	ld (cur_filename),hl
0452AD 11 C5 C2 04 5868*  	ld de,filedata
0452B1 01 00 00 01 5869*  	ld bc,65536
0452B5 3E 01       5870*  	ld a,mos_load
0452B7 5B CF       5871*  	RST.LIL 08h
0452B9 21 3F 02 00 5872*  	ld hl,BUF_43_044
0452BD 01 01 00 00 5873*  	ld bc,1
0452C1 11 01 00 00 5874*  	ld de,1
0452C5 DD 21 01 00 5875*  	ld ix,1
       00          
0452CA CD A5 B6 04 5876*  	call vdu_load_img
0452CE C9          5877*  	ret
0452CF             5878*  
0452CF             5879*  ld_44_004:
0452CF 21 B5 5D 04 5880*  	ld hl,F44_004
0452D3 22 3A B5 04 5881*  	ld (cur_filename),hl
0452D7 11 C5 C2 04 5882*  	ld de,filedata
0452DB 01 00 00 01 5883*  	ld bc,65536
0452DF 3E 01       5884*  	ld a,mos_load
0452E1 5B CF       5885*  	RST.LIL 08h
0452E3 21 40 02 00 5886*  	ld hl,BUF_44_004
0452E7 01 05 00 00 5887*  	ld bc,5
0452EB 11 04 00 00 5888*  	ld de,4
0452EF DD 21 14 00 5889*  	ld ix,20
       00          
0452F4 CD A5 B6 04 5890*  	call vdu_load_img
0452F8 C9          5891*  	ret
0452F9             5892*  
0452F9             5893*  ld_44_020:
0452F9 21 C9 5D 04 5894*  	ld hl,F44_020
0452FD 22 3A B5 04 5895*  	ld (cur_filename),hl
045301 11 C5 C2 04 5896*  	ld de,filedata
045305 01 00 00 01 5897*  	ld bc,65536
045309 3E 01       5898*  	ld a,mos_load
04530B 5B CF       5899*  	RST.LIL 08h
04530D 21 41 02 00 5900*  	ld hl,BUF_44_020
045311 01 08 00 00 5901*  	ld bc,8
045315 11 06 00 00 5902*  	ld de,6
045319 DD 21 30 00 5903*  	ld ix,48
       00          
04531E CD A5 B6 04 5904*  	call vdu_load_img
045322 C9          5905*  	ret
045323             5906*  
045323             5907*  ld_44_032:
045323 21 DD 5D 04 5908*  	ld hl,F44_032
045327 22 3A B5 04 5909*  	ld (cur_filename),hl
04532B 11 C5 C2 04 5910*  	ld de,filedata
04532F 01 00 00 01 5911*  	ld bc,65536
045333 3E 01       5912*  	ld a,mos_load
045335 5B CF       5913*  	RST.LIL 08h
045337 21 42 02 00 5914*  	ld hl,BUF_44_032
04533B 01 0D 00 00 5915*  	ld bc,13
04533F 11 0A 00 00 5916*  	ld de,10
045343 DD 21 82 00 5917*  	ld ix,130
       00          
045348 CD A5 B6 04 5918*  	call vdu_load_img
04534C C9          5919*  	ret
04534D             5920*  
04534D             5921*  ld_44_040:
04534D 21 F1 5D 04 5922*  	ld hl,F44_040
045351 22 3A B5 04 5923*  	ld (cur_filename),hl
045355 11 C5 C2 04 5924*  	ld de,filedata
045359 01 00 00 01 5925*  	ld bc,65536
04535D 3E 01       5926*  	ld a,mos_load
04535F 5B CF       5927*  	RST.LIL 08h
045361 21 43 02 00 5928*  	ld hl,BUF_44_040
045365 01 14 00 00 5929*  	ld bc,20
045369 11 0F 00 00 5930*  	ld de,15
04536D DD 21 2C 01 5931*  	ld ix,300
       00          
045372 CD A5 B6 04 5932*  	call vdu_load_img
045376 C9          5933*  	ret
045377             5934*  
045377             5935*  ld_44_044:
045377 21 05 5E 04 5936*  	ld hl,F44_044
04537B 22 3A B5 04 5937*  	ld (cur_filename),hl
04537F 11 C5 C2 04 5938*  	ld de,filedata
045383 01 00 00 01 5939*  	ld bc,65536
045387 3E 01       5940*  	ld a,mos_load
045389 5B CF       5941*  	RST.LIL 08h
04538B 21 44 02 00 5942*  	ld hl,BUF_44_044
04538F 01 01 00 00 5943*  	ld bc,1
045393 11 01 00 00 5944*  	ld de,1
045397 DD 21 01 00 5945*  	ld ix,1
       00          
04539C CD A5 B6 04 5946*  	call vdu_load_img
0453A0 C9          5947*  	ret
0453A1             5948*  
0453A1             5949*  ld_45_004:
0453A1 21 19 5E 04 5950*  	ld hl,F45_004
0453A5 22 3A B5 04 5951*  	ld (cur_filename),hl
0453A9 11 C5 C2 04 5952*  	ld de,filedata
0453AD 01 00 00 01 5953*  	ld bc,65536
0453B1 3E 01       5954*  	ld a,mos_load
0453B3 5B CF       5955*  	RST.LIL 08h
0453B5 21 45 02 00 5956*  	ld hl,BUF_45_004
0453B9 01 10 00 00 5957*  	ld bc,16
0453BD 11 0A 00 00 5958*  	ld de,10
0453C1 DD 21 A0 00 5959*  	ld ix,160
       00          
0453C6 CD A5 B6 04 5960*  	call vdu_load_img
0453CA C9          5961*  	ret
0453CB             5962*  
0453CB             5963*  ld_45_020:
0453CB 21 2D 5E 04 5964*  	ld hl,F45_020
0453CF 22 3A B5 04 5965*  	ld (cur_filename),hl
0453D3 11 C5 C2 04 5966*  	ld de,filedata
0453D7 01 00 00 01 5967*  	ld bc,65536
0453DB 3E 01       5968*  	ld a,mos_load
0453DD 5B CF       5969*  	RST.LIL 08h
0453DF 21 46 02 00 5970*  	ld hl,BUF_45_020
0453E3 01 14 00 00 5971*  	ld bc,20
0453E7 11 0D 00 00 5972*  	ld de,13
0453EB DD 21 04 01 5973*  	ld ix,260
       00          
0453F0 CD A5 B6 04 5974*  	call vdu_load_img
0453F4 C9          5975*  	ret
0453F5             5976*  
0453F5             5977*  ld_45_032:
0453F5 21 41 5E 04 5978*  	ld hl,F45_032
0453F9 22 3A B5 04 5979*  	ld (cur_filename),hl
0453FD 11 C5 C2 04 5980*  	ld de,filedata
045401 01 00 00 01 5981*  	ld bc,65536
045405 3E 01       5982*  	ld a,mos_load
045407 5B CF       5983*  	RST.LIL 08h
045409 21 47 02 00 5984*  	ld hl,BUF_45_032
04540D 01 1D 00 00 5985*  	ld bc,29
045411 11 12 00 00 5986*  	ld de,18
045415 DD 21 0A 02 5987*  	ld ix,522
       00          
04541A CD A5 B6 04 5988*  	call vdu_load_img
04541E C9          5989*  	ret
04541F             5990*  
04541F             5991*  ld_45_040:
04541F 21 55 5E 04 5992*  	ld hl,F45_040
045423 22 3A B5 04 5993*  	ld (cur_filename),hl
045427 11 C5 C2 04 5994*  	ld de,filedata
04542B 01 00 00 01 5995*  	ld bc,65536
04542F 3E 01       5996*  	ld a,mos_load
045431 5B CF       5997*  	RST.LIL 08h
045433 21 48 02 00 5998*  	ld hl,BUF_45_040
045437 01 30 00 00 5999*  	ld bc,48
04543B 11 21 00 00 6000*  	ld de,33
04543F DD 21 30 06 6001*  	ld ix,1584
       00          
045444 CD A5 B6 04 6002*  	call vdu_load_img
045448 C9          6003*  	ret
045449             6004*  
045449             6005*  ld_45_044:
045449 21 69 5E 04 6006*  	ld hl,F45_044
04544D 22 3A B5 04 6007*  	ld (cur_filename),hl
045451 11 C5 C2 04 6008*  	ld de,filedata
045455 01 00 00 01 6009*  	ld bc,65536
045459 3E 01       6010*  	ld a,mos_load
04545B 5B CF       6011*  	RST.LIL 08h
04545D 21 49 02 00 6012*  	ld hl,BUF_45_044
045461 01 75 00 00 6013*  	ld bc,117
045465 11 13 00 00 6014*  	ld de,19
045469 DD 21 AF 08 6015*  	ld ix,2223
       00          
04546E CD A5 B6 04 6016*  	call vdu_load_img
045472 C9          6017*  	ret
045473             6018*  
045473             6019*  ld_46_004:
045473 21 7D 5E 04 6020*  	ld hl,F46_004
045477 22 3A B5 04 6021*  	ld (cur_filename),hl
04547B 11 C5 C2 04 6022*  	ld de,filedata
04547F 01 00 00 01 6023*  	ld bc,65536
045483 3E 01       6024*  	ld a,mos_load
045485 5B CF       6025*  	RST.LIL 08h
045487 21 4A 02 00 6026*  	ld hl,BUF_46_004
04548B 01 10 00 00 6027*  	ld bc,16
04548F 11 08 00 00 6028*  	ld de,8
045493 DD 21 80 00 6029*  	ld ix,128
       00          
045498 CD A5 B6 04 6030*  	call vdu_load_img
04549C C9          6031*  	ret
04549D             6032*  
04549D             6033*  ld_46_020:
04549D 21 91 5E 04 6034*  	ld hl,F46_020
0454A1 22 3A B5 04 6035*  	ld (cur_filename),hl
0454A5 11 C5 C2 04 6036*  	ld de,filedata
0454A9 01 00 00 01 6037*  	ld bc,65536
0454AD 3E 01       6038*  	ld a,mos_load
0454AF 5B CF       6039*  	RST.LIL 08h
0454B1 21 4B 02 00 6040*  	ld hl,BUF_46_020
0454B5 01 14 00 00 6041*  	ld bc,20
0454B9 11 0B 00 00 6042*  	ld de,11
0454BD DD 21 DC 00 6043*  	ld ix,220
       00          
0454C2 CD A5 B6 04 6044*  	call vdu_load_img
0454C6 C9          6045*  	ret
0454C7             6046*  
0454C7             6047*  ld_46_032:
0454C7 21 A5 5E 04 6048*  	ld hl,F46_032
0454CB 22 3A B5 04 6049*  	ld (cur_filename),hl
0454CF 11 C5 C2 04 6050*  	ld de,filedata
0454D3 01 00 00 01 6051*  	ld bc,65536
0454D7 3E 01       6052*  	ld a,mos_load
0454D9 5B CF       6053*  	RST.LIL 08h
0454DB 21 4C 02 00 6054*  	ld hl,BUF_46_032
0454DF 01 1D 00 00 6055*  	ld bc,29
0454E3 11 0F 00 00 6056*  	ld de,15
0454E7 DD 21 B3 01 6057*  	ld ix,435
       00          
0454EC CD A5 B6 04 6058*  	call vdu_load_img
0454F0 C9          6059*  	ret
0454F1             6060*  
0454F1             6061*  ld_46_040:
0454F1 21 B9 5E 04 6062*  	ld hl,F46_040
0454F5 22 3A B5 04 6063*  	ld (cur_filename),hl
0454F9 11 C5 C2 04 6064*  	ld de,filedata
0454FD 01 00 00 01 6065*  	ld bc,65536
045501 3E 01       6066*  	ld a,mos_load
045503 5B CF       6067*  	RST.LIL 08h
045505 21 4D 02 00 6068*  	ld hl,BUF_46_040
045509 01 30 00 00 6069*  	ld bc,48
04550D 11 1B 00 00 6070*  	ld de,27
045511 DD 21 10 05 6071*  	ld ix,1296
       00          
045516 CD A5 B6 04 6072*  	call vdu_load_img
04551A C9          6073*  	ret
04551B             6074*  
04551B             6075*  ld_46_044:
04551B 21 CD 5E 04 6076*  	ld hl,F46_044
04551F 22 3A B5 04 6077*  	ld (cur_filename),hl
045523 11 C5 C2 04 6078*  	ld de,filedata
045527 01 00 00 01 6079*  	ld bc,65536
04552B 3E 01       6080*  	ld a,mos_load
04552D 5B CF       6081*  	RST.LIL 08h
04552F 21 4E 02 00 6082*  	ld hl,BUF_46_044
045533 01 51 00 00 6083*  	ld bc,81
045537 11 01 00 00 6084*  	ld de,1
04553B DD 21 51 00 6085*  	ld ix,81
       00          
045540 CD A5 B6 04 6086*  	call vdu_load_img
045544 C9          6087*  	ret
045545             6088*  
045545             6089*  ld_47_004:
045545 21 E1 5E 04 6090*  	ld hl,F47_004
045549 22 3A B5 04 6091*  	ld (cur_filename),hl
04554D 11 C5 C2 04 6092*  	ld de,filedata
045551 01 00 00 01 6093*  	ld bc,65536
045555 3E 01       6094*  	ld a,mos_load
045557 5B CF       6095*  	RST.LIL 08h
045559 21 4F 02 00 6096*  	ld hl,BUF_47_004
04555D 01 10 00 00 6097*  	ld bc,16
045561 11 09 00 00 6098*  	ld de,9
045565 DD 21 90 00 6099*  	ld ix,144
       00          
04556A CD A5 B6 04 6100*  	call vdu_load_img
04556E C9          6101*  	ret
04556F             6102*  
04556F             6103*  ld_47_020:
04556F 21 F5 5E 04 6104*  	ld hl,F47_020
045573 22 3A B5 04 6105*  	ld (cur_filename),hl
045577 11 C5 C2 04 6106*  	ld de,filedata
04557B 01 00 00 01 6107*  	ld bc,65536
04557F 3E 01       6108*  	ld a,mos_load
045581 5B CF       6109*  	RST.LIL 08h
045583 21 50 02 00 6110*  	ld hl,BUF_47_020
045587 01 14 00 00 6111*  	ld bc,20
04558B 11 0B 00 00 6112*  	ld de,11
04558F DD 21 DC 00 6113*  	ld ix,220
       00          
045594 CD A5 B6 04 6114*  	call vdu_load_img
045598 C9          6115*  	ret
045599             6116*  
045599             6117*  ld_47_032:
045599 21 09 5F 04 6118*  	ld hl,F47_032
04559D 22 3A B5 04 6119*  	ld (cur_filename),hl
0455A1 11 C5 C2 04 6120*  	ld de,filedata
0455A5 01 00 00 01 6121*  	ld bc,65536
0455A9 3E 01       6122*  	ld a,mos_load
0455AB 5B CF       6123*  	RST.LIL 08h
0455AD 21 51 02 00 6124*  	ld hl,BUF_47_032
0455B1 01 1D 00 00 6125*  	ld bc,29
0455B5 11 11 00 00 6126*  	ld de,17
0455B9 DD 21 ED 01 6127*  	ld ix,493
       00          
0455BE CD A5 B6 04 6128*  	call vdu_load_img
0455C2 C9          6129*  	ret
0455C3             6130*  
0455C3             6131*  ld_47_040:
0455C3 21 1D 5F 04 6132*  	ld hl,F47_040
0455C7 22 3A B5 04 6133*  	ld (cur_filename),hl
0455CB 11 C5 C2 04 6134*  	ld de,filedata
0455CF 01 00 00 01 6135*  	ld bc,65536
0455D3 3E 01       6136*  	ld a,mos_load
0455D5 5B CF       6137*  	RST.LIL 08h
0455D7 21 52 02 00 6138*  	ld hl,BUF_47_040
0455DB 01 30 00 00 6139*  	ld bc,48
0455DF 11 1B 00 00 6140*  	ld de,27
0455E3 DD 21 10 05 6141*  	ld ix,1296
       00          
0455E8 CD A5 B6 04 6142*  	call vdu_load_img
0455EC C9          6143*  	ret
0455ED             6144*  
0455ED             6145*  ld_47_044:
0455ED 21 31 5F 04 6146*  	ld hl,F47_044
0455F1 22 3A B5 04 6147*  	ld (cur_filename),hl
0455F5 11 C5 C2 04 6148*  	ld de,filedata
0455F9 01 00 00 01 6149*  	ld bc,65536
0455FD 3E 01       6150*  	ld a,mos_load
0455FF 5B CF       6151*  	RST.LIL 08h
045601 21 53 02 00 6152*  	ld hl,BUF_47_044
045605 01 1B 00 00 6153*  	ld bc,27
045609 11 0A 00 00 6154*  	ld de,10
04560D DD 21 0E 01 6155*  	ld ix,270
       00          
045612 CD A5 B6 04 6156*  	call vdu_load_img
045616 C9          6157*  	ret
045617             6158*  
045617             6159*  ld_48_004:
045617 21 45 5F 04 6160*  	ld hl,F48_004
04561B 22 3A B5 04 6161*  	ld (cur_filename),hl
04561F 11 C5 C2 04 6162*  	ld de,filedata
045623 01 00 00 01 6163*  	ld bc,65536
045627 3E 01       6164*  	ld a,mos_load
045629 5B CF       6165*  	RST.LIL 08h
04562B 21 54 02 00 6166*  	ld hl,BUF_48_004
04562F 01 12 00 00 6167*  	ld bc,18
045633 11 07 00 00 6168*  	ld de,7
045637 DD 21 7E 00 6169*  	ld ix,126
       00          
04563C CD A5 B6 04 6170*  	call vdu_load_img
045640 C9          6171*  	ret
045641             6172*  
045641             6173*  ld_48_020:
045641 21 59 5F 04 6174*  	ld hl,F48_020
045645 22 3A B5 04 6175*  	ld (cur_filename),hl
045649 11 C5 C2 04 6176*  	ld de,filedata
04564D 01 00 00 01 6177*  	ld bc,65536
045651 3E 01       6178*  	ld a,mos_load
045653 5B CF       6179*  	RST.LIL 08h
045655 21 55 02 00 6180*  	ld hl,BUF_48_020
045659 01 17 00 00 6181*  	ld bc,23
04565D 11 0A 00 00 6182*  	ld de,10
045661 DD 21 E6 00 6183*  	ld ix,230
       00          
045666 CD A5 B6 04 6184*  	call vdu_load_img
04566A C9          6185*  	ret
04566B             6186*  
04566B             6187*  ld_48_032:
04566B 21 6D 5F 04 6188*  	ld hl,F48_032
04566F 22 3A B5 04 6189*  	ld (cur_filename),hl
045673 11 C5 C2 04 6190*  	ld de,filedata
045677 01 00 00 01 6191*  	ld bc,65536
04567B 3E 01       6192*  	ld a,mos_load
04567D 5B CF       6193*  	RST.LIL 08h
04567F 21 56 02 00 6194*  	ld hl,BUF_48_032
045683 01 20 00 00 6195*  	ld bc,32
045687 11 0D 00 00 6196*  	ld de,13
04568B DD 21 A0 01 6197*  	ld ix,416
       00          
045690 CD A5 B6 04 6198*  	call vdu_load_img
045694 C9          6199*  	ret
045695             6200*  
045695             6201*  ld_48_040:
045695 21 81 5F 04 6202*  	ld hl,F48_040
045699 22 3A B5 04 6203*  	ld (cur_filename),hl
04569D 11 C5 C2 04 6204*  	ld de,filedata
0456A1 01 00 00 01 6205*  	ld bc,65536
0456A5 3E 01       6206*  	ld a,mos_load
0456A7 5B CF       6207*  	RST.LIL 08h
0456A9 21 57 02 00 6208*  	ld hl,BUF_48_040
0456AD 01 35 00 00 6209*  	ld bc,53
0456B1 11 18 00 00 6210*  	ld de,24
0456B5 DD 21 F8 04 6211*  	ld ix,1272
       00          
0456BA CD A5 B6 04 6212*  	call vdu_load_img
0456BE C9          6213*  	ret
0456BF             6214*  
0456BF             6215*  ld_48_044:
0456BF 21 95 5F 04 6216*  	ld hl,F48_044
0456C3 22 3A B5 04 6217*  	ld (cur_filename),hl
0456C7 11 C5 C2 04 6218*  	ld de,filedata
0456CB 01 00 00 01 6219*  	ld bc,65536
0456CF 3E 01       6220*  	ld a,mos_load
0456D1 5B CF       6221*  	RST.LIL 08h
0456D3 21 58 02 00 6222*  	ld hl,BUF_48_044
0456D7 01 01 00 00 6223*  	ld bc,1
0456DB 11 01 00 00 6224*  	ld de,1
0456DF DD 21 01 00 6225*  	ld ix,1
       00          
0456E4 CD A5 B6 04 6226*  	call vdu_load_img
0456E8 C9          6227*  	ret
0456E9             6228*  
0456E9             6229*  ld_49_004:
0456E9 21 A9 5F 04 6230*  	ld hl,F49_004
0456ED 22 3A B5 04 6231*  	ld (cur_filename),hl
0456F1 11 C5 C2 04 6232*  	ld de,filedata
0456F5 01 00 00 01 6233*  	ld bc,65536
0456F9 3E 01       6234*  	ld a,mos_load
0456FB 5B CF       6235*  	RST.LIL 08h
0456FD 21 59 02 00 6236*  	ld hl,BUF_49_004
045701 01 0E 00 00 6237*  	ld bc,14
045705 11 06 00 00 6238*  	ld de,6
045709 DD 21 54 00 6239*  	ld ix,84
       00          
04570E CD A5 B6 04 6240*  	call vdu_load_img
045712 C9          6241*  	ret
045713             6242*  
045713             6243*  ld_49_020:
045713 21 BD 5F 04 6244*  	ld hl,F49_020
045717 22 3A B5 04 6245*  	ld (cur_filename),hl
04571B 11 C5 C2 04 6246*  	ld de,filedata
04571F 01 00 00 01 6247*  	ld bc,65536
045723 3E 01       6248*  	ld a,mos_load
045725 5B CF       6249*  	RST.LIL 08h
045727 21 5A 02 00 6250*  	ld hl,BUF_49_020
04572B 01 12 00 00 6251*  	ld bc,18
04572F 11 08 00 00 6252*  	ld de,8
045733 DD 21 90 00 6253*  	ld ix,144
       00          
045738 CD A5 B6 04 6254*  	call vdu_load_img
04573C C9          6255*  	ret
04573D             6256*  
04573D             6257*  ld_49_032:
04573D 21 D1 5F 04 6258*  	ld hl,F49_032
045741 22 3A B5 04 6259*  	ld (cur_filename),hl
045745 11 C5 C2 04 6260*  	ld de,filedata
045749 01 00 00 01 6261*  	ld bc,65536
04574D 3E 01       6262*  	ld a,mos_load
04574F 5B CF       6263*  	RST.LIL 08h
045751 21 5B 02 00 6264*  	ld hl,BUF_49_032
045755 01 1A 00 00 6265*  	ld bc,26
045759 11 0B 00 00 6266*  	ld de,11
04575D DD 21 1E 01 6267*  	ld ix,286
       00          
045762 CD A5 B6 04 6268*  	call vdu_load_img
045766 C9          6269*  	ret
045767             6270*  
045767             6271*  ld_49_040:
045767 21 E5 5F 04 6272*  	ld hl,F49_040
04576B 22 3A B5 04 6273*  	ld (cur_filename),hl
04576F 11 C5 C2 04 6274*  	ld de,filedata
045773 01 00 00 01 6275*  	ld bc,65536
045777 3E 01       6276*  	ld a,mos_load
045779 5B CF       6277*  	RST.LIL 08h
04577B 21 5C 02 00 6278*  	ld hl,BUF_49_040
04577F 01 2B 00 00 6279*  	ld bc,43
045783 11 12 00 00 6280*  	ld de,18
045787 DD 21 06 03 6281*  	ld ix,774
       00          
04578C CD A5 B6 04 6282*  	call vdu_load_img
045790 C9          6283*  	ret
045791             6284*  
045791             6285*  ld_49_044:
045791 21 F9 5F 04 6286*  	ld hl,F49_044
045795 22 3A B5 04 6287*  	ld (cur_filename),hl
045799 11 C5 C2 04 6288*  	ld de,filedata
04579D 01 00 00 01 6289*  	ld bc,65536
0457A1 3E 01       6290*  	ld a,mos_load
0457A3 5B CF       6291*  	RST.LIL 08h
0457A5 21 5D 02 00 6292*  	ld hl,BUF_49_044
0457A9 01 01 00 00 6293*  	ld bc,1
0457AD 11 01 00 00 6294*  	ld de,1
0457B1 DD 21 01 00 6295*  	ld ix,1
       00          
0457B6 CD A5 B6 04 6296*  	call vdu_load_img
0457BA C9          6297*  	ret
0457BB             6298*  
0457BB             6299*  ld_50_004:
0457BB 21 0D 60 04 6300*  	ld hl,F50_004
0457BF 22 3A B5 04 6301*  	ld (cur_filename),hl
0457C3 11 C5 C2 04 6302*  	ld de,filedata
0457C7 01 00 00 01 6303*  	ld bc,65536
0457CB 3E 01       6304*  	ld a,mos_load
0457CD 5B CF       6305*  	RST.LIL 08h
0457CF 21 5E 02 00 6306*  	ld hl,BUF_50_004
0457D3 01 0A 00 00 6307*  	ld bc,10
0457D7 11 0D 00 00 6308*  	ld de,13
0457DB DD 21 82 00 6309*  	ld ix,130
       00          
0457E0 CD A5 B6 04 6310*  	call vdu_load_img
0457E4 C9          6311*  	ret
0457E5             6312*  
0457E5             6313*  ld_50_020:
0457E5 21 21 60 04 6314*  	ld hl,F50_020
0457E9 22 3A B5 04 6315*  	ld (cur_filename),hl
0457ED 11 C5 C2 04 6316*  	ld de,filedata
0457F1 01 00 00 01 6317*  	ld bc,65536
0457F5 3E 01       6318*  	ld a,mos_load
0457F7 5B CF       6319*  	RST.LIL 08h
0457F9 21 5F 02 00 6320*  	ld hl,BUF_50_020
0457FD 01 0D 00 00 6321*  	ld bc,13
045801 11 11 00 00 6322*  	ld de,17
045805 DD 21 DD 00 6323*  	ld ix,221
       00          
04580A CD A5 B6 04 6324*  	call vdu_load_img
04580E C9          6325*  	ret
04580F             6326*  
04580F             6327*  ld_50_032:
04580F 21 35 60 04 6328*  	ld hl,F50_032
045813 22 3A B5 04 6329*  	ld (cur_filename),hl
045817 11 C5 C2 04 6330*  	ld de,filedata
04581B 01 00 00 01 6331*  	ld bc,65536
04581F 3E 01       6332*  	ld a,mos_load
045821 5B CF       6333*  	RST.LIL 08h
045823 21 60 02 00 6334*  	ld hl,BUF_50_032
045827 01 12 00 00 6335*  	ld bc,18
04582B 11 1A 00 00 6336*  	ld de,26
04582F DD 21 D4 01 6337*  	ld ix,468
       00          
045834 CD A5 B6 04 6338*  	call vdu_load_img
045838 C9          6339*  	ret
045839             6340*  
045839             6341*  ld_50_040:
045839 21 49 60 04 6342*  	ld hl,F50_040
04583D 22 3A B5 04 6343*  	ld (cur_filename),hl
045841 11 C5 C2 04 6344*  	ld de,filedata
045845 01 00 00 01 6345*  	ld bc,65536
045849 3E 01       6346*  	ld a,mos_load
04584B 5B CF       6347*  	RST.LIL 08h
04584D 21 61 02 00 6348*  	ld hl,BUF_50_040
045851 01 1E 00 00 6349*  	ld bc,30
045855 11 2A 00 00 6350*  	ld de,42
045859 DD 21 EC 04 6351*  	ld ix,1260
       00          
04585E CD A5 B6 04 6352*  	call vdu_load_img
045862 C9          6353*  	ret
045863             6354*  
045863             6355*  ld_50_044:
045863 21 5D 60 04 6356*  	ld hl,F50_044
045867 22 3A B5 04 6357*  	ld (cur_filename),hl
04586B 11 C5 C2 04 6358*  	ld de,filedata
04586F 01 00 00 01 6359*  	ld bc,65536
045873 3E 01       6360*  	ld a,mos_load
045875 5B CF       6361*  	RST.LIL 08h
045877 21 62 02 00 6362*  	ld hl,BUF_50_044
04587B 01 46 00 00 6363*  	ld bc,70
04587F 11 32 00 00 6364*  	ld de,50
045883 DD 21 AC 0D 6365*  	ld ix,3500
       00          
045888 CD A5 B6 04 6366*  	call vdu_load_img
04588C C9          6367*  	ret
04588D             6368*  
04588D             6369*  ld_51_004:
04588D 21 71 60 04 6370*  	ld hl,F51_004
045891 22 3A B5 04 6371*  	ld (cur_filename),hl
045895 11 C5 C2 04 6372*  	ld de,filedata
045899 01 00 00 01 6373*  	ld bc,65536
04589D 3E 01       6374*  	ld a,mos_load
04589F 5B CF       6375*  	RST.LIL 08h
0458A1 21 63 02 00 6376*  	ld hl,BUF_51_004
0458A5 01 11 00 00 6377*  	ld bc,17
0458A9 11 17 00 00 6378*  	ld de,23
0458AD DD 21 87 01 6379*  	ld ix,391
       00          
0458B2 CD A5 B6 04 6380*  	call vdu_load_img
0458B6 C9          6381*  	ret
0458B7             6382*  
0458B7             6383*  ld_51_020:
0458B7 21 85 60 04 6384*  	ld hl,F51_020
0458BB 22 3A B5 04 6385*  	ld (cur_filename),hl
0458BF 11 C5 C2 04 6386*  	ld de,filedata
0458C3 01 00 00 01 6387*  	ld bc,65536
0458C7 3E 01       6388*  	ld a,mos_load
0458C9 5B CF       6389*  	RST.LIL 08h
0458CB 21 64 02 00 6390*  	ld hl,BUF_51_020
0458CF 01 15 00 00 6391*  	ld bc,21
0458D3 11 1D 00 00 6392*  	ld de,29
0458D7 DD 21 61 02 6393*  	ld ix,609
       00          
0458DC CD A5 B6 04 6394*  	call vdu_load_img
0458E0 C9          6395*  	ret
0458E1             6396*  
0458E1             6397*  ld_51_032:
0458E1 21 99 60 04 6398*  	ld hl,F51_032
0458E5 22 3A B5 04 6399*  	ld (cur_filename),hl
0458E9 11 C5 C2 04 6400*  	ld de,filedata
0458ED 01 00 00 01 6401*  	ld bc,65536
0458F1 3E 01       6402*  	ld a,mos_load
0458F3 5B CF       6403*  	RST.LIL 08h
0458F5 21 65 02 00 6404*  	ld hl,BUF_51_032
0458F9 01 1E 00 00 6405*  	ld bc,30
0458FD 11 2A 00 00 6406*  	ld de,42
045901 DD 21 EC 04 6407*  	ld ix,1260
       00          
045906 CD A5 B6 04 6408*  	call vdu_load_img
04590A C9          6409*  	ret
04590B             6410*  
04590B             6411*  ld_51_040:
04590B 21 AD 60 04 6412*  	ld hl,F51_040
04590F 22 3A B5 04 6413*  	ld (cur_filename),hl
045913 11 C5 C2 04 6414*  	ld de,filedata
045917 01 00 00 01 6415*  	ld bc,65536
04591B 3E 01       6416*  	ld a,mos_load
04591D 5B CF       6417*  	RST.LIL 08h
04591F 21 66 02 00 6418*  	ld hl,BUF_51_040
045923 01 31 00 00 6419*  	ld bc,49
045927 11 46 00 00 6420*  	ld de,70
04592B DD 21 66 0D 6421*  	ld ix,3430
       00          
045930 CD A5 B6 04 6422*  	call vdu_load_img
045934 C9          6423*  	ret
045935             6424*  
045935             6425*  ld_51_044:
045935 21 C1 60 04 6426*  	ld hl,F51_044
045939 22 3A B5 04 6427*  	ld (cur_filename),hl
04593D 11 C5 C2 04 6428*  	ld de,filedata
045941 01 00 00 01 6429*  	ld bc,65536
045945 3E 01       6430*  	ld a,mos_load
045947 5B CF       6431*  	RST.LIL 08h
045949 21 67 02 00 6432*  	ld hl,BUF_51_044
04594D 01 92 00 00 6433*  	ld bc,146
045951 11 83 00 00 6434*  	ld de,131
045955 DD 21 B6 4A 6435*  	ld ix,19126
       00          
04595A CD A5 B6 04 6436*  	call vdu_load_img
04595E C9          6437*  	ret
04595F             6438*  
04595F             6439*  ld_52_004:
04595F 21 D5 60 04 6440*  	ld hl,F52_004
045963 22 3A B5 04 6441*  	ld (cur_filename),hl
045967 11 C5 C2 04 6442*  	ld de,filedata
04596B 01 00 00 01 6443*  	ld bc,65536
04596F 3E 01       6444*  	ld a,mos_load
045971 5B CF       6445*  	RST.LIL 08h
045973 21 68 02 00 6446*  	ld hl,BUF_52_004
045977 01 0E 00 00 6447*  	ld bc,14
04597B 11 17 00 00 6448*  	ld de,23
04597F DD 21 42 01 6449*  	ld ix,322
       00          
045984 CD A5 B6 04 6450*  	call vdu_load_img
045988 C9          6451*  	ret
045989             6452*  
045989             6453*  ld_52_020:
045989 21 E9 60 04 6454*  	ld hl,F52_020
04598D 22 3A B5 04 6455*  	ld (cur_filename),hl
045991 11 C5 C2 04 6456*  	ld de,filedata
045995 01 00 00 01 6457*  	ld bc,65536
045999 3E 01       6458*  	ld a,mos_load
04599B 5B CF       6459*  	RST.LIL 08h
04599D 21 69 02 00 6460*  	ld hl,BUF_52_020
0459A1 01 11 00 00 6461*  	ld bc,17
0459A5 11 1D 00 00 6462*  	ld de,29
0459A9 DD 21 ED 01 6463*  	ld ix,493
       00          
0459AE CD A5 B6 04 6464*  	call vdu_load_img
0459B2 C9          6465*  	ret
0459B3             6466*  
0459B3             6467*  ld_52_032:
0459B3 21 FD 60 04 6468*  	ld hl,F52_032
0459B7 22 3A B5 04 6469*  	ld (cur_filename),hl
0459BB 11 C5 C2 04 6470*  	ld de,filedata
0459BF 01 00 00 01 6471*  	ld bc,65536
0459C3 3E 01       6472*  	ld a,mos_load
0459C5 5B CF       6473*  	RST.LIL 08h
0459C7 21 6A 02 00 6474*  	ld hl,BUF_52_032
0459CB 01 19 00 00 6475*  	ld bc,25
0459CF 11 2A 00 00 6476*  	ld de,42
0459D3 DD 21 1A 04 6477*  	ld ix,1050
       00          
0459D8 CD A5 B6 04 6478*  	call vdu_load_img
0459DC C9          6479*  	ret
0459DD             6480*  
0459DD             6481*  ld_52_040:
0459DD 21 11 61 04 6482*  	ld hl,F52_040
0459E1 22 3A B5 04 6483*  	ld (cur_filename),hl
0459E5 11 C5 C2 04 6484*  	ld de,filedata
0459E9 01 00 00 01 6485*  	ld bc,65536
0459ED 3E 01       6486*  	ld a,mos_load
0459EF 5B CF       6487*  	RST.LIL 08h
0459F1 21 6B 02 00 6488*  	ld hl,BUF_52_040
0459F5 01 28 00 00 6489*  	ld bc,40
0459F9 11 46 00 00 6490*  	ld de,70
0459FD DD 21 F0 0A 6491*  	ld ix,2800
       00          
045A02 CD A5 B6 04 6492*  	call vdu_load_img
045A06 C9          6493*  	ret
045A07             6494*  
045A07             6495*  ld_52_044:
045A07 21 25 61 04 6496*  	ld hl,F52_044
045A0B 22 3A B5 04 6497*  	ld (cur_filename),hl
045A0F 11 C5 C2 04 6498*  	ld de,filedata
045A13 01 00 00 01 6499*  	ld bc,65536
045A17 3E 01       6500*  	ld a,mos_load
045A19 5B CF       6501*  	RST.LIL 08h
045A1B 21 6C 02 00 6502*  	ld hl,BUF_52_044
045A1F 01 78 00 00 6503*  	ld bc,120
045A23 11 83 00 00 6504*  	ld de,131
045A27 DD 21 68 3D 6505*  	ld ix,15720
       00          
045A2C CD A5 B6 04 6506*  	call vdu_load_img
045A30 C9          6507*  	ret
045A31             6508*  
045A31             6509*  ; File name lookups:
045A31 70 61 6E 65 6510*  F20_004: db "panels/20_004.rgba2",0
       6C 73 2F 32 
       30 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045A45 70 61 6E 65 6511*  F20_020: db "panels/20_020.rgba2",0
       6C 73 2F 32 
       30 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045A59 70 61 6E 65 6512*  F20_032: db "panels/20_032.rgba2",0
       6C 73 2F 32 
       30 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045A6D 70 61 6E 65 6513*  F20_040: db "panels/20_040.rgba2",0
       6C 73 2F 32 
       30 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045A81 70 61 6E 65 6514*  F20_044: db "panels/20_044.rgba2",0
       6C 73 2F 32 
       30 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045A95 70 61 6E 65 6515*  F21_004: db "panels/21_004.rgba2",0
       6C 73 2F 32 
       31 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045AA9 70 61 6E 65 6516*  F21_020: db "panels/21_020.rgba2",0
       6C 73 2F 32 
       31 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045ABD 70 61 6E 65 6517*  F21_032: db "panels/21_032.rgba2",0
       6C 73 2F 32 
       31 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045AD1 70 61 6E 65 6518*  F21_040: db "panels/21_040.rgba2",0
       6C 73 2F 32 
       31 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045AE5 70 61 6E 65 6519*  F21_044: db "panels/21_044.rgba2",0
       6C 73 2F 32 
       31 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045AF9 70 61 6E 65 6520*  F22_004: db "panels/22_004.rgba2",0
       6C 73 2F 32 
       32 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045B0D 70 61 6E 65 6521*  F22_020: db "panels/22_020.rgba2",0
       6C 73 2F 32 
       32 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045B21 70 61 6E 65 6522*  F22_032: db "panels/22_032.rgba2",0
       6C 73 2F 32 
       32 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045B35 70 61 6E 65 6523*  F22_040: db "panels/22_040.rgba2",0
       6C 73 2F 32 
       32 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045B49 70 61 6E 65 6524*  F22_044: db "panels/22_044.rgba2",0
       6C 73 2F 32 
       32 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045B5D 70 61 6E 65 6525*  F23_004: db "panels/23_004.rgba2",0
       6C 73 2F 32 
       33 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045B71 70 61 6E 65 6526*  F23_020: db "panels/23_020.rgba2",0
       6C 73 2F 32 
       33 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045B85 70 61 6E 65 6527*  F23_032: db "panels/23_032.rgba2",0
       6C 73 2F 32 
       33 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045B99 70 61 6E 65 6528*  F23_040: db "panels/23_040.rgba2",0
       6C 73 2F 32 
       33 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045BAD 70 61 6E 65 6529*  F23_044: db "panels/23_044.rgba2",0
       6C 73 2F 32 
       33 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045BC1 70 61 6E 65 6530*  F24_004: db "panels/24_004.rgba2",0
       6C 73 2F 32 
       34 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045BD5 70 61 6E 65 6531*  F24_020: db "panels/24_020.rgba2",0
       6C 73 2F 32 
       34 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045BE9 70 61 6E 65 6532*  F24_032: db "panels/24_032.rgba2",0
       6C 73 2F 32 
       34 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045BFD 70 61 6E 65 6533*  F24_040: db "panels/24_040.rgba2",0
       6C 73 2F 32 
       34 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045C11 70 61 6E 65 6534*  F24_044: db "panels/24_044.rgba2",0
       6C 73 2F 32 
       34 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045C25 70 61 6E 65 6535*  F40_004: db "panels/40_004.rgba2",0
       6C 73 2F 34 
       30 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045C39 70 61 6E 65 6536*  F40_020: db "panels/40_020.rgba2",0
       6C 73 2F 34 
       30 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045C4D 70 61 6E 65 6537*  F40_032: db "panels/40_032.rgba2",0
       6C 73 2F 34 
       30 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045C61 70 61 6E 65 6538*  F40_040: db "panels/40_040.rgba2",0
       6C 73 2F 34 
       30 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045C75 70 61 6E 65 6539*  F40_044: db "panels/40_044.rgba2",0
       6C 73 2F 34 
       30 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045C89 70 61 6E 65 6540*  F41_004: db "panels/41_004.rgba2",0
       6C 73 2F 34 
       31 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045C9D 70 61 6E 65 6541*  F41_020: db "panels/41_020.rgba2",0
       6C 73 2F 34 
       31 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045CB1 70 61 6E 65 6542*  F41_032: db "panels/41_032.rgba2",0
       6C 73 2F 34 
       31 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045CC5 70 61 6E 65 6543*  F41_040: db "panels/41_040.rgba2",0
       6C 73 2F 34 
       31 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045CD9 70 61 6E 65 6544*  F41_044: db "panels/41_044.rgba2",0
       6C 73 2F 34 
       31 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045CED 70 61 6E 65 6545*  F42_004: db "panels/42_004.rgba2",0
       6C 73 2F 34 
       32 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045D01 70 61 6E 65 6546*  F42_020: db "panels/42_020.rgba2",0
       6C 73 2F 34 
       32 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045D15 70 61 6E 65 6547*  F42_032: db "panels/42_032.rgba2",0
       6C 73 2F 34 
       32 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045D29 70 61 6E 65 6548*  F42_040: db "panels/42_040.rgba2",0
       6C 73 2F 34 
       32 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045D3D 70 61 6E 65 6549*  F42_044: db "panels/42_044.rgba2",0
       6C 73 2F 34 
       32 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045D51 70 61 6E 65 6550*  F43_004: db "panels/43_004.rgba2",0
       6C 73 2F 34 
       33 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045D65 70 61 6E 65 6551*  F43_020: db "panels/43_020.rgba2",0
       6C 73 2F 34 
       33 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045D79 70 61 6E 65 6552*  F43_032: db "panels/43_032.rgba2",0
       6C 73 2F 34 
       33 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045D8D 70 61 6E 65 6553*  F43_040: db "panels/43_040.rgba2",0
       6C 73 2F 34 
       33 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045DA1 70 61 6E 65 6554*  F43_044: db "panels/43_044.rgba2",0
       6C 73 2F 34 
       33 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045DB5 70 61 6E 65 6555*  F44_004: db "panels/44_004.rgba2",0
       6C 73 2F 34 
       34 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045DC9 70 61 6E 65 6556*  F44_020: db "panels/44_020.rgba2",0
       6C 73 2F 34 
       34 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045DDD 70 61 6E 65 6557*  F44_032: db "panels/44_032.rgba2",0
       6C 73 2F 34 
       34 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045DF1 70 61 6E 65 6558*  F44_040: db "panels/44_040.rgba2",0
       6C 73 2F 34 
       34 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045E05 70 61 6E 65 6559*  F44_044: db "panels/44_044.rgba2",0
       6C 73 2F 34 
       34 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045E19 70 61 6E 65 6560*  F45_004: db "panels/45_004.rgba2",0
       6C 73 2F 34 
       35 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045E2D 70 61 6E 65 6561*  F45_020: db "panels/45_020.rgba2",0
       6C 73 2F 34 
       35 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045E41 70 61 6E 65 6562*  F45_032: db "panels/45_032.rgba2",0
       6C 73 2F 34 
       35 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045E55 70 61 6E 65 6563*  F45_040: db "panels/45_040.rgba2",0
       6C 73 2F 34 
       35 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045E69 70 61 6E 65 6564*  F45_044: db "panels/45_044.rgba2",0
       6C 73 2F 34 
       35 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045E7D 70 61 6E 65 6565*  F46_004: db "panels/46_004.rgba2",0
       6C 73 2F 34 
       36 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045E91 70 61 6E 65 6566*  F46_020: db "panels/46_020.rgba2",0
       6C 73 2F 34 
       36 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045EA5 70 61 6E 65 6567*  F46_032: db "panels/46_032.rgba2",0
       6C 73 2F 34 
       36 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045EB9 70 61 6E 65 6568*  F46_040: db "panels/46_040.rgba2",0
       6C 73 2F 34 
       36 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045ECD 70 61 6E 65 6569*  F46_044: db "panels/46_044.rgba2",0
       6C 73 2F 34 
       36 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045EE1 70 61 6E 65 6570*  F47_004: db "panels/47_004.rgba2",0
       6C 73 2F 34 
       37 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045EF5 70 61 6E 65 6571*  F47_020: db "panels/47_020.rgba2",0
       6C 73 2F 34 
       37 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045F09 70 61 6E 65 6572*  F47_032: db "panels/47_032.rgba2",0
       6C 73 2F 34 
       37 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045F1D 70 61 6E 65 6573*  F47_040: db "panels/47_040.rgba2",0
       6C 73 2F 34 
       37 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045F31 70 61 6E 65 6574*  F47_044: db "panels/47_044.rgba2",0
       6C 73 2F 34 
       37 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045F45 70 61 6E 65 6575*  F48_004: db "panels/48_004.rgba2",0
       6C 73 2F 34 
       38 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045F59 70 61 6E 65 6576*  F48_020: db "panels/48_020.rgba2",0
       6C 73 2F 34 
       38 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045F6D 70 61 6E 65 6577*  F48_032: db "panels/48_032.rgba2",0
       6C 73 2F 34 
       38 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045F81 70 61 6E 65 6578*  F48_040: db "panels/48_040.rgba2",0
       6C 73 2F 34 
       38 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045F95 70 61 6E 65 6579*  F48_044: db "panels/48_044.rgba2",0
       6C 73 2F 34 
       38 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
045FA9 70 61 6E 65 6580*  F49_004: db "panels/49_004.rgba2",0
       6C 73 2F 34 
       39 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
045FBD 70 61 6E 65 6581*  F49_020: db "panels/49_020.rgba2",0
       6C 73 2F 34 
       39 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
045FD1 70 61 6E 65 6582*  F49_032: db "panels/49_032.rgba2",0
       6C 73 2F 34 
       39 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
045FE5 70 61 6E 65 6583*  F49_040: db "panels/49_040.rgba2",0
       6C 73 2F 34 
       39 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
045FF9 70 61 6E 65 6584*  F49_044: db "panels/49_044.rgba2",0
       6C 73 2F 34 
       39 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
04600D 70 61 6E 65 6585*  F50_004: db "panels/50_004.rgba2",0
       6C 73 2F 35 
       30 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
046021 70 61 6E 65 6586*  F50_020: db "panels/50_020.rgba2",0
       6C 73 2F 35 
       30 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
046035 70 61 6E 65 6587*  F50_032: db "panels/50_032.rgba2",0
       6C 73 2F 35 
       30 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
046049 70 61 6E 65 6588*  F50_040: db "panels/50_040.rgba2",0
       6C 73 2F 35 
       30 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
04605D 70 61 6E 65 6589*  F50_044: db "panels/50_044.rgba2",0
       6C 73 2F 35 
       30 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
046071 70 61 6E 65 6590*  F51_004: db "panels/51_004.rgba2",0
       6C 73 2F 35 
       31 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
046085 70 61 6E 65 6591*  F51_020: db "panels/51_020.rgba2",0
       6C 73 2F 35 
       31 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
046099 70 61 6E 65 6592*  F51_032: db "panels/51_032.rgba2",0
       6C 73 2F 35 
       31 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
0460AD 70 61 6E 65 6593*  F51_040: db "panels/51_040.rgba2",0
       6C 73 2F 35 
       31 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
0460C1 70 61 6E 65 6594*  F51_044: db "panels/51_044.rgba2",0
       6C 73 2F 35 
       31 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
0460D5 70 61 6E 65 6595*  F52_004: db "panels/52_004.rgba2",0
       6C 73 2F 35 
       32 5F 30 30 
       34 2E 72 67 
       62 61 32 00 
0460E9 70 61 6E 65 6596*  F52_020: db "panels/52_020.rgba2",0
       6C 73 2F 35 
       32 5F 30 32 
       30 2E 72 67 
       62 61 32 00 
0460FD 70 61 6E 65 6597*  F52_032: db "panels/52_032.rgba2",0
       6C 73 2F 35 
       32 5F 30 33 
       32 2E 72 67 
       62 61 32 00 
046111 70 61 6E 65 6598*  F52_040: db "panels/52_040.rgba2",0
       6C 73 2F 35 
       32 5F 30 34 
       30 2E 72 67 
       62 61 32 00 
046125 70 61 6E 65 6599*  F52_044: db "panels/52_044.rgba2",0
       6C 73 2F 35 
       32 5F 30 34 
       34 2E 72 67 
       62 61 32 00 
046139             6600*  
046139             6601*  ; dws buffer ids:
046139             6602*  BUF_DW_6: equ 0x026D
046139             6603*  BUF_DW_7: equ 0x026E
046139             6604*  BUF_DW_8: equ 0x026F
046139             6605*  BUF_DW_9: equ 0x0270
046139             6606*  BUF_DW_10: equ 0x0271
046139             6607*  BUF_DW_11: equ 0x0272
046139             6608*  BUF_DW_12: equ 0x0273
046139             6609*  BUF_DW_13: equ 0x0274
046139             6610*  BUF_DW_14: equ 0x0275
046139             6611*  
046139             6612*  dws_num_panels: equ 9
046139             6613*  
046139             6614*  ; dws buffer id reverse lookup:
046139             6615*  dws_buffer_id_lut:
046139 6D 02 00    6616*  	dl BUF_DW_6
04613C 6E 02 00    6617*  	dl BUF_DW_7
04613F 6F 02 00    6618*  	dl BUF_DW_8
046142 70 02 00    6619*  	dl BUF_DW_9
046145 71 02 00    6620*  	dl BUF_DW_10
046148 72 02 00    6621*  	dl BUF_DW_11
04614B 73 02 00    6622*  	dl BUF_DW_12
04614E 74 02 00    6623*  	dl BUF_DW_13
046151 75 02 00    6624*  	dl BUF_DW_14
046154             6625*  
046154             6626*  ; dws load routines jump table:
046154             6627*  dws_load_panels_table:
046154 6F 61 04    6628*  	dl ld_dw_6
046157 99 61 04    6629*  	dl ld_dw_7
04615A C3 61 04    6630*  	dl ld_dw_8
04615D ED 61 04    6631*  	dl ld_dw_9
046160 17 62 04    6632*  	dl ld_dw_10
046163 41 62 04    6633*  	dl ld_dw_11
046166 6B 62 04    6634*  	dl ld_dw_12
046169 95 62 04    6635*  	dl ld_dw_13
04616C BF 62 04    6636*  	dl ld_dw_14
04616F             6637*  
04616F             6638*  ; Import dws .rgba2 bitmap files and load them into VDP buffers
04616F             6639*  
04616F             6640*  ld_dw_6:
04616F 21 E9 62 04 6641*  	ld hl,Fdw_6
046173 22 3A B5 04 6642*  	ld (cur_filename),hl
046177 11 C5 C2 04 6643*  	ld de,filedata
04617B 01 00 00 01 6644*  	ld bc,65536
04617F 3E 01       6645*  	ld a,mos_load
046181 5B CF       6646*  	RST.LIL 08h
046183 21 6D 02 00 6647*  	ld hl,BUF_DW_6
046187 01 40 01 00 6648*  	ld bc,320
04618B 11 1E 00 00 6649*  	ld de,30
04618F DD 21 80 25 6650*  	ld ix,9600
       00          
046194 CD A5 B6 04 6651*  	call vdu_load_img
046198 C9          6652*  	ret
046199             6653*  
046199             6654*  ld_dw_7:
046199 21 F8 62 04 6655*  	ld hl,Fdw_7
04619D 22 3A B5 04 6656*  	ld (cur_filename),hl
0461A1 11 C5 C2 04 6657*  	ld de,filedata
0461A5 01 00 00 01 6658*  	ld bc,65536
0461A9 3E 01       6659*  	ld a,mos_load
0461AB 5B CF       6660*  	RST.LIL 08h
0461AD 21 6E 02 00 6661*  	ld hl,BUF_DW_7
0461B1 01 40 01 00 6662*  	ld bc,320
0461B5 11 18 00 00 6663*  	ld de,24
0461B9 DD 21 00 1E 6664*  	ld ix,7680
       00          
0461BE CD A5 B6 04 6665*  	call vdu_load_img
0461C2 C9          6666*  	ret
0461C3             6667*  
0461C3             6668*  ld_dw_8:
0461C3 21 07 63 04 6669*  	ld hl,Fdw_8
0461C7 22 3A B5 04 6670*  	ld (cur_filename),hl
0461CB 11 C5 C2 04 6671*  	ld de,filedata
0461CF 01 00 00 01 6672*  	ld bc,65536
0461D3 3E 01       6673*  	ld a,mos_load
0461D5 5B CF       6674*  	RST.LIL 08h
0461D7 21 6F 02 00 6675*  	ld hl,BUF_DW_8
0461DB 01 40 01 00 6676*  	ld bc,320
0461DF 11 12 00 00 6677*  	ld de,18
0461E3 DD 21 80 16 6678*  	ld ix,5760
       00          
0461E8 CD A5 B6 04 6679*  	call vdu_load_img
0461EC C9          6680*  	ret
0461ED             6681*  
0461ED             6682*  ld_dw_9:
0461ED 21 16 63 04 6683*  	ld hl,Fdw_9
0461F1 22 3A B5 04 6684*  	ld (cur_filename),hl
0461F5 11 C5 C2 04 6685*  	ld de,filedata
0461F9 01 00 00 01 6686*  	ld bc,65536
0461FD 3E 01       6687*  	ld a,mos_load
0461FF 5B CF       6688*  	RST.LIL 08h
046201 21 70 02 00 6689*  	ld hl,BUF_DW_9
046205 01 40 01 00 6690*  	ld bc,320
046209 11 10 00 00 6691*  	ld de,16
04620D DD 21 00 14 6692*  	ld ix,5120
       00          
046212 CD A5 B6 04 6693*  	call vdu_load_img
046216 C9          6694*  	ret
046217             6695*  
046217             6696*  ld_dw_10:
046217 21 25 63 04 6697*  	ld hl,Fdw_10
04621B 22 3A B5 04 6698*  	ld (cur_filename),hl
04621F 11 C5 C2 04 6699*  	ld de,filedata
046223 01 00 00 01 6700*  	ld bc,65536
046227 3E 01       6701*  	ld a,mos_load
046229 5B CF       6702*  	RST.LIL 08h
04622B 21 71 02 00 6703*  	ld hl,BUF_DW_10
04622F 01 40 01 00 6704*  	ld bc,320
046233 11 10 00 00 6705*  	ld de,16
046237 DD 21 00 14 6706*  	ld ix,5120
       00          
04623C CD A5 B6 04 6707*  	call vdu_load_img
046240 C9          6708*  	ret
046241             6709*  
046241             6710*  ld_dw_11:
046241 21 35 63 04 6711*  	ld hl,Fdw_11
046245 22 3A B5 04 6712*  	ld (cur_filename),hl
046249 11 C5 C2 04 6713*  	ld de,filedata
04624D 01 00 00 01 6714*  	ld bc,65536
046251 3E 01       6715*  	ld a,mos_load
046253 5B CF       6716*  	RST.LIL 08h
046255 21 72 02 00 6717*  	ld hl,BUF_DW_11
046259 01 40 01 00 6718*  	ld bc,320
04625D 11 0E 00 00 6719*  	ld de,14
046261 DD 21 80 11 6720*  	ld ix,4480
       00          
046266 CD A5 B6 04 6721*  	call vdu_load_img
04626A C9          6722*  	ret
04626B             6723*  
04626B             6724*  ld_dw_12:
04626B 21 45 63 04 6725*  	ld hl,Fdw_12
04626F 22 3A B5 04 6726*  	ld (cur_filename),hl
046273 11 C5 C2 04 6727*  	ld de,filedata
046277 01 00 00 01 6728*  	ld bc,65536
04627B 3E 01       6729*  	ld a,mos_load
04627D 5B CF       6730*  	RST.LIL 08h
04627F 21 73 02 00 6731*  	ld hl,BUF_DW_12
046283 01 40 01 00 6732*  	ld bc,320
046287 11 0C 00 00 6733*  	ld de,12
04628B DD 21 00 0F 6734*  	ld ix,3840
       00          
046290 CD A5 B6 04 6735*  	call vdu_load_img
046294 C9          6736*  	ret
046295             6737*  
046295             6738*  ld_dw_13:
046295 21 55 63 04 6739*  	ld hl,Fdw_13
046299 22 3A B5 04 6740*  	ld (cur_filename),hl
04629D 11 C5 C2 04 6741*  	ld de,filedata
0462A1 01 00 00 01 6742*  	ld bc,65536
0462A5 3E 01       6743*  	ld a,mos_load
0462A7 5B CF       6744*  	RST.LIL 08h
0462A9 21 74 02 00 6745*  	ld hl,BUF_DW_13
0462AD 01 40 01 00 6746*  	ld bc,320
0462B1 11 0C 00 00 6747*  	ld de,12
0462B5 DD 21 00 0F 6748*  	ld ix,3840
       00          
0462BA CD A5 B6 04 6749*  	call vdu_load_img
0462BE C9          6750*  	ret
0462BF             6751*  
0462BF             6752*  ld_dw_14:
0462BF 21 65 63 04 6753*  	ld hl,Fdw_14
0462C3 22 3A B5 04 6754*  	ld (cur_filename),hl
0462C7 11 C5 C2 04 6755*  	ld de,filedata
0462CB 01 00 00 01 6756*  	ld bc,65536
0462CF 3E 01       6757*  	ld a,mos_load
0462D1 5B CF       6758*  	RST.LIL 08h
0462D3 21 75 02 00 6759*  	ld hl,BUF_DW_14
0462D7 01 40 01 00 6760*  	ld bc,320
0462DB 11 0C 00 00 6761*  	ld de,12
0462DF DD 21 00 0F 6762*  	ld ix,3840
       00          
0462E4 CD A5 B6 04 6763*  	call vdu_load_img
0462E8 C9          6764*  	ret
0462E9             6765*  
0462E9             6766*  ; File name lookups:
0462E9 64 77 73 2F 6767*  Fdw_6: db "dws/dw_6.rgba2",0
       64 77 5F 36 
       2E 72 67 62 
       61 32 00    
0462F8 64 77 73 2F 6768*  Fdw_7: db "dws/dw_7.rgba2",0
       64 77 5F 37 
       2E 72 67 62 
       61 32 00    
046307 64 77 73 2F 6769*  Fdw_8: db "dws/dw_8.rgba2",0
       64 77 5F 38 
       2E 72 67 62 
       61 32 00    
046316 64 77 73 2F 6770*  Fdw_9: db "dws/dw_9.rgba2",0
       64 77 5F 39 
       2E 72 67 62 
       61 32 00    
046325 64 77 73 2F 6771*  Fdw_10: db "dws/dw_10.rgba2",0
       64 77 5F 31 
       30 2E 72 67 
       62 61 32 00 
046335 64 77 73 2F 6772*  Fdw_11: db "dws/dw_11.rgba2",0
       64 77 5F 31 
       31 2E 72 67 
       62 61 32 00 
046345 64 77 73 2F 6773*  Fdw_12: db "dws/dw_12.rgba2",0
       64 77 5F 31 
       32 2E 72 67 
       62 61 32 00 
046355 64 77 73 2F 6774*  Fdw_13: db "dws/dw_13.rgba2",0
       64 77 5F 31 
       33 2E 72 67 
       62 61 32 00 
046365 64 77 73 2F 6775*  Fdw_14: db "dws/dw_14.rgba2",0
       64 77 5F 31 
       34 2E 72 67 
       62 61 32 00 
046375             0019   	; include "src/asm/images_CMP.asm"
046375             0020   	include "src/asm/fonts_bmp.asm"
046375             0001*  ; plots a bitmap character to the screen
046375             0002*  ; inputs: a; ascii character to plot
046375             0003*  ;      bc,de = x,y screen coordinates in pixels
046375             0004*  ;      ix pointed at the font definition lut
046375             0005*  ; returns: bc as the next x coordinate to plot
046375             0006*  ;          pretty pixels which hopefully resemble readable text
046375             0007*  ; destroys: lotsa stuff
046375             0008*  font_bmp_plot:
046375             0009*  ; back up bc,de
046375 C5          0010*      push bc
046376 D5          0011*      push de
046377             0012*  ; get the buffer id of the character
046377 D6 20       0013*      sub 32 ; lookup table starts at ascii 32
046379 06 06       0014*      ld b,6 ; six bytes per lookup record
04637B 4F          0015*      ld c,a
04637C ED 4C       0016*      mlt bc
04637E DD 09       0017*      add ix,bc ; now ix points to the character definition
046380 DD 27 03    0018*      ld hl,(ix+3) ; hl has the buffer id
046383 CD 7E A7 04 0019*      call vdu_buff_select
046387             0020*  ; plot the character
046387 D1          0021*      pop de
046388 DD 7E 02    0022*      ld a,(ix+2) ; a has the y-offset of the character
04638B 83          0023*      add a,e ; add the y-coordinate
04638C 5F          0024*      ld e,a
04638D 3E 00       0025*      ld a,0 ; can't xor it because we need carry
04638F 8A          0026*      adc a,d
046390 57          0027*      ld d,a ; plot_y now correct for the character
046391 C1          0028*      pop bc ; plot_x
046392 C5          0029*      push bc ; we want it back after the plot
046393 CD 4F A9 04 0030*      call vdu_plot_bmp
046397             0031*  ; now set bc to the next x coordinate
046397 C1          0032*      pop bc
046398 DD 7E 00    0033*      ld a,(ix+0) ; a has the width of the character
04639B C6 02       0034*      add a,2 ; add a little padding between characters
04639D 81          0035*      add a,c ; bump the original x-coordinate
04639E 4F          0036*      ld c,a
04639F 3E 00       0037*      ld a,0 ; can't xor it because we need carry
0463A1 88          0038*      adc a,b
0463A2 47          0039*      ld b,a ; plot_x now correct for the next character
0463A3 C9          0040*      ret
0463A4             0041*  
0463A4             0042*  ; plots a zero-terminated string of bitmap characters to the screen
0463A4             0043*  ; inputs: hl; pointer to the string
0463A4             0044*  ;       bc,de = x,y screen coordinates in pixels
0463A4             0045*  ;       ix pointed at the font definition lut
0463A4             0046*  ; returns: bc as the next x coordinate to plot
0463A4             0047*  ;          de as the next y coordinate to plot
0463A4             0048*  ;          pretty pixels which hopefully resemble readable text
0463A4             0049*  font_bmp_print:
0463A4             0050*  @next_char:
0463A4             0051*  ; fetch the next character in the string
0463A4 7E          0052*      ld a,(hl) ; a has the ascii value of the character
0463A5 FE 00       0053*      cp 0 ; is it zero?
0463A7 C8          0054*      ret z ; if so, we're done
0463A8 23          0055*      inc hl ; point to the next character
0463A9 E5          0056*      push hl ; save the pointer
0463AA D5          0057*      push de ; save our y-coordinate
0463AB DD E5       0058*      push ix ; save the font lut pointer
0463AD CD 75 63 04 0059*      call font_bmp_plot ; plot the character
0463B1 DD E1       0060*      pop ix ; restore the font lut pointer
0463B3 D1          0061*      pop de ; restore our y-coordinate
0463B4 E1          0062*      pop hl ; restore the pointer
0463B5 C3 A4 63 04 0063*      jp @next_char ; loop
0463B9             0021   	include "src/asm/maps.asm"
0463B9             0001*  ; ############# MAP CONSTANTS #############
0463B9             0002*  ; map tables addresses
0463B9             0003*  cell_status: 		equ 0xB7E000 ; base of on-chip high speed SRAM
0463B9             0004*  cell_views: 		equ 0xB7E400 ; cell_status + 256*4
0463B9             0005*  
0463B9             0006*  ; map status/type flags
0463B9             0007*  cell_is_door:     	equ %10000000  ; Bit 7: door flag
0463B9             0008*  cell_is_wall:     	equ %01000000  ; Bit 6: wall flag
0463B9             0009*  cell_is_trigger:  	equ %00100000  ; Bit 5: trigger flag
0463B9             0010*  cell_is_blocking: 	equ %00010000  ; Bit 4: blocking flag
0463B9             0011*  cell_is_start:		equ %00001000  ; Bit 3: start flag
0463B9             0012*  cell_is_to_room:    equ %00000100  ; Bit 2: to room flag
0463B9             0013*  ; bits 1 and 0 are the render_type mask
0463B9             0014*  render_type_cube:   equ %00000000  ; 0
0463B9             0015*  render_type_floor:  equ %00000001  ; 1
0463B9             0016*  render_type_null:   equ %00000010  ; 2
0463B9             0017*  render_type_sprite: equ %00000011  ; 3
0463B9             0018*  
0463B9             0019*  ; HOW THE MAP TABLE IS LAID OUT
0463B9             0020*  ; map table field offset constants
0463B9             0021*  ; (mind the little-endianess)
0463B9             0022*  map_type_status: 	equ 0
0463B9             0023*  map_img_idx: 		equ 1
0463B9             0024*  map_obj_id: 		equ 2
0463B9             0025*  map_sprite_id: 		equ 3
0463B9             0026*  map_record_size: 	equ 4 ; bytes per cell_status record
0463B9             0027*  
0463B9             0028*  ; gets cell info from a directional displacement from a given map location
0463B9             0029*  ; inputs: ; d = distance ; e = direction, b,c = y,x
0463B9             0030*  ; returns: ix = pointer to cell_status lut; a = obj_id; hl = address of cell base render routine
0463B9             0031*  ; calls: get_dx_dy, get_cell_from_coords
0463B9             0032*  get_neighbor:
0463B9             0033*  ; modulo 4 on orientation
0463B9 7B          0034*      ld a,e
0463BA E6 03       0035*      and 0x03
0463BC 5F          0036*      ld e,a
0463BD CD EC 63 04 0037*  	call get_dx_dy ; d,e = dy,dx
0463C1             0038*  ; add add b,c to the deltas in d,e
0463C1 79          0039*  	ld a,c
0463C2 83          0040*  	add a,e
0463C3 5F          0041*  	ld e,a
0463C4 78          0042*  	ld a,b
0463C5 82          0043*  	add a,d
0463C6 57          0044*  	ld d,a
0463C7             0045*  ; fall through to get_cell_from_coords
0463C7             0046*  
0463C7             0047*  ; gets cell info from a given x,y map coordinate
0463C7             0048*  ; inputs: ; d,e = map_y,map_x
0463C7             0049*  ; returns: ix = pointer to cell_status lut; a = obj_id, bc = cell_id
0463C7             0050*  get_cell_from_coords:
0463C7             0051*  ; modulo 16 on input coords
0463C7 7B          0052*  	ld a,e
0463C8 E6 0F       0053*  	and 0x0F
0463CA 5F          0054*  	ld e,a
0463CB 7A          0055*  	ld a,d
0463CC E6 0F       0056*  	and 0x0F
0463CE 57          0057*  	ld d,a
0463CF             0058*  ; get cell_id from x,y
0463CF 42          0059*  	ld b,d ; y
0463D0 0E 10       0060*  	ld c,16 ; number of cells in a column
0463D2 ED 4C       0061*  	mlt bc ; bc = cell_id of y,0
0463D4 21 00 00 00 0062*  	ld hl,0 ; make sure uhl is zero
0463D8 6B          0063*  	ld l,e ; x
0463D9 09          0064*  	add hl,bc ; hl = cell_id of x,y
0463DA E5          0065*  	push hl ; so we can return cell_id
0463DB 4D          0066*  	ld c,l ; c = cell_id
0463DC             0067*  ; get address of cell record in cell_status table
0463DC 06 04       0068*  	ld b,map_record_size ; b = bytes per record
0463DE ED 4C       0069*  	mlt bc ; bc = offset to cell record
0463E0 DD 21 00 E0 0070*  	ld ix,cell_status ; base address of lookup table
       B7          
0463E5 DD 09       0071*  	add ix,bc ; ix = address of cell record
0463E7 DD 7E 02    0072*  	ld a,(ix+map_obj_id) ; a = obj_id
0463EA C1          0073*  	pop bc ; bc = cell_id
0463EB C9          0074*  	ret
0463EC             0075*  
0463EC             0076*  ; gets dx,dy from orientation and distance
0463EC             0077*  ; d = distance ; e = orientation
0463EC             0078*  ; returns: d,e = dy,dx
0463EC             0079*  get_dx_dy:
0463EC             0080*  ; modulo 4 on orientation
0463EC 7B          0081*  	ld a,e
0463ED E6 03       0082*  	and 0x03
0463EF FE 00       0083*  	cp 0
0463F1 28 11       0084*  	jr z,@north
0463F3 FE 01       0085*  	cp 1
0463F5 28 14       0086*  	jr z,@east
0463F7 FE 02       0087*  	cp 2
0463F9 28 14       0088*  	jr z,@south
0463FB FE 03       0089*  	cp 3
0463FD 28 13       0090*  	jr z,@west
0463FF             0091*  ; if none of those, return zeroes
0463FF 11 00 00 00 0092*  	ld de,0
046403 C9          0093*  	ret
046404             0094*  @north:
046404             0095*  ; x = 0, y = -d
046404 1E 00       0096*  	ld e,0
046406 7A          0097*  	ld a,d
046407 ED 44       0098*  	neg
046409 57          0099*  	ld d,a
04640A C9          0100*  	ret
04640B             0101*  @east:
04640B             0102*  ; x = d, y = 0
04640B 5A          0103*  	ld e,d
04640C 16 00       0104*  	ld d,0
04640E C9          0105*  	ret
04640F             0106*  @south:
04640F             0107*  ; x = 0, y = d
04640F 1E 00       0108*  	ld e,0
046411 C9          0109*  	ret
046412             0110*  @west:
046412             0111*  ; x = -d, y = 0
046412 7A          0112*  	ld a,d
046413 ED 44       0113*  	neg
046415 5F          0114*  	ld e,a
046416 16 00       0115*  	ld d,0
046418 C9          0116*  	ret
046419             0117*  
046419             0118*  ; gets the direction from a dy,dx pair
046419             0119*  ; basically atan2(dy,dx) but for only the 4 cardinal directions
046419             0120*  ; inputs: ; d = dy ; e = dx
046419             0121*  ; returns: a = orientation
046419             0122*  get_dir_from_dy_dx:
046419 AF          0123*  	xor a
04641A 93          0124*  	sub e
04641B 28 06       0125*  	jr z,@not_x
04641D 3E 01       0126*  	ld a,1
04641F F8          0127*  	ret m
046420 3E 03       0128*  	ld a,3
046422 C9          0129*  	ret
046423             0130*  @not_x:
046423 AF          0131*  	xor a
046424 92          0132*  	sub d
046425 C8          0133*  	ret z
046426 3E 02       0134*  	ld a,2
046428 F8          0135*  	ret m
046429 AF          0136*  	xor a
04642A C9          0137*  	ret
04642B             0138*  
04642B             0139*  
04642B             0140*  ; translate camera relative x,y deltas to map x,y deltas
04642B             0141*  ; inputs: ; d = dy ; e = dx ; a = camera orientation
04642B             0142*  ; returns:	d = map_dy ; e = map_dx
04642B             0143*  trans_dx_dy:
04642B             0144*  ; modulo 4 on orientation
04642B E6 03       0145*  	and 0x03
04642D 28 11       0146*  	jr z,@north
04642F FE 01       0147*  	cp 1 ; east
046431 28 12       0148*  	jr z,@east
046433 FE 02       0149*  	cp 2 ; south
046435 28 12       0150*  	jr z,@south
046437 FE 03       0151*  	cp 3 ; west
046439 28 13       0152*  	jr z,@west
04643B             0153*  ; if none of those, return zeroes
04643B 11 00 00 00 0154*  	ld de,0
04643F C9          0155*  	ret
046440             0156*  @north: ; invert y axis, x unnchanged
046440 7A          0157*  	ld a,d
046441 ED 44       0158*  	neg
046443 57          0159*  	ld d,a
046444 C9          0160*  	ret
046445             0161*  @east: ; +x = +y, +y = +x
046445 7A          0162*  	ld a,d
046446 53          0163*  	ld d,e
046447 5F          0164*  	ld e,a
046448 C9          0165*  	ret
046449             0166*  @south: ; invert x axis, y unchanged
046449 7B          0167*  	ld a,e
04644A ED 44       0168*  	neg
04644C 5F          0169*  	ld e,a
04644D C9          0170*  	ret
04644E             0171*  @west: ; +x = -y, +y = -x
04644E 7A          0172*  	ld a,d ; y
04644F ED 44       0173*  	neg ; -y
046451 53          0174*  	ld d,e ; x
046452 5F          0175*  	ld e,a ; -y
046453 7A          0176*  	ld a,d ; x
046454 ED 44       0177*  	neg ; -x
046456 57          0178*  	ld d,a ; -x
046457 C9          0179*  	ret
046458             0180*  
046458             0181*  ; initialize map variables and load map file
046458             0182*  ; inputs: none
046458             0183*  map_init:
046458 AF          0184*  	xor a
046459 32 74 B0 04 0185*  	ld (cur_floor),a
04645D 32 75 B0 04 0186*  	ld (cur_room),a
046461             0187*  ; load room file
046461 CD 66 64 04 0188*  	call map_load
046465             0189*  ; set player initial position
046465 C9          0190*  	ret
046466             0191*  
046466             0192*  ; load map file
046466             0193*  ; inputs: cur_floor, cur_room set
046466             0194*  map_load:
046466 21 1E 65 04 0195*  	ld hl,floors ; address of floors lut
04646A 3A 74 B0 04 0196*  	ld a,(cur_floor)
04646E 5F          0197*  	ld e,a
04646F 16 03       0198*  	ld d,3 ; three bytes per lookup record
046471 ED 5C       0199*  	mlt de ; de = offset to floor lut entry
046473 19          0200*  	add hl,de ; hl = address of floor lut entry
046474 ED 27       0201*  	ld hl,(hl) ; hl = base address of rooms for given floor
046476 3A 75 B0 04 0202*  	ld a,(cur_room)
04647A 5F          0203*  	ld e,a
04647B 16 03       0204*  	ld d,3 ; three bytes per lookup record
04647D ED 5C       0205*  	mlt de ; de = offset to room lut entry
04647F 19          0206*  	add hl,de ; hl = address of room lut entry
046480 ED 27       0207*  	ld hl,(hl) ; hl = address of room file name
046482 22 3A B5 04 0208*  	ld (cur_filename),hl ; DEBUG
046486 11 00 E0 B7 0209*  	ld de,cell_status ; address to load map data
04648A 01 00 20 00 0210*  	ld bc,8*1024 ; size of map data in bytes
04648E 3E 01       0211*  	ld a,mos_load
046490 5B CF       0212*  	RST.LIL 08h
046492             0213*  ; DEBUG: print filename
046492 2A 3A B5 04 0214*  	ld hl,(cur_filename)
046496 CD E6 AC 04 0215*  	call printString
04649A             0216*  ; load sprite data
04649A CD 9F 64 04 0217*  	call map_init_sprites
04649E C9          0218*  	ret
04649F             0219*  
04649F             0220*  ; initialize sprite data for the current room into sprite table
04649F             0221*  ; inputs: map data loaded
04649F             0222*  map_init_sprites:
04649F             0223*  ; initialize pointers
04649F DD 21 00 E0 0224*  	ld ix,cell_status
       B7          
0464A4 FD 21 00 FC 0225*  	ld iy,sprite_table_base
       B7          
0464A9 AF          0226*  	xor a
0464AA 32 EE 64 04 0227*  	ld (@cell_id),a
0464AE             0228*  @loop:
0464AE FD 22 3E 9D 0229*  	ld (sprite_table_pointer),iy ; probably don't strictly need this but why not
       04          
0464B3 DD 7E 03    0230*  	ld a,(ix+map_sprite_id)
0464B6 FE FF       0231*  	cp 255 ; check for no sprite
0464B8 28 1B       0232*  	jr z,@next_cell
0464BA FD 77 00    0233*  	ld (iy+sprite_id),a
0464BD DD 7E 01    0234*  	ld a,(ix+map_img_idx)
0464C0 FD 77 01    0235*  	ld (iy+sprite_obj),a
0464C3 CD 6F 9E 04 0236*  	call sprite_init_data
0464C7 3A EE 64 04 0237*  	ld a,(@cell_id)
0464CB CD EF 64 04 0238*  	call cell_id_to_coords ; d = map_y, e = map_x
0464CF FD 1F 04    0239*  	ld (iy+sprite_x),de ; set sprite x,y
0464D2 ED 33 10    0240*  	lea iy,iy+sprite_record_size ; advance pointer to next sprite record
0464D5             0241*  @next_cell:
0464D5 ED 32 04    0242*  	lea ix,ix+map_record_size ; advance pointer to next cell
0464D8             0243*  ; check if we've reached the end of the map data
0464D8 3A EE 64 04 0244*  	ld a,(@cell_id)
0464DC 3C          0245*  	inc a
0464DD 32 EE 64 04 0246*  	ld (@cell_id),a
0464E1 20 CB       0247*  	jr nz,@loop ; still more to do
0464E3             0248*  ; cleanup and return
0464E3 FD 21 00 FC 0249*  	ld iy,sprite_table_base ; reset pointer
       B7          
0464E8 FD 22 3E 9D 0250*  	ld (sprite_table_pointer),iy
       04          
0464ED C9          0251*  	ret
0464EE 00          0252*  @cell_id: db 0
0464EF             0253*  
0464EF             0254*  ; get the x,y map coordinates from a cell_id
0464EF             0255*  ; inputs: a = cell_id
0464EF             0256*  ; returns: a = cell_id, d = map_y, e = map_x
0464EF             0257*  cell_id_to_coords:
0464EF F5          0258*  	push af	; Save the cell id
0464F0             0259*  ; Calculate the y coordinate by dividing the index by 16
0464F0 57          0260*  	ld d,a      ; Move index into d
0464F1 CB 2A       0261*  	sra d        ; Shift right once (d = d / 2)
0464F3 CB 2A       0262*  	sra d        ; Shift right again (d = d / 4)
0464F5 CB 2A       0263*  	sra d        ; Shift right again (d = d / 8)
0464F7 CB 2A       0264*  	sra d        ; Shift right again (d = d / 16)
0464F9             0265*  ; Calculate the x coordinate by taking the index modulo 16
0464F9 E6 0F       0266*  	and 15       ; e = e & 15 (retain the lower 4 bits of the cell id, which is modulo 16)
0464FB 5F          0267*  	ld e,a      ; e is now the x coordinate
0464FC F1          0268*  	pop af	; a is cell id
0464FD C9          0269*  	ret
0464FE             0270*  
0464FE             0271*  ; get starting position based on the start flag
0464FE             0272*  ; inputs: none
0464FE             0273*  ; returns: a = cell_id, d = map_y, e = map_x
0464FE             0274*  get_start_pos:
0464FE 11 00 00 00 0275*  	ld de,0 ; initialize to 0,0 as a default
046502 DD 21 00 E0 0276*  	ld ix,cell_status ; ix points to the start of the map data
       B7          
046507 AF          0277*  	xor a ; start at cell 0
046508             0278*  @loop:
046508 F5          0279*  	push af ; save cell_id
046509 DD 7E 00    0280*  	ld a,(ix+map_type_status) ; a is the cell status bitmmask
04650C E6 08       0281*  	and cell_is_start ; testing whether the cell start bit is lit
04650E 28 06       0282*  	jr z,@not_start ; go to the next cell if not
046510 F1          0283*  	pop	af ; a is cell_id
046511 CD EF 64 04 0284*  	call cell_id_to_coords ; d = map_y, e = map_x
046515 C9          0285*  	ret
046516             0286*  @not_start:
046516 F1          0287*  	pop	af ; a is cell_id
046517 3C          0288*  	inc a ; bump cell id
046518 C8          0289*  	ret z ; if zero we've wrapped around so we return 0,0 in de and 0 in a as cell_id
046519 ED 32 04    0290*  	lea ix,ix+map_record_size ; otherwise bump pointer to next map record
04651C 18 EA       0291*  	jr @loop
04651E             0292*  
04651E             0293*  ; #### AUTO-GENERATED MAP DATA BELOW THIS LINE DO NOT EDIT ####
04651E             0294*  
04651E             0295*  floors:
04651E 21 65 04    0296*  	dl floor_00
046521             0297*  
046521             0298*  ; map room filename labels
046521             0299*  room_files:
046521             0300*  floor_00:
046521 27 65 04    0301*  	dl room_00_0
046524 39 65 04    0302*  	dl room_00_1
046527             0303*  
046527             0304*  ; map data filenames
046527 6D 61 70 73 0305*  room_00_0: db "maps/map_00_0.bin",0
       2F 6D 61 70 
       5F 30 30 5F 
       30 2E 62 69 
       6E 00       
046539 6D 61 70 73 0306*  room_00_1: db "maps/map_00_1.bin",0
       2F 6D 61 70 
       5F 30 30 5F 
       31 2E 62 69 
       6E 00       
04654B             0022   	include "src/asm/render.asm"
04654B             0001*  ; #### RENDERING SCRATCH VARIABLES ####
04654B             0002*  ; first three bytes of cell_status record in little-endian order
04654B             0003*  to_cell_status:
04654B             0004*  to_map_type_status: ds 1
04654C             0005*  to_img_idx: ds 1
04654D             0006*  to_obj_id: ds 1
04654E             0007*  ; fourth byte of cell_status record
04654E             0008*  to_sprite_id: ds 1
04654F             0009*  
04654F             0010*  to_poly_id: ds 1
046550             0011*  to_buffer_id: ds 3
046553             0012*  
046553             0013*  cur_cell_views: ds 3
046556             0014*  
046556             0015*  view_distance: equ 5 ; furthest player can see or be seen in map units
046556             0016*  
046556             0017*  ; render background as a prelude to rendering panels and sprites
046556             0018*  ; hl is the buffer id, bc and de are plot_x and plot_y
046556             0019*  render_background:
046556             0020*  ; back up everything
046556 C5          0021*      push bc
046557 D5          0022*      push de
046558 E5          0023*      push hl
046559             0024*  ; plot background
046559 AF          0025*      xor a ; color mode
04655A 0E 08       0026*      ld c,c_grey_dk ; color
04655C CD 3F A6 04 0027*      call vdu_gcol_fg
046560 01 00 00 00 0028*      ld bc,0 ; x0
046564 11 00 00 00 0029*      ld de,0 ; y0
046568 DD 21 3F 01 0030*      ld ix,319
       00          
04656D FD 21 50 00 0031*      ld iy,80
       00          
046572 CD 8C A9 04 0032*      call vdu_plot_rf
046576 AF          0033*      xor a ; color mode
046577 0E 07       0034*      ld c,c_grey ; color
046579 CD 3F A6 04 0035*      call vdu_gcol_fg
04657D 01 00 00 00 0036*      ld bc,0 ; x0
046581 11 50 00 00 0037*      ld de,80 ; y0
046585 DD 21 3F 01 0038*      ld ix,319
       00          
04658A FD 21 9F 00 0039*      ld iy,159
       00          
04658F CD 8C A9 04 0040*      call vdu_plot_rf
046593             0041*  ; plot the background
046593 E1          0042*      pop hl ; get back the buffer id
046594 CD 7E A7 04 0043*      call vdu_buff_select
046598 D1          0044*      pop de ; get back plot_y
046599 C1          0045*      pop bc ; get back plot_x
04659A CD 4F A9 04 0046*      call vdu_plot_bmp
04659E C9          0047*      ret
04659F             0048*  
04659F             0049*  ; render a 3D panel
04659F             0050*  ; inputs: to_poly_id set, to_buffer_id set
04659F             0051*  render_panel:
04659F             0052*  ; make the bitmap buffer active
04659F 2A 50 65 04 0053*      ld hl,(to_buffer_id)
0465A3 CD 7E A7 04 0054*      call vdu_buff_select
0465A7             0055*  ; get the coordinates of the panel
0465A7 DD 21 A7 67 0056*      ld ix,polys_lookup_plot ; pointer to polys lookup table
       04          
0465AC             0057*  ; get the panel's poly_id
0465AC 3A 4F 65 04 0058*      ld a,(to_poly_id)
0465B0             0059*  ; multiply a by 6 to get the offset
0465B0 47          0060*      ld b,a
0465B1 0E 06       0061*      ld c,6
0465B3 ED 4C       0062*      mlt bc
0465B5             0063*  ; add the offset to the lookup table
0465B5 DD 09       0064*      add ix,bc
0465B7             0065*  ; get the panel coordinates
0465B7 DD 07 00    0066*      ld bc,(ix) ; plot_x
0465BA DD 17 03    0067*      ld de,(ix+3) ; plot_y
0465BD             0068*  ; plot that mofo and go home
0465BD CD 4F A9 04 0069*      call vdu_plot_bmp
0465C1 C9          0070*      ret
0465C2             0071*  
0465C2             0072*  ; render a 3D sprite
0465C2             0073*  ; inputs: a is sprite_id, to_poly_id set, to_cell_status fields set
0465C2             0074*  ; (ix should also be pointed to cell_status record but we don't depend on it for the time being)
0465C2             0075*  render_sprite:
0465C2             0076*  ; look up sprite_obj in sprite table
0465C2 FD 21 00 FC 0077*      ld iy,sprite_table_base
       B7          
0465C7 47          0078*      ld b,a ; sprite id
0465C8 0E 10       0079*      ld c,sprite_record_size
0465CA ED 4C       0080*      mlt bc
0465CC FD 09       0081*      add iy,bc ; iy points to sprite record
0465CE FD 22 3E 9D 0082*      ld (sprite_table_pointer),iy
       04          
0465D3             0083*  ; get sprite imgs lookup
0465D3 FD 7E 01    0084*      ld a,(iy+sprite_obj) ; a is sprite_obj
0465D6 FD 21 98 6A 0085*      ld iy,sprite_imgs_lookup ; base address of sprite_imgs lookup table
       04          
0465DB 47          0086*      ld b,a
0465DC 0E 03       0087*      ld c,3 ; 3 bytes per record
0465DE ED 4C       0088*      mlt bc
0465E0 FD 09       0089*      add iy,bc ; iy points to the sprite's sprite_imgs_lookup record
0465E2 FD 37 00    0090*      ld iy,(iy) ; iy is the base address of the sprite's image defs lookup
0465E5             0091*  ; convert to_poly_id to sprite_poly
0465E5 21 6B 6A 04 0092*      ld hl,sprite_polys_lookup
0465E9 3A 4F 65 04 0093*      ld a,(to_poly_id)
0465ED 01 00 00 00 0094*      ld bc,0  ; make sure bcu and b are zero
0465F1 4F          0095*      ld c,a
0465F2 09          0096*      add hl,bc ; hl points to the sprite's poly id
0465F3             0097*  ; get the sprites image defs for the particular poly id
0465F3 7E          0098*      ld a,(hl)
0465F4 47          0099*      ld b,a
0465F5 0E 09       0100*      ld c,9  ; 9 bytes per record
0465F7 ED 4C       0101*      mlt bc
0465F9 FD 09       0102*      add iy,bc ; iy is the offset to the sprite's image def
0465FB             0103*  ; select buffer
0465FB FD 27 06    0104*      ld hl,(iy+6)
0465FE CD 7E A7 04 0105*      call vdu_buff_select
046602             0106*  ; plot sprite
046602 FD 07 00    0107*      ld bc,(iy+0) ; plot_x
046605 FD 17 03    0108*      ld de,(iy+3) ; plot_y
046608 CD 4F A9 04 0109*      call vdu_plot_bmp
04660C C9          0110*      ret
04660D             0111*  
04660D             0112*  ; render the object in a given cell and poly_id
04660D             0113*  ; inputs: to_poly_id set, d,e are the cell coords
04660D             0114*  render_cell:
04660D             0115*  ; get the cell to render's cell_status data and store it in scratch
04660D CD C7 63 04 0116*      call get_cell_from_coords ; ix=cell_status lut; a=obj_id, bc = cell_id
046611 DD 27 00    0117*      ld hl,(ix) ; l = to_map_type_status, h = to_img_idx, hlu = to_obj_id
046614 22 4B 65 04 0118*      ld (to_cell_status),hl
046618             0119*  ; get sprite_id from cell_status lut
046618 DD 7E 03    0120*      ld a,(ix+map_sprite_id)
04661B FE FF       0121*      cp 255 ; value if no sprite present
04661D C2 C2 65 04 0122*      jp nz,render_sprite
046621             0123*  ; get cell's render_type
046621 7D          0124*      ld a,l ; map_type_status
046622 E6 02       0125*      and 2 ; mask off everything but lowest two bits
046624 28 02       0126*      jr z,@cube ; render_type_cube is 0
046626 18 32       0127*      jr @nodraw ; placeholder for future implementation TODO
046628             0128*  @cube:
046628             0129*      ; get map_img_idx from cell_status lut
046628 3A 4C 65 04 0130*      ld a,(to_img_idx)
04662C FE FF       0131*      cp 255 ; value for cell with nothing to draw
04662E 28 2A       0132*      jr z,@nodraw
046630             0133*  ; prepare render_panel ; inputs: to_poly_id set, to_buffer_id set
046630 21 E2 68 04 0134*      ld hl,cube_img_idx_lookup
046634 47          0135*      ld b,a
046635 0E 03       0136*      ld c,3 ; three bytes per record
046637 ED 4C       0137*      mlt bc
046639 09          0138*      add hl,bc ; hl points to the cube's base buffer id
04663A ED 27       0139*      ld hl,(hl) ; hl is the base buffer id
04663C EB          0140*      ex de,hl ; stash the base buffer id in de for later
04663D 21 B5 68 04 0141*      ld hl,cube_poly_idx_lookup
046641 3A 4F 65 04 0142*      ld a,(to_poly_id)
046645 01 00 00 00 0143*      ld bc,0 ; make sure bcu is zero
046649 4F          0144*      ld c,a
04664A 09          0145*      add hl,bc ; hl is the buffer id index address
04664B 7E          0146*      ld a,(hl) ; a is the buffer id index value
04664C 21 00 00 00 0147*      ld hl,0 ; make sure hlu is zero
046650 6F          0148*      ld l,a ; hl is the buffer id index value
046651 19          0149*      add hl,de ; hl is the buffer id
046652 22 50 65 04 0150*      ld (to_buffer_id),hl
046656 C3 9F 65 04 0151*      jp render_panel
04665A             0152*  @nodraw:
04665A C9          0153*      ret
04665B             0154*  
04665B             0155*  ; render a full 3d scene
04665B             0156*  ; inputs: cur_x, cur_y, orientation set
04665B             0157*  ; outputs: pretty pictures
04665B             0158*  ; destroys: everything
04665B             0159*  render_scene:
04665B             0160*  ; clear the screen
04665B CD 56 65 04 0161*      call render_background
04665F             0162*  ; get current map position and camera orientation
04665F ED 5B 7A B0 0163*      ld de,(cur_x) ; d,e = cur_y,x
       04          
046664 CD C7 63 04 0164*      call get_cell_from_coords ; ix=cell_status lut; a=obj_id, bc = cell_id
046668             0165*  ; get cell_views address for this cell and orientation
046668 3A 79 B0 04 0166*      ld a,(orientation)
04666C 5F          0167*      ld e,a
04666D 16 06       0168*      ld d,6 ; 6 bytes per orientation
04666F ED 5C       0169*      mlt de ; de = orientation offset
046671 EB          0170*      ex de,hl ; hl = orientation offset
046672 06 18       0171*      ld b,24 ; 24 bytes per cell in cell_views lut
046674 ED 4C       0172*      mlt bc ; bc = offset from base address of cell_views lut
046676 09          0173*      add hl,bc ; hl = total offset from cell_views base address
046677 EB          0174*      ex de,hl ; becaue we can't add iy to hl
046678 FD 21 00 E4 0175*      ld iy,cell_views ; base address of cell_views lut
       B7          
04667D FD 19       0176*      add iy,de ; iy = cell_views address
04667F FD 22 53 65 0177*      ld (cur_cell_views),iy
       04          
046684             0178*  ; cycle through the cell views masks and render the appropriate objects
046684 01 00 46 28 0179*      ld bc,0x284600 ; bcu = jr z,nnn opcode, c = bit operand, b = displacement operand
046688 AF          0180*      xor a ; poly_id
046689 32 4F 65 04 0181*      ld (to_poly_id),a
04668D             0182*  @loop:
04668D ED 43 99 66 0183*      ld (@bit_iy+2),bc
       04          
046692 FD 2A 53 65 0184*      ld iy,(cur_cell_views)
       04          
046697             0185*  @bit_iy:
046697 FD CB 00 46 0186*      bit 0,(iy+0) ; the bit tested and offset will be self-modified through the loop
04669B 28 21       0187*      jr z,@next_poly ; the first byte of this instruction is 0x28, and will be re-written as such each loop
04669D             0188*  ; get_polys_deltas inputs: a is the orientation, c is the poly_id
04669D 3A 4F 65 04 0189*      ld a,(to_poly_id)
0466A1 4F          0190*      ld c,a ; poly_id
0466A2 3A 79 B0 04 0191*      ld a,(orientation)
0466A6 CD 74 67 04 0192*      call get_polys_deltas ; d,e = y,x deltas
0466AA 3A 7A B0 04 0193*      ld a,(cur_x)
0466AE 83          0194*      add a,e
0466AF 5F          0195*      ld e,a
0466B0 3A 7B B0 04 0196*      ld a,(cur_y)
0466B4 82          0197*      add a,d
0466B5 57          0198*      ld d,a
0466B6 3A 4F 65 04 0199*      ld a,(to_poly_id)
0466BA CD 0D 66 04 0200*      call render_cell ; d,e = to_render y,x coords, we don't need to worry about the modulo 16
0466BE             0201*  @next_poly:
0466BE ED 4B 99 66 0202*      ld bc,(@bit_iy+2)
       04          
0466C3 3A 4F 65 04 0203*      ld a,(to_poly_id)
0466C7 3C          0204*      inc a ; a is next poly_id
0466C8 32 4F 65 04 0205*      ld (to_poly_id),a
0466CC FE 2D       0206*      cp num_polys
0466CE 28 0D       0207*      jr z,@end
0466D0 3E 08       0208*      ld a,8
0466D2 80          0209*      add a,b
0466D3 47          0210*      ld b,a ; bit tested codes to 0x46 + b/8
0466D4 FE 86       0211*      cp 0x86 ; = 0x7E + 8 where 0x7E is the highest bit possible (7)
0466D6 20 B5       0212*      jr nz,@loop
0466D8 06 46       0213*      ld b,0x46
0466DA 0C          0214*      inc c ; iy address offset
0466DB 18 B0       0215*      jr @loop
0466DD             0216*  @end:
0466DD             0217*  ; draw the graphic portions of the ui
0466DD 21 01 20 00 0218*  	ld hl,BUF_UI_LOWER_PANEL
0466E1 CD 7E A7 04 0219*      call vdu_buff_select
0466E5 01 00 00 00 0220*  	ld bc,0 ; x
0466E9 11 A0 00 00 0221*  	ld de,160 ; y
0466ED CD 4F A9 04 0222*  	call vdu_plot_bmp
0466F1             0223*  
0466F1 2A 95 B0 04 0224*      ld hl,(player_weapon_ui_buffer_id_large)
0466F5 ED 5B AD B0 0225*      ld de,(player_weapon_animation_frame)
       04          
0466FA 19          0226*      add hl,de
0466FB CD 7E A7 04 0227*      call vdu_buff_select
0466FF 01 80 00 00 0228*      ld bc,128 ; x
046703 11 60 00 00 0229*      ld de,96 ; y
046707 CD 4F A9 04 0230*      call vdu_plot_bmp
04670B             0231*  
04670B 2A 92 B0 04 0232*      ld hl,(player_weapon_ui_buffer_id_small)
04670F CD 7E A7 04 0233*      call vdu_buff_select
046713 01 0A 01 00 0234*      ld bc,266 ; x
046717 11 B2 00 00 0235*      ld de,178 ; y
04671B CD 4F A9 04 0236*      call vdu_plot_bmp
04671F             0237*  
04671F             0238*  ; draw the text portions of the ui
04671F 0E 08       0239*      ld c,8 ; x
046721 06 03       0240*      ld b,3 ; y
046723 CD 52 A7 04 0241*      call vdu_move_cursor
046727 2A 4D B0 04 0242*      ld hl,(player_score)
04672B 11 62 B0 04 0243*      ld de,player_score_str
04672F CD 4E AD 04 0244*      call Num2String
046733 21 62 B0 04 0245*      ld hl,player_score_str
046737 CD E6 AC 04 0246*      call printString
04673B             0247*  
04673B 0E 16       0248*      ld c,22 ; x
04673D 06 03       0249*      ld b,3 ; y
04673F CD 52 A7 04 0250*      call vdu_move_cursor
046743 2A 50 B0 04 0251*      ld hl,(player_health)
046747 11 59 B0 04 0252*      ld de,player_health_str
04674B CD 4E AD 04 0253*      call Num2String
04674F 21 59 B0 04 0254*      ld hl,player_health_str
046753 CD E6 AC 04 0255*      call printString
046757             0256*  
046757 0E 1C       0257*      ld c,28 ; x
046759 06 03       0258*      ld b,3 ; y
04675B CD 52 A7 04 0259*      call vdu_move_cursor
04675F 2A B0 B0 04 0260*      ld hl,(player_ammo)
046763 11 B3 B0 04 0261*      ld de,player_ammo_str
046767 CD 4E AD 04 0262*      call Num2String
04676B 21 B3 B0 04 0263*      ld hl,player_ammo_str
04676F CD E6 AC 04 0264*      call printString
046773             0265*  
046773             0266*  ; all done
046773 C9          0267*      ret
046774             0268*  
046774             0269*  ; get the map coordinates deltas for a given orientation and poly_id
046774             0270*  ; inputs: a is the orientation, c is the poly_id
046774             0271*  ; returns: d,e are the y,x deltas, deu will be the next byte in the lookup table and should be ignored
046774             0272*  get_polys_deltas:
046774             0273*  ; get the base address of the orientation-specific deltas lookup table
046774 FE 00       0274*      cp 0
046776 28 11       0275*      jr z,@orientation_0
046778 FE 01       0276*      cp 1
04677A 28 13       0277*      jr z,@orientation_1
04677C FE 02       0278*      cp 2
04677E 28 15       0279*      jr z,@orientation_2
046780 FE 03       0280*      cp 3
046782 28 17       0281*      jr z,@orientation_3
046784             0282*  ; return zeros if not found
046784 11 00 00 00 0283*      ld de,0
046788 C9          0284*      ret
046789             0285*  @orientation_0: ; north
046789 21 03 69 04 0286*      ld hl,polys_map_deltas_0
04678D 18 10       0287*      jr @get_deltas
04678F             0288*  @orientation_1: ; east
04678F 21 5D 69 04 0289*      ld hl,polys_map_deltas_1
046793 18 0A       0290*      jr @get_deltas
046795             0291*  @orientation_2: ; south
046795 21 B7 69 04 0292*      ld hl,polys_map_deltas_2
046799 18 04       0293*      jr @get_deltas
04679B             0294*  @orientation_3: ; west
04679B 21 11 6A 04 0295*      ld hl,polys_map_deltas_3
04679F             0296*  @get_deltas:
04679F 06 02       0297*      ld b,2 ; 2 bytes per record
0467A1 ED 4C       0298*      mlt bc ; poly_id * 2
0467A3 09          0299*      add hl,bc ; hl points to the deltas
0467A4 ED 17       0300*      ld de,(hl) ;d,e = dy,dx
0467A6 C9          0301*      ret
0467A7             0023   	include "src/asm/polys.asm"
0467A7             0001*  num_polys: equ 45
0467A7             0002*  
0467A7             0003*  polys_lookup_plot:
0467A7             0004*  ;	   plot_x,  plot_y:
0467A7 00 00 00 3E 0005*  	dl 0x000000,0x00003E ; poly_id:0 00
       00 00       
0467AD 23 00 00 3E 0006*  	dl 0x000023,0x00003E ; poly_id:1 01
       00 00       
0467B3 47 00 00 3E 0007*  	dl 0x000047,0x00003E ; poly_id:2 02
       00 00       
0467B9 6A 00 00 3E 0008*  	dl 0x00006A,0x00003E ; poly_id:3 03
       00 00       
0467BF 8E 00 00 3E 0009*  	dl 0x00008E,0x00003E ; poly_id:4 04
       00 00       
0467C5 B1 00 00 3E 0010*  	dl 0x0000B1,0x00003E ; poly_id:5 05
       00 00       
0467CB D5 00 00 3E 0011*  	dl 0x0000D5,0x00003E ; poly_id:6 06
       00 00       
0467D1 F8 00 00 3E 0012*  	dl 0x0000F8,0x00003E ; poly_id:7 07
       00 00       
0467D7 1C 01 00 3E 0013*  	dl 0x00011C,0x00003E ; poly_id:8 08
       00 00       
0467DD 00 00 00 39 0014*  	dl 0x000000,0x000039 ; poly_id:9 09
       00 00       
0467E3 2E 00 00 39 0015*  	dl 0x00002E,0x000039 ; poly_id:10 0A
       00 00       
0467E9 5B 00 00 39 0016*  	dl 0x00005B,0x000039 ; poly_id:11 0B
       00 00       
0467EF 89 00 00 39 0017*  	dl 0x000089,0x000039 ; poly_id:12 0C
       00 00       
0467F5 B1 00 00 39 0018*  	dl 0x0000B1,0x000039 ; poly_id:13 0D
       00 00       
0467FB D5 00 00 39 0019*  	dl 0x0000D5,0x000039 ; poly_id:14 0E
       00 00       
046801 F8 00 00 39 0020*  	dl 0x0000F8,0x000039 ; poly_id:15 0F
       00 00       
046807 1C 01 00 39 0021*  	dl 0x00011C,0x000039 ; poly_id:16 10
       00 00       
04680D 00 00 00 39 0022*  	dl 0x000000,0x000039 ; poly_id:17 11
       00 00       
046813 2E 00 00 39 0023*  	dl 0x00002E,0x000039 ; poly_id:18 12
       00 00       
046819 5B 00 00 39 0024*  	dl 0x00005B,0x000039 ; poly_id:19 13
       00 00       
04681F 89 00 00 39 0025*  	dl 0x000089,0x000039 ; poly_id:20 14
       00 00       
046825 B6 00 00 39 0026*  	dl 0x0000B6,0x000039 ; poly_id:21 15
       00 00       
04682B E4 00 00 39 0027*  	dl 0x0000E4,0x000039 ; poly_id:22 16
       00 00       
046831 11 01 00 39 0028*  	dl 0x000111,0x000039 ; poly_id:23 17
       00 00       
046837 00 00 00 30 0029*  	dl 0x000000,0x000030 ; poly_id:24 18
       00 00       
04683D 3F 00 00 30 0030*  	dl 0x00003F,0x000030 ; poly_id:25 19
       00 00       
046843 80 00 00 30 0031*  	dl 0x000080,0x000030 ; poly_id:26 1A
       00 00       
046849 B6 00 00 30 0032*  	dl 0x0000B6,0x000030 ; poly_id:27 1B
       00 00       
04684F E4 00 00 30 0033*  	dl 0x0000E4,0x000030 ; poly_id:28 1C
       00 00       
046855 11 01 00 30 0034*  	dl 0x000111,0x000030 ; poly_id:29 1D
       00 00       
04685B 00 00 00 30 0035*  	dl 0x000000,0x000030 ; poly_id:30 1E
       00 00       
046861 3F 00 00 30 0036*  	dl 0x00003F,0x000030 ; poly_id:31 1F
       00 00       
046867 80 00 00 30 0037*  	dl 0x000080,0x000030 ; poly_id:32 20
       00 00       
04686D C0 00 00 30 0038*  	dl 0x0000C0,0x000030 ; poly_id:33 21
       00 00       
046873 00 01 00 30 0039*  	dl 0x000100,0x000030 ; poly_id:34 22
       00 00       
046879 00 00 00 1A 0040*  	dl 0x000000,0x00001A ; poly_id:35 23
       00 00       
04687F 6A 00 00 1A 0041*  	dl 0x00006A,0x00001A ; poly_id:36 24
       00 00       
046885 C0 00 00 1A 0042*  	dl 0x0000C0,0x00001A ; poly_id:37 25
       00 00       
04688B 00 01 00 1A 0043*  	dl 0x000100,0x00001A ; poly_id:38 26
       00 00       
046891 00 00 00 1A 0044*  	dl 0x000000,0x00001A ; poly_id:39 27
       00 00       
046897 6A 00 00 1A 0045*  	dl 0x00006A,0x00001A ; poly_id:40 28
       00 00       
04689D D5 00 00 1A 0046*  	dl 0x0000D5,0x00001A ; poly_id:41 29
       00 00       
0468A3 00 00 00 00 0047*  	dl 0x000000,0x000000 ; poly_id:42 2A
       00 00       
0468A9 D5 00 00 00 0048*  	dl 0x0000D5,0x000000 ; poly_id:43 2B
       00 00       
0468AF 00 00 00 00 0049*  	dl 0x000000,0x000000 ; poly_id:44 2C
       00 00       
0468B5             0050*  
0468B5             0051*  cube_poly_idx_lookup:
0468B5             0052*  ;	 img_idx,  poly_id
0468B5 00          0053*  	db 0 ; poly_id:0 0
0468B6 00          0054*  	db 0 ; poly_id:1 1
0468B7 00          0055*  	db 0 ; poly_id:2 2
0468B8 00          0056*  	db 0 ; poly_id:3 3
0468B9 00          0057*  	db 0 ; poly_id:4 4
0468BA 00          0058*  	db 0 ; poly_id:5 5
0468BB 00          0059*  	db 0 ; poly_id:6 6
0468BC 00          0060*  	db 0 ; poly_id:7 7
0468BD 00          0061*  	db 0 ; poly_id:8 8
0468BE 01          0062*  	db 1 ; poly_id:9 9
0468BF 02          0063*  	db 2 ; poly_id:10 10
0468C0 03          0064*  	db 3 ; poly_id:11 11
0468C1 04          0065*  	db 4 ; poly_id:12 12
0468C2 05          0066*  	db 5 ; poly_id:13 13
0468C3 06          0067*  	db 6 ; poly_id:14 14
0468C4 07          0068*  	db 7 ; poly_id:15 15
0468C5 08          0069*  	db 8 ; poly_id:16 16
0468C6 09          0070*  	db 9 ; poly_id:17 17
0468C7 09          0071*  	db 9 ; poly_id:18 18
0468C8 09          0072*  	db 9 ; poly_id:19 19
0468C9 09          0073*  	db 9 ; poly_id:20 20
0468CA 09          0074*  	db 9 ; poly_id:21 21
0468CB 09          0075*  	db 9 ; poly_id:22 22
0468CC 09          0076*  	db 9 ; poly_id:23 23
0468CD 0A          0077*  	db 10 ; poly_id:24 24
0468CE 0B          0078*  	db 11 ; poly_id:25 25
0468CF 0C          0079*  	db 12 ; poly_id:26 26
0468D0 0D          0080*  	db 13 ; poly_id:27 27
0468D1 0E          0081*  	db 14 ; poly_id:28 28
0468D2 0F          0082*  	db 15 ; poly_id:29 29
0468D3 10          0083*  	db 16 ; poly_id:30 30
0468D4 10          0084*  	db 16 ; poly_id:31 31
0468D5 10          0085*  	db 16 ; poly_id:32 32
0468D6 10          0086*  	db 16 ; poly_id:33 33
0468D7 10          0087*  	db 16 ; poly_id:34 34
0468D8 11          0088*  	db 17 ; poly_id:35 35
0468D9 12          0089*  	db 18 ; poly_id:36 36
0468DA 13          0090*  	db 19 ; poly_id:37 37
0468DB 14          0091*  	db 20 ; poly_id:38 38
0468DC 15          0092*  	db 21 ; poly_id:39 39
0468DD 15          0093*  	db 21 ; poly_id:40 40
0468DE 15          0094*  	db 21 ; poly_id:41 41
0468DF 16          0095*  	db 22 ; poly_id:42 42
0468E0 17          0096*  	db 23 ; poly_id:43 43
0468E1 18          0097*  	db 24 ; poly_id:44 44
0468E2             0098*  
0468E2             0099*  cube_img_idx_lookup:
0468E2             0100*  ;	 img_idx,  bank_id,  obj_id,  tile_name
0468E2 00 01 00    0101*  	dl BUF_10_004 ; idx:0 render_obj_id:10 LIGHT GREY WALL
0468E5 19 01 00    0102*  	dl BUF_11_004 ; idx:1 render_obj_id:11 JAIL CELL
0468E8 32 01 00    0103*  	dl BUF_12_004 ; idx:2 render_obj_id:12 STONE ARCH BIRD
0468EB 4B 01 00    0104*  	dl BUF_13_004 ; idx:3 render_obj_id:13 DARK GREY WALL
0468EE 64 01 00    0105*  	dl BUF_14_004 ; idx:4 render_obj_id:14 WOOD WALL
0468F1 7D 01 00    0106*  	dl BUF_15_004 ; idx:5 render_obj_id:15 HANGING FLAG
0468F4 96 01 00    0107*  	dl BUF_16_004 ; idx:6 render_obj_id:16 WOOD EAGLE
0468F7 AF 01 00    0108*  	dl BUF_17_004 ; idx:7 render_obj_id:17 BLUE WALL
0468FA C8 01 00    0109*  	dl BUF_57_004 ; idx:8 render_obj_id:57 REGULAR DOOR
0468FD E1 01 00    0110*  	dl BUF_58_004 ; idx:9 render_obj_id:58 ELEVATOR SWITCH
046900 FA 01 00    0111*  	dl BUF_59_004 ; idx:10 render_obj_id:59 ELEVATOR DOOR
046903             0112*  
046903             0113*  ; map_delta_x,  map_delta_y
046903             0114*  polys_map_deltas_0: ; north orientation
046903 FC FB       0115*  	db 0xFC,0xFB ; poly_id:0 00
046905 FD FB       0116*  	db 0xFD,0xFB ; poly_id:1 01
046907 FE FB       0117*  	db 0xFE,0xFB ; poly_id:2 02
046909 FF FB       0118*  	db 0xFF,0xFB ; poly_id:3 03
04690B 00 FB       0119*  	db 0x00,0xFB ; poly_id:4 04
04690D 01 FB       0120*  	db 0x01,0xFB ; poly_id:5 05
04690F 02 FB       0121*  	db 0x02,0xFB ; poly_id:6 06
046911 03 FB       0122*  	db 0x03,0xFB ; poly_id:7 07
046913 04 FB       0123*  	db 0x04,0xFB ; poly_id:8 08
046915 FC FC       0124*  	db 0xFC,0xFC ; poly_id:9 09
046917 FD FC       0125*  	db 0xFD,0xFC ; poly_id:10 0A
046919 FE FC       0126*  	db 0xFE,0xFC ; poly_id:11 0B
04691B FF FC       0127*  	db 0xFF,0xFC ; poly_id:12 0C
04691D 01 FC       0128*  	db 0x01,0xFC ; poly_id:13 0D
04691F 02 FC       0129*  	db 0x02,0xFC ; poly_id:14 0E
046921 03 FC       0130*  	db 0x03,0xFC ; poly_id:15 0F
046923 04 FC       0131*  	db 0x04,0xFC ; poly_id:16 10
046925 FD FC       0132*  	db 0xFD,0xFC ; poly_id:17 11
046927 FE FC       0133*  	db 0xFE,0xFC ; poly_id:18 12
046929 FF FC       0134*  	db 0xFF,0xFC ; poly_id:19 13
04692B 00 FC       0135*  	db 0x00,0xFC ; poly_id:20 14
04692D 01 FC       0136*  	db 0x01,0xFC ; poly_id:21 15
04692F 02 FC       0137*  	db 0x02,0xFC ; poly_id:22 16
046931 03 FC       0138*  	db 0x03,0xFC ; poly_id:23 17
046933 FD FD       0139*  	db 0xFD,0xFD ; poly_id:24 18
046935 FE FD       0140*  	db 0xFE,0xFD ; poly_id:25 19
046937 FF FD       0141*  	db 0xFF,0xFD ; poly_id:26 1A
046939 01 FD       0142*  	db 0x01,0xFD ; poly_id:27 1B
04693B 02 FD       0143*  	db 0x02,0xFD ; poly_id:28 1C
04693D 03 FD       0144*  	db 0x03,0xFD ; poly_id:29 1D
04693F FE FD       0145*  	db 0xFE,0xFD ; poly_id:30 1E
046941 FF FD       0146*  	db 0xFF,0xFD ; poly_id:31 1F
046943 00 FD       0147*  	db 0x00,0xFD ; poly_id:32 20
046945 01 FD       0148*  	db 0x01,0xFD ; poly_id:33 21
046947 02 FD       0149*  	db 0x02,0xFD ; poly_id:34 22
046949 FE FE       0150*  	db 0xFE,0xFE ; poly_id:35 23
04694B FF FE       0151*  	db 0xFF,0xFE ; poly_id:36 24
04694D 01 FE       0152*  	db 0x01,0xFE ; poly_id:37 25
04694F 02 FE       0153*  	db 0x02,0xFE ; poly_id:38 26
046951 FF FE       0154*  	db 0xFF,0xFE ; poly_id:39 27
046953 00 FE       0155*  	db 0x00,0xFE ; poly_id:40 28
046955 01 FE       0156*  	db 0x01,0xFE ; poly_id:41 29
046957 FF FF       0157*  	db 0xFF,0xFF ; poly_id:42 2A
046959 01 FF       0158*  	db 0x01,0xFF ; poly_id:43 2B
04695B 00 FF       0159*  	db 0x00,0xFF ; poly_id:44 2C
04695D             0160*  
04695D             0161*  polys_map_deltas_1: ; east orientation
04695D 05 FC       0162*  	db 0x05,0xFC ; poly_id:0 00
04695F 05 FD       0163*  	db 0x05,0xFD ; poly_id:1 01
046961 05 FE       0164*  	db 0x05,0xFE ; poly_id:2 02
046963 05 FF       0165*  	db 0x05,0xFF ; poly_id:3 03
046965 05 00       0166*  	db 0x05,0x00 ; poly_id:4 04
046967 05 01       0167*  	db 0x05,0x01 ; poly_id:5 05
046969 05 02       0168*  	db 0x05,0x02 ; poly_id:6 06
04696B 05 03       0169*  	db 0x05,0x03 ; poly_id:7 07
04696D 05 04       0170*  	db 0x05,0x04 ; poly_id:8 08
04696F 04 FC       0171*  	db 0x04,0xFC ; poly_id:9 09
046971 04 FD       0172*  	db 0x04,0xFD ; poly_id:10 0A
046973 04 FE       0173*  	db 0x04,0xFE ; poly_id:11 0B
046975 04 FF       0174*  	db 0x04,0xFF ; poly_id:12 0C
046977 04 01       0175*  	db 0x04,0x01 ; poly_id:13 0D
046979 04 02       0176*  	db 0x04,0x02 ; poly_id:14 0E
04697B 04 03       0177*  	db 0x04,0x03 ; poly_id:15 0F
04697D 04 04       0178*  	db 0x04,0x04 ; poly_id:16 10
04697F 04 FD       0179*  	db 0x04,0xFD ; poly_id:17 11
046981 04 FE       0180*  	db 0x04,0xFE ; poly_id:18 12
046983 04 FF       0181*  	db 0x04,0xFF ; poly_id:19 13
046985 04 00       0182*  	db 0x04,0x00 ; poly_id:20 14
046987 04 01       0183*  	db 0x04,0x01 ; poly_id:21 15
046989 04 02       0184*  	db 0x04,0x02 ; poly_id:22 16
04698B 04 03       0185*  	db 0x04,0x03 ; poly_id:23 17
04698D 03 FD       0186*  	db 0x03,0xFD ; poly_id:24 18
04698F 03 FE       0187*  	db 0x03,0xFE ; poly_id:25 19
046991 03 FF       0188*  	db 0x03,0xFF ; poly_id:26 1A
046993 03 01       0189*  	db 0x03,0x01 ; poly_id:27 1B
046995 03 02       0190*  	db 0x03,0x02 ; poly_id:28 1C
046997 03 03       0191*  	db 0x03,0x03 ; poly_id:29 1D
046999 03 FE       0192*  	db 0x03,0xFE ; poly_id:30 1E
04699B 03 FF       0193*  	db 0x03,0xFF ; poly_id:31 1F
04699D 03 00       0194*  	db 0x03,0x00 ; poly_id:32 20
04699F 03 01       0195*  	db 0x03,0x01 ; poly_id:33 21
0469A1 03 02       0196*  	db 0x03,0x02 ; poly_id:34 22
0469A3 02 FE       0197*  	db 0x02,0xFE ; poly_id:35 23
0469A5 02 FF       0198*  	db 0x02,0xFF ; poly_id:36 24
0469A7 02 01       0199*  	db 0x02,0x01 ; poly_id:37 25
0469A9 02 02       0200*  	db 0x02,0x02 ; poly_id:38 26
0469AB 02 FF       0201*  	db 0x02,0xFF ; poly_id:39 27
0469AD 02 00       0202*  	db 0x02,0x00 ; poly_id:40 28
0469AF 02 01       0203*  	db 0x02,0x01 ; poly_id:41 29
0469B1 01 FF       0204*  	db 0x01,0xFF ; poly_id:42 2A
0469B3 01 01       0205*  	db 0x01,0x01 ; poly_id:43 2B
0469B5 01 00       0206*  	db 0x01,0x00 ; poly_id:44 2C
0469B7             0207*  
0469B7             0208*  polys_map_deltas_2: ; south orientation
0469B7 04 05       0209*  	db 0x04,0x05 ; poly_id:0 00
0469B9 03 05       0210*  	db 0x03,0x05 ; poly_id:1 01
0469BB 02 05       0211*  	db 0x02,0x05 ; poly_id:2 02
0469BD 01 05       0212*  	db 0x01,0x05 ; poly_id:3 03
0469BF 00 05       0213*  	db 0x00,0x05 ; poly_id:4 04
0469C1 FF 05       0214*  	db 0xFF,0x05 ; poly_id:5 05
0469C3 FE 05       0215*  	db 0xFE,0x05 ; poly_id:6 06
0469C5 FD 05       0216*  	db 0xFD,0x05 ; poly_id:7 07
0469C7 FC 05       0217*  	db 0xFC,0x05 ; poly_id:8 08
0469C9 04 04       0218*  	db 0x04,0x04 ; poly_id:9 09
0469CB 03 04       0219*  	db 0x03,0x04 ; poly_id:10 0A
0469CD 02 04       0220*  	db 0x02,0x04 ; poly_id:11 0B
0469CF 01 04       0221*  	db 0x01,0x04 ; poly_id:12 0C
0469D1 FF 04       0222*  	db 0xFF,0x04 ; poly_id:13 0D
0469D3 FE 04       0223*  	db 0xFE,0x04 ; poly_id:14 0E
0469D5 FD 04       0224*  	db 0xFD,0x04 ; poly_id:15 0F
0469D7 FC 04       0225*  	db 0xFC,0x04 ; poly_id:16 10
0469D9 03 04       0226*  	db 0x03,0x04 ; poly_id:17 11
0469DB 02 04       0227*  	db 0x02,0x04 ; poly_id:18 12
0469DD 01 04       0228*  	db 0x01,0x04 ; poly_id:19 13
0469DF 00 04       0229*  	db 0x00,0x04 ; poly_id:20 14
0469E1 FF 04       0230*  	db 0xFF,0x04 ; poly_id:21 15
0469E3 FE 04       0231*  	db 0xFE,0x04 ; poly_id:22 16
0469E5 FD 04       0232*  	db 0xFD,0x04 ; poly_id:23 17
0469E7 03 03       0233*  	db 0x03,0x03 ; poly_id:24 18
0469E9 02 03       0234*  	db 0x02,0x03 ; poly_id:25 19
0469EB 01 03       0235*  	db 0x01,0x03 ; poly_id:26 1A
0469ED FF 03       0236*  	db 0xFF,0x03 ; poly_id:27 1B
0469EF FE 03       0237*  	db 0xFE,0x03 ; poly_id:28 1C
0469F1 FD 03       0238*  	db 0xFD,0x03 ; poly_id:29 1D
0469F3 02 03       0239*  	db 0x02,0x03 ; poly_id:30 1E
0469F5 01 03       0240*  	db 0x01,0x03 ; poly_id:31 1F
0469F7 00 03       0241*  	db 0x00,0x03 ; poly_id:32 20
0469F9 FF 03       0242*  	db 0xFF,0x03 ; poly_id:33 21
0469FB FE 03       0243*  	db 0xFE,0x03 ; poly_id:34 22
0469FD 02 02       0244*  	db 0x02,0x02 ; poly_id:35 23
0469FF 01 02       0245*  	db 0x01,0x02 ; poly_id:36 24
046A01 FF 02       0246*  	db 0xFF,0x02 ; poly_id:37 25
046A03 FE 02       0247*  	db 0xFE,0x02 ; poly_id:38 26
046A05 01 02       0248*  	db 0x01,0x02 ; poly_id:39 27
046A07 00 02       0249*  	db 0x00,0x02 ; poly_id:40 28
046A09 FF 02       0250*  	db 0xFF,0x02 ; poly_id:41 29
046A0B 01 01       0251*  	db 0x01,0x01 ; poly_id:42 2A
046A0D FF 01       0252*  	db 0xFF,0x01 ; poly_id:43 2B
046A0F 00 01       0253*  	db 0x00,0x01 ; poly_id:44 2C
046A11             0254*  
046A11             0255*  polys_map_deltas_3: ; west orientation
046A11 FB 04       0256*  	db 0xFB,0x04 ; poly_id:0 00
046A13 FB 03       0257*  	db 0xFB,0x03 ; poly_id:1 01
046A15 FB 02       0258*  	db 0xFB,0x02 ; poly_id:2 02
046A17 FB 01       0259*  	db 0xFB,0x01 ; poly_id:3 03
046A19 FB 00       0260*  	db 0xFB,0x00 ; poly_id:4 04
046A1B FB FF       0261*  	db 0xFB,0xFF ; poly_id:5 05
046A1D FB FE       0262*  	db 0xFB,0xFE ; poly_id:6 06
046A1F FB FD       0263*  	db 0xFB,0xFD ; poly_id:7 07
046A21 FB FC       0264*  	db 0xFB,0xFC ; poly_id:8 08
046A23 FC 04       0265*  	db 0xFC,0x04 ; poly_id:9 09
046A25 FC 03       0266*  	db 0xFC,0x03 ; poly_id:10 0A
046A27 FC 02       0267*  	db 0xFC,0x02 ; poly_id:11 0B
046A29 FC 01       0268*  	db 0xFC,0x01 ; poly_id:12 0C
046A2B FC FF       0269*  	db 0xFC,0xFF ; poly_id:13 0D
046A2D FC FE       0270*  	db 0xFC,0xFE ; poly_id:14 0E
046A2F FC FD       0271*  	db 0xFC,0xFD ; poly_id:15 0F
046A31 FC FC       0272*  	db 0xFC,0xFC ; poly_id:16 10
046A33 FC 03       0273*  	db 0xFC,0x03 ; poly_id:17 11
046A35 FC 02       0274*  	db 0xFC,0x02 ; poly_id:18 12
046A37 FC 01       0275*  	db 0xFC,0x01 ; poly_id:19 13
046A39 FC 00       0276*  	db 0xFC,0x00 ; poly_id:20 14
046A3B FC FF       0277*  	db 0xFC,0xFF ; poly_id:21 15
046A3D FC FE       0278*  	db 0xFC,0xFE ; poly_id:22 16
046A3F FC FD       0279*  	db 0xFC,0xFD ; poly_id:23 17
046A41 FD 03       0280*  	db 0xFD,0x03 ; poly_id:24 18
046A43 FD 02       0281*  	db 0xFD,0x02 ; poly_id:25 19
046A45 FD 01       0282*  	db 0xFD,0x01 ; poly_id:26 1A
046A47 FD FF       0283*  	db 0xFD,0xFF ; poly_id:27 1B
046A49 FD FE       0284*  	db 0xFD,0xFE ; poly_id:28 1C
046A4B FD FD       0285*  	db 0xFD,0xFD ; poly_id:29 1D
046A4D FD 02       0286*  	db 0xFD,0x02 ; poly_id:30 1E
046A4F FD 01       0287*  	db 0xFD,0x01 ; poly_id:31 1F
046A51 FD 00       0288*  	db 0xFD,0x00 ; poly_id:32 20
046A53 FD FF       0289*  	db 0xFD,0xFF ; poly_id:33 21
046A55 FD FE       0290*  	db 0xFD,0xFE ; poly_id:34 22
046A57 FE 02       0291*  	db 0xFE,0x02 ; poly_id:35 23
046A59 FE 01       0292*  	db 0xFE,0x01 ; poly_id:36 24
046A5B FE FF       0293*  	db 0xFE,0xFF ; poly_id:37 25
046A5D FE FE       0294*  	db 0xFE,0xFE ; poly_id:38 26
046A5F FE 01       0295*  	db 0xFE,0x01 ; poly_id:39 27
046A61 FE 00       0296*  	db 0xFE,0x00 ; poly_id:40 28
046A63 FE FF       0297*  	db 0xFE,0xFF ; poly_id:41 29
046A65 FF 01       0298*  	db 0xFF,0x01 ; poly_id:42 2A
046A67 FF FF       0299*  	db 0xFF,0xFF ; poly_id:43 2B
046A69 FF 00       0300*  	db 0xFF,0x00 ; poly_id:44 2C
046A6B             0301*  
046A6B             0302*  num_sprite_polys: equ 25
046A6B             0303*  
046A6B             0304*  sprite_polys_lookup:
046A6B             0305*  ;south_id 	; poly_id
046A6B 00          0306*  	db 0	; 0
046A6C 01          0307*  	db 1	; 1
046A6D 02          0308*  	db 2	; 2
046A6E 03          0309*  	db 3	; 3
046A6F 04          0310*  	db 4	; 4
046A70 05          0311*  	db 5	; 5
046A71 06          0312*  	db 6	; 6
046A72 07          0313*  	db 7	; 7
046A73 08          0314*  	db 8	; 8
046A74 FF          0315*  	db 255	; 9
046A75 FF          0316*  	db 255	; 10
046A76 FF          0317*  	db 255	; 11
046A77 FF          0318*  	db 255	; 12
046A78 FF          0319*  	db 255	; 13
046A79 FF          0320*  	db 255	; 14
046A7A FF          0321*  	db 255	; 15
046A7B FF          0322*  	db 255	; 16
046A7C 09          0323*  	db 9	; 17
046A7D 0A          0324*  	db 10	; 18
046A7E 0B          0325*  	db 11	; 19
046A7F 0C          0326*  	db 12	; 20
046A80 0D          0327*  	db 13	; 21
046A81 0E          0328*  	db 14	; 22
046A82 0F          0329*  	db 15	; 23
046A83 FF          0330*  	db 255	; 24
046A84 FF          0331*  	db 255	; 25
046A85 FF          0332*  	db 255	; 26
046A86 FF          0333*  	db 255	; 27
046A87 FF          0334*  	db 255	; 28
046A88 FF          0335*  	db 255	; 29
046A89 10          0336*  	db 16	; 30
046A8A 11          0337*  	db 17	; 31
046A8B 12          0338*  	db 18	; 32
046A8C 13          0339*  	db 19	; 33
046A8D 14          0340*  	db 20	; 34
046A8E FF          0341*  	db 255	; 35
046A8F FF          0342*  	db 255	; 36
046A90 FF          0343*  	db 255	; 37
046A91 FF          0344*  	db 255	; 38
046A92 15          0345*  	db 21	; 39
046A93 16          0346*  	db 22	; 40
046A94 17          0347*  	db 23	; 41
046A95 FF          0348*  	db 255	; 42
046A96 FF          0349*  	db 255	; 43
046A97 18          0350*  	db 24	; 44
046A98             0351*  
046A98             0352*  sprite_imgs_lookup:
046A98             0353*  ;	 sprite_obj; render_obj_id
046A98 CE 6A 04    0354*  	dl sprite_obj_000 ; render_obj_id:20
046A9B AF 6B 04    0355*  	dl sprite_obj_001 ; render_obj_id:21
046A9E 90 6C 04    0356*  	dl sprite_obj_002 ; render_obj_id:22
046AA1 71 6D 04    0357*  	dl sprite_obj_003 ; render_obj_id:23
046AA4 52 6E 04    0358*  	dl sprite_obj_004 ; render_obj_id:24
046AA7 33 6F 04    0359*  	dl sprite_obj_005 ; render_obj_id:40
046AAA 14 70 04    0360*  	dl sprite_obj_006 ; render_obj_id:41
046AAD F5 70 04    0361*  	dl sprite_obj_007 ; render_obj_id:42
046AB0 D6 71 04    0362*  	dl sprite_obj_008 ; render_obj_id:43
046AB3 B7 72 04    0363*  	dl sprite_obj_009 ; render_obj_id:44
046AB6 98 73 04    0364*  	dl sprite_obj_010 ; render_obj_id:45
046AB9 79 74 04    0365*  	dl sprite_obj_011 ; render_obj_id:46
046ABC 5A 75 04    0366*  	dl sprite_obj_012 ; render_obj_id:47
046ABF 3B 76 04    0367*  	dl sprite_obj_013 ; render_obj_id:48
046AC2 1C 77 04    0368*  	dl sprite_obj_014 ; render_obj_id:49
046AC5 FD 77 04    0369*  	dl sprite_obj_015 ; render_obj_id:50
046AC8 DE 78 04    0370*  	dl sprite_obj_016 ; render_obj_id:51
046ACB BF 79 04    0371*  	dl sprite_obj_017 ; render_obj_id:52
046ACE             0372*  ;	 plot_x,  plot_y, buffer_label
046ACE             0373*  
046ACE             0374*  ; render_obj_id:20
046ACE             0375*  sprite_obj_000:
046ACE 09 00 00 4E 0376*  	dl 0x000009,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046AD7 2C 00 00 4E 0377*  	dl 0x00002C,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046AE0 50 00 00 4E 0378*  	dl 0x000050,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046AE9 73 00 00 4E 0379*  	dl 0x000073,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046AF2 97 00 00 4E 0380*  	dl 0x000097,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046AFB BA 00 00 4E 0381*  	dl 0x0000BA,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046B04 DE 00 00 4E 0382*  	dl 0x0000DE,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046B0D 01 01 00 4E 0383*  	dl 0x000101,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046B16 25 01 00 4E 0384*  	dl 0x000125,0x00004E,BUF_20_004
       00 00 13 02 
       00          
046B1F 0B 00 00 4E 0385*  	dl 0x00000B,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B28 39 00 00 4E 0386*  	dl 0x000039,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B31 66 00 00 4E 0387*  	dl 0x000066,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B3A 94 00 00 4E 0388*  	dl 0x000094,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B43 C1 00 00 4E 0389*  	dl 0x0000C1,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B4C EF 00 00 4E 0390*  	dl 0x0000EF,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B55 1C 01 00 4E 0391*  	dl 0x00011C,0x00004E,BUF_20_020
       00 00 14 02 
       00          
046B5E 11 00 00 4D 0392*  	dl 0x000011,0x00004D,BUF_20_032
       00 00 15 02 
       00          
046B67 50 00 00 4D 0393*  	dl 0x000050,0x00004D,BUF_20_032
       00 00 15 02 
       00          
046B70 91 00 00 4D 0394*  	dl 0x000091,0x00004D,BUF_20_032
       00 00 15 02 
       00          
046B79 D1 00 00 4D 0395*  	dl 0x0000D1,0x00004D,BUF_20_032
       00 00 15 02 
       00          
046B82 11 01 00 4D 0396*  	dl 0x000111,0x00004D,BUF_20_032
       00 00 15 02 
       00          
046B8B 1B 00 00 4C 0397*  	dl 0x00001B,0x00004C,BUF_20_040
       00 00 16 02 
       00          
046B94 85 00 00 4C 0398*  	dl 0x000085,0x00004C,BUF_20_040
       00 00 16 02 
       00          
046B9D F0 00 00 4C 0399*  	dl 0x0000F0,0x00004C,BUF_20_040
       00 00 16 02 
       00          
046BA6 6B 00 00 44 0400*  	dl 0x00006B,0x000044,BUF_20_044
       00 00 17 02 
       00          
046BAF             0401*  
046BAF             0402*  ; render_obj_id:21
046BAF             0403*  sprite_obj_001:
046BAF 0D 00 00 55 0404*  	dl 0x00000D,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BB8 30 00 00 55 0405*  	dl 0x000030,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BC1 54 00 00 55 0406*  	dl 0x000054,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BCA 77 00 00 55 0407*  	dl 0x000077,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BD3 9B 00 00 55 0408*  	dl 0x00009B,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BDC BE 00 00 55 0409*  	dl 0x0000BE,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BE5 E2 00 00 55 0410*  	dl 0x0000E2,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BEE 05 01 00 55 0411*  	dl 0x000105,0x000055,BUF_21_004
       00 00 18 02 
       00          
046BF7 29 01 00 55 0412*  	dl 0x000129,0x000055,BUF_21_004
       00 00 18 02 
       00          
046C00 10 00 00 57 0413*  	dl 0x000010,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C09 3E 00 00 57 0414*  	dl 0x00003E,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C12 6B 00 00 57 0415*  	dl 0x00006B,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C1B 99 00 00 57 0416*  	dl 0x000099,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C24 C6 00 00 57 0417*  	dl 0x0000C6,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C2D F4 00 00 57 0418*  	dl 0x0000F4,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C36 21 01 00 57 0419*  	dl 0x000121,0x000057,BUF_21_020
       00 00 19 02 
       00          
046C3F 16 00 00 5A 0420*  	dl 0x000016,0x00005A,BUF_21_032
       00 00 1A 02 
       00          
046C48 55 00 00 5A 0421*  	dl 0x000055,0x00005A,BUF_21_032
       00 00 1A 02 
       00          
046C51 96 00 00 5A 0422*  	dl 0x000096,0x00005A,BUF_21_032
       00 00 1A 02 
       00          
046C5A D6 00 00 5A 0423*  	dl 0x0000D6,0x00005A,BUF_21_032
       00 00 1A 02 
       00          
046C63 16 01 00 5A 0424*  	dl 0x000116,0x00005A,BUF_21_032
       00 00 1A 02 
       00          
046C6C 26 00 00 60 0425*  	dl 0x000026,0x000060,BUF_21_040
       00 00 1B 02 
       00          
046C75 90 00 00 60 0426*  	dl 0x000090,0x000060,BUF_21_040
       00 00 1B 02 
       00          
046C7E FB 00 00 60 0427*  	dl 0x0000FB,0x000060,BUF_21_040
       00 00 1B 02 
       00          
046C87 6E 00 00 82 0428*  	dl 0x00006E,0x000082,BUF_21_044
       00 00 1C 02 
       00          
046C90             0429*  
046C90             0430*  ; render_obj_id:22
046C90             0431*  sprite_obj_002:
046C90 09 00 00 55 0432*  	dl 0x000009,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046C99 2C 00 00 55 0433*  	dl 0x00002C,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CA2 50 00 00 55 0434*  	dl 0x000050,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CAB 73 00 00 55 0435*  	dl 0x000073,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CB4 97 00 00 55 0436*  	dl 0x000097,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CBD BA 00 00 55 0437*  	dl 0x0000BA,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CC6 DE 00 00 55 0438*  	dl 0x0000DE,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CCF 01 01 00 55 0439*  	dl 0x000101,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CD8 25 01 00 55 0440*  	dl 0x000125,0x000055,BUF_22_004
       00 00 1D 02 
       00          
046CE1 0B 00 00 57 0441*  	dl 0x00000B,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046CEA 39 00 00 57 0442*  	dl 0x000039,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046CF3 66 00 00 57 0443*  	dl 0x000066,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046CFC 94 00 00 57 0444*  	dl 0x000094,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046D05 C1 00 00 57 0445*  	dl 0x0000C1,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046D0E EF 00 00 57 0446*  	dl 0x0000EF,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046D17 1C 01 00 57 0447*  	dl 0x00011C,0x000057,BUF_22_020
       00 00 1E 02 
       00          
046D20 10 00 00 5A 0448*  	dl 0x000010,0x00005A,BUF_22_032
       00 00 1F 02 
       00          
046D29 4F 00 00 5A 0449*  	dl 0x00004F,0x00005A,BUF_22_032
       00 00 1F 02 
       00          
046D32 90 00 00 5A 0450*  	dl 0x000090,0x00005A,BUF_22_032
       00 00 1F 02 
       00          
046D3B D0 00 00 5A 0451*  	dl 0x0000D0,0x00005A,BUF_22_032
       00 00 1F 02 
       00          
046D44 10 01 00 5A 0452*  	dl 0x000110,0x00005A,BUF_22_032
       00 00 1F 02 
       00          
046D4D 1B 00 00 60 0453*  	dl 0x00001B,0x000060,BUF_22_040
       00 00 20 02 
       00          
046D56 85 00 00 60 0454*  	dl 0x000085,0x000060,BUF_22_040
       00 00 20 02 
       00          
046D5F F0 00 00 60 0455*  	dl 0x0000F0,0x000060,BUF_22_040
       00 00 20 02 
       00          
046D68 50 00 00 82 0456*  	dl 0x000050,0x000082,BUF_22_044
       00 00 21 02 
       00          
046D71             0457*  
046D71             0458*  ; render_obj_id:23
046D71             0459*  sprite_obj_003:
046D71 0C 00 00 3E 0460*  	dl 0x00000C,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046D7A 2F 00 00 3E 0461*  	dl 0x00002F,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046D83 53 00 00 3E 0462*  	dl 0x000053,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046D8C 76 00 00 3E 0463*  	dl 0x000076,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046D95 9A 00 00 3E 0464*  	dl 0x00009A,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046D9E BD 00 00 3E 0465*  	dl 0x0000BD,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046DA7 E1 00 00 3E 0466*  	dl 0x0000E1,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046DB0 04 01 00 3E 0467*  	dl 0x000104,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046DB9 28 01 00 3E 0468*  	dl 0x000128,0x00003E,BUF_23_004
       00 00 22 02 
       00          
046DC2 0F 00 00 39 0469*  	dl 0x00000F,0x000039,BUF_23_020
       00 00 23 02 
       00          
046DCB 3D 00 00 39 0470*  	dl 0x00003D,0x000039,BUF_23_020
       00 00 23 02 
       00          
046DD4 6A 00 00 39 0471*  	dl 0x00006A,0x000039,BUF_23_020
       00 00 23 02 
       00          
046DDD 98 00 00 39 0472*  	dl 0x000098,0x000039,BUF_23_020
       00 00 23 02 
       00          
046DE6 C5 00 00 39 0473*  	dl 0x0000C5,0x000039,BUF_23_020
       00 00 23 02 
       00          
046DEF F3 00 00 39 0474*  	dl 0x0000F3,0x000039,BUF_23_020
       00 00 23 02 
       00          
046DF8 20 01 00 39 0475*  	dl 0x000120,0x000039,BUF_23_020
       00 00 23 02 
       00          
046E01 16 00 00 30 0476*  	dl 0x000016,0x000030,BUF_23_032
       00 00 24 02 
       00          
046E0A 55 00 00 30 0477*  	dl 0x000055,0x000030,BUF_23_032
       00 00 24 02 
       00          
046E13 96 00 00 30 0478*  	dl 0x000096,0x000030,BUF_23_032
       00 00 24 02 
       00          
046E1C D6 00 00 30 0479*  	dl 0x0000D6,0x000030,BUF_23_032
       00 00 24 02 
       00          
046E25 16 01 00 30 0480*  	dl 0x000116,0x000030,BUF_23_032
       00 00 24 02 
       00          
046E2E 24 00 00 1A 0481*  	dl 0x000024,0x00001A,BUF_23_040
       00 00 25 02 
       00          
046E37 8E 00 00 1A 0482*  	dl 0x00008E,0x00001A,BUF_23_040
       00 00 25 02 
       00          
046E40 F9 00 00 1A 0483*  	dl 0x0000F9,0x00001A,BUF_23_040
       00 00 25 02 
       00          
046E49 09 01 00 83 0484*  	dl 0x000109,0x000083,BUF_23_044
       00 00 26 02 
       00          
046E52             0485*  
046E52             0486*  ; render_obj_id:24
046E52             0487*  sprite_obj_004:
046E52 0D 00 00 55 0488*  	dl 0x00000D,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E5B 30 00 00 55 0489*  	dl 0x000030,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E64 54 00 00 55 0490*  	dl 0x000054,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E6D 77 00 00 55 0491*  	dl 0x000077,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E76 9B 00 00 55 0492*  	dl 0x00009B,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E7F BE 00 00 55 0493*  	dl 0x0000BE,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E88 E2 00 00 55 0494*  	dl 0x0000E2,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E91 05 01 00 55 0495*  	dl 0x000105,0x000055,BUF_24_004
       00 00 27 02 
       00          
046E9A 29 01 00 55 0496*  	dl 0x000129,0x000055,BUF_24_004
       00 00 27 02 
       00          
046EA3 10 00 00 57 0497*  	dl 0x000010,0x000057,BUF_24_020
       00 00 28 02 
       00          
046EAC 3E 00 00 57 0498*  	dl 0x00003E,0x000057,BUF_24_020
       00 00 28 02 
       00          
046EB5 6B 00 00 57 0499*  	dl 0x00006B,0x000057,BUF_24_020
       00 00 28 02 
       00          
046EBE 99 00 00 57 0500*  	dl 0x000099,0x000057,BUF_24_020
       00 00 28 02 
       00          
046EC7 C6 00 00 57 0501*  	dl 0x0000C6,0x000057,BUF_24_020
       00 00 28 02 
       00          
046ED0 F4 00 00 57 0502*  	dl 0x0000F4,0x000057,BUF_24_020
       00 00 28 02 
       00          
046ED9 21 01 00 57 0503*  	dl 0x000121,0x000057,BUF_24_020
       00 00 28 02 
       00          
046EE2 16 00 00 5A 0504*  	dl 0x000016,0x00005A,BUF_24_032
       00 00 29 02 
       00          
046EEB 55 00 00 5A 0505*  	dl 0x000055,0x00005A,BUF_24_032
       00 00 29 02 
       00          
046EF4 96 00 00 5A 0506*  	dl 0x000096,0x00005A,BUF_24_032
       00 00 29 02 
       00          
046EFD D6 00 00 5A 0507*  	dl 0x0000D6,0x00005A,BUF_24_032
       00 00 29 02 
       00          
046F06 16 01 00 5A 0508*  	dl 0x000116,0x00005A,BUF_24_032
       00 00 29 02 
       00          
046F0F 26 00 00 60 0509*  	dl 0x000026,0x000060,BUF_24_040
       00 00 2A 02 
       00          
046F18 90 00 00 60 0510*  	dl 0x000090,0x000060,BUF_24_040
       00 00 2A 02 
       00          
046F21 FB 00 00 60 0511*  	dl 0x0000FB,0x000060,BUF_24_040
       00 00 2A 02 
       00          
046F2A 6E 00 00 82 0512*  	dl 0x00006E,0x000082,BUF_24_044
       00 00 2B 02 
       00          
046F33             0513*  
046F33             0514*  ; render_obj_id:40
046F33             0515*  sprite_obj_005:
046F33 0A 00 00 5A 0516*  	dl 0x00000A,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F3C 2D 00 00 5A 0517*  	dl 0x00002D,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F45 51 00 00 5A 0518*  	dl 0x000051,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F4E 74 00 00 5A 0519*  	dl 0x000074,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F57 98 00 00 5A 0520*  	dl 0x000098,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F60 BB 00 00 5A 0521*  	dl 0x0000BB,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F69 DF 00 00 5A 0522*  	dl 0x0000DF,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F72 02 01 00 5A 0523*  	dl 0x000102,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F7B 26 01 00 5A 0524*  	dl 0x000126,0x00005A,BUF_40_004
       00 00 2C 02 
       00          
046F84 0D 00 00 5C 0525*  	dl 0x00000D,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046F8D 3B 00 00 5C 0526*  	dl 0x00003B,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046F96 68 00 00 5C 0527*  	dl 0x000068,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046F9F 96 00 00 5C 0528*  	dl 0x000096,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046FA8 C3 00 00 5C 0529*  	dl 0x0000C3,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046FB1 F1 00 00 5C 0530*  	dl 0x0000F1,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046FBA 1E 01 00 5C 0531*  	dl 0x00011E,0x00005C,BUF_40_020
       00 00 2D 02 
       00          
046FC3 13 00 00 62 0532*  	dl 0x000013,0x000062,BUF_40_032
       00 00 2E 02 
       00          
046FCC 52 00 00 62 0533*  	dl 0x000052,0x000062,BUF_40_032
       00 00 2E 02 
       00          
046FD5 93 00 00 62 0534*  	dl 0x000093,0x000062,BUF_40_032
       00 00 2E 02 
       00          
046FDE D3 00 00 62 0535*  	dl 0x0000D3,0x000062,BUF_40_032
       00 00 2E 02 
       00          
046FE7 13 01 00 62 0536*  	dl 0x000113,0x000062,BUF_40_032
       00 00 2E 02 
       00          
046FF0 20 00 00 6D 0537*  	dl 0x000020,0x00006D,BUF_40_040
       00 00 2F 02 
       00          
046FF9 8A 00 00 6D 0538*  	dl 0x00008A,0x00006D,BUF_40_040
       00 00 2F 02 
       00          
047002 F5 00 00 6D 0539*  	dl 0x0000F5,0x00006D,BUF_40_040
       00 00 2F 02 
       00          
04700B E0 00 00 A0 0540*  	dl 0x0000E0,0x0000A0,BUF_40_044
       00 00 30 02 
       00          
047014             0541*  
047014             0542*  ; render_obj_id:41
047014             0543*  sprite_obj_006:
047014 0C 00 00 55 0544*  	dl 0x00000C,0x000055,BUF_41_004
       00 00 31 02 
       00          
04701D 2F 00 00 55 0545*  	dl 0x00002F,0x000055,BUF_41_004
       00 00 31 02 
       00          
047026 53 00 00 55 0546*  	dl 0x000053,0x000055,BUF_41_004
       00 00 31 02 
       00          
04702F 76 00 00 55 0547*  	dl 0x000076,0x000055,BUF_41_004
       00 00 31 02 
       00          
047038 9A 00 00 55 0548*  	dl 0x00009A,0x000055,BUF_41_004
       00 00 31 02 
       00          
047041 BD 00 00 55 0549*  	dl 0x0000BD,0x000055,BUF_41_004
       00 00 31 02 
       00          
04704A E1 00 00 55 0550*  	dl 0x0000E1,0x000055,BUF_41_004
       00 00 31 02 
       00          
047053 04 01 00 55 0551*  	dl 0x000104,0x000055,BUF_41_004
       00 00 31 02 
       00          
04705C 28 01 00 55 0552*  	dl 0x000128,0x000055,BUF_41_004
       00 00 31 02 
       00          
047065 0E 00 00 57 0553*  	dl 0x00000E,0x000057,BUF_41_020
       00 00 32 02 
       00          
04706E 3C 00 00 57 0554*  	dl 0x00003C,0x000057,BUF_41_020
       00 00 32 02 
       00          
047077 69 00 00 57 0555*  	dl 0x000069,0x000057,BUF_41_020
       00 00 32 02 
       00          
047080 97 00 00 57 0556*  	dl 0x000097,0x000057,BUF_41_020
       00 00 32 02 
       00          
047089 C4 00 00 57 0557*  	dl 0x0000C4,0x000057,BUF_41_020
       00 00 32 02 
       00          
047092 F2 00 00 57 0558*  	dl 0x0000F2,0x000057,BUF_41_020
       00 00 32 02 
       00          
04709B 1F 01 00 57 0559*  	dl 0x00011F,0x000057,BUF_41_020
       00 00 32 02 
       00          
0470A4 15 00 00 5B 0560*  	dl 0x000015,0x00005B,BUF_41_032
       00 00 33 02 
       00          
0470AD 54 00 00 5B 0561*  	dl 0x000054,0x00005B,BUF_41_032
       00 00 33 02 
       00          
0470B6 95 00 00 5B 0562*  	dl 0x000095,0x00005B,BUF_41_032
       00 00 33 02 
       00          
0470BF D5 00 00 5B 0563*  	dl 0x0000D5,0x00005B,BUF_41_032
       00 00 33 02 
       00          
0470C8 15 01 00 5B 0564*  	dl 0x000115,0x00005B,BUF_41_032
       00 00 33 02 
       00          
0470D1 23 00 00 62 0565*  	dl 0x000023,0x000062,BUF_41_040
       00 00 34 02 
       00          
0470DA 8D 00 00 62 0566*  	dl 0x00008D,0x000062,BUF_41_040
       00 00 34 02 
       00          
0470E3 F8 00 00 62 0567*  	dl 0x0000F8,0x000062,BUF_41_040
       00 00 34 02 
       00          
0470EC 84 00 00 87 0568*  	dl 0x000084,0x000087,BUF_41_044
       00 00 35 02 
       00          
0470F5             0569*  
0470F5             0570*  ; render_obj_id:42
0470F5             0571*  sprite_obj_007:
0470F5 0D 00 00 57 0572*  	dl 0x00000D,0x000057,BUF_42_004
       00 00 36 02 
       00          
0470FE 30 00 00 57 0573*  	dl 0x000030,0x000057,BUF_42_004
       00 00 36 02 
       00          
047107 54 00 00 57 0574*  	dl 0x000054,0x000057,BUF_42_004
       00 00 36 02 
       00          
047110 77 00 00 57 0575*  	dl 0x000077,0x000057,BUF_42_004
       00 00 36 02 
       00          
047119 9B 00 00 57 0576*  	dl 0x00009B,0x000057,BUF_42_004
       00 00 36 02 
       00          
047122 BE 00 00 57 0577*  	dl 0x0000BE,0x000057,BUF_42_004
       00 00 36 02 
       00          
04712B E2 00 00 57 0578*  	dl 0x0000E2,0x000057,BUF_42_004
       00 00 36 02 
       00          
047134 05 01 00 57 0579*  	dl 0x000105,0x000057,BUF_42_004
       00 00 36 02 
       00          
04713D 29 01 00 57 0580*  	dl 0x000129,0x000057,BUF_42_004
       00 00 36 02 
       00          
047146 10 00 00 5A 0581*  	dl 0x000010,0x00005A,BUF_42_020
       00 00 37 02 
       00          
04714F 3E 00 00 5A 0582*  	dl 0x00003E,0x00005A,BUF_42_020
       00 00 37 02 
       00          
047158 6B 00 00 5A 0583*  	dl 0x00006B,0x00005A,BUF_42_020
       00 00 37 02 
       00          
047161 99 00 00 5A 0584*  	dl 0x000099,0x00005A,BUF_42_020
       00 00 37 02 
       00          
04716A C6 00 00 5A 0585*  	dl 0x0000C6,0x00005A,BUF_42_020
       00 00 37 02 
       00          
047173 F4 00 00 5A 0586*  	dl 0x0000F4,0x00005A,BUF_42_020
       00 00 37 02 
       00          
04717C 21 01 00 5A 0587*  	dl 0x000121,0x00005A,BUF_42_020
       00 00 37 02 
       00          
047185 18 00 00 5F 0588*  	dl 0x000018,0x00005F,BUF_42_032
       00 00 38 02 
       00          
04718E 57 00 00 5F 0589*  	dl 0x000057,0x00005F,BUF_42_032
       00 00 38 02 
       00          
047197 98 00 00 5F 0590*  	dl 0x000098,0x00005F,BUF_42_032
       00 00 38 02 
       00          
0471A0 D8 00 00 5F 0591*  	dl 0x0000D8,0x00005F,BUF_42_032
       00 00 38 02 
       00          
0471A9 18 01 00 5F 0592*  	dl 0x000118,0x00005F,BUF_42_032
       00 00 38 02 
       00          
0471B2 28 00 00 69 0593*  	dl 0x000028,0x000069,BUF_42_040
       00 00 39 02 
       00          
0471BB 92 00 00 69 0594*  	dl 0x000092,0x000069,BUF_42_040
       00 00 39 02 
       00          
0471C4 FD 00 00 69 0595*  	dl 0x0000FD,0x000069,BUF_42_040
       00 00 39 02 
       00          
0471CD 7D 00 00 9C 0596*  	dl 0x00007D,0x00009C,BUF_42_044
       00 00 3A 02 
       00          
0471D6             0597*  
0471D6             0598*  ; render_obj_id:43
0471D6             0599*  sprite_obj_008:
0471D6 0C 00 00 5C 0600*  	dl 0x00000C,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
0471DF 2F 00 00 5C 0601*  	dl 0x00002F,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
0471E8 53 00 00 5C 0602*  	dl 0x000053,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
0471F1 76 00 00 5C 0603*  	dl 0x000076,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
0471FA 9A 00 00 5C 0604*  	dl 0x00009A,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
047203 BD 00 00 5C 0605*  	dl 0x0000BD,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
04720C E1 00 00 5C 0606*  	dl 0x0000E1,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
047215 04 01 00 5C 0607*  	dl 0x000104,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
04721E 28 01 00 5C 0608*  	dl 0x000128,0x00005C,BUF_43_004
       00 00 3B 02 
       00          
047227 0F 00 00 61 0609*  	dl 0x00000F,0x000061,BUF_43_020
       00 00 3C 02 
       00          
047230 3D 00 00 61 0610*  	dl 0x00003D,0x000061,BUF_43_020
       00 00 3C 02 
       00          
047239 6A 00 00 61 0611*  	dl 0x00006A,0x000061,BUF_43_020
       00 00 3C 02 
       00          
047242 98 00 00 61 0612*  	dl 0x000098,0x000061,BUF_43_020
       00 00 3C 02 
       00          
04724B C5 00 00 61 0613*  	dl 0x0000C5,0x000061,BUF_43_020
       00 00 3C 02 
       00          
047254 F3 00 00 61 0614*  	dl 0x0000F3,0x000061,BUF_43_020
       00 00 3C 02 
       00          
04725D 20 01 00 61 0615*  	dl 0x000120,0x000061,BUF_43_020
       00 00 3C 02 
       00          
047266 15 00 00 68 0616*  	dl 0x000015,0x000068,BUF_43_032
       00 00 3D 02 
       00          
04726F 54 00 00 68 0617*  	dl 0x000054,0x000068,BUF_43_032
       00 00 3D 02 
       00          
047278 95 00 00 68 0618*  	dl 0x000095,0x000068,BUF_43_032
       00 00 3D 02 
       00          
047281 D5 00 00 68 0619*  	dl 0x0000D5,0x000068,BUF_43_032
       00 00 3D 02 
       00          
04728A 15 01 00 68 0620*  	dl 0x000115,0x000068,BUF_43_032
       00 00 3D 02 
       00          
047293 24 00 00 77 0621*  	dl 0x000024,0x000077,BUF_43_040
       00 00 3E 02 
       00          
04729C 8E 00 00 77 0622*  	dl 0x00008E,0x000077,BUF_43_040
       00 00 3E 02 
       00          
0472A5 F9 00 00 77 0623*  	dl 0x0000F9,0x000077,BUF_43_040
       00 00 3E 02 
       00          
0472AE D4 00 00 9F 0624*  	dl 0x0000D4,0x00009F,BUF_43_044
       00 00 3F 02 
       00          
0472B7             0625*  
0472B7             0626*  ; render_obj_id:44
0472B7             0627*  sprite_obj_009:
0472B7 0F 00 00 5C 0628*  	dl 0x00000F,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472C0 32 00 00 5C 0629*  	dl 0x000032,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472C9 56 00 00 5C 0630*  	dl 0x000056,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472D2 79 00 00 5C 0631*  	dl 0x000079,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472DB 9D 00 00 5C 0632*  	dl 0x00009D,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472E4 C0 00 00 5C 0633*  	dl 0x0000C0,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472ED E4 00 00 5C 0634*  	dl 0x0000E4,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472F6 07 01 00 5C 0635*  	dl 0x000107,0x00005C,BUF_44_004
       00 00 40 02 
       00          
0472FF 2B 01 00 5C 0636*  	dl 0x00012B,0x00005C,BUF_44_004
       00 00 40 02 
       00          
047308 14 00 00 5F 0637*  	dl 0x000014,0x00005F,BUF_44_020
       00 00 41 02 
       00          
047311 42 00 00 5F 0638*  	dl 0x000042,0x00005F,BUF_44_020
       00 00 41 02 
       00          
04731A 6F 00 00 5F 0639*  	dl 0x00006F,0x00005F,BUF_44_020
       00 00 41 02 
       00          
047323 9D 00 00 5F 0640*  	dl 0x00009D,0x00005F,BUF_44_020
       00 00 41 02 
       00          
04732C CA 00 00 5F 0641*  	dl 0x0000CA,0x00005F,BUF_44_020
       00 00 41 02 
       00          
047335 F8 00 00 5F 0642*  	dl 0x0000F8,0x00005F,BUF_44_020
       00 00 41 02 
       00          
04733E 25 01 00 5F 0643*  	dl 0x000125,0x00005F,BUF_44_020
       00 00 41 02 
       00          
047347 1B 00 00 66 0644*  	dl 0x00001B,0x000066,BUF_44_032
       00 00 42 02 
       00          
047350 5A 00 00 66 0645*  	dl 0x00005A,0x000066,BUF_44_032
       00 00 42 02 
       00          
047359 9B 00 00 66 0646*  	dl 0x00009B,0x000066,BUF_44_032
       00 00 42 02 
       00          
047362 DB 00 00 66 0647*  	dl 0x0000DB,0x000066,BUF_44_032
       00 00 42 02 
       00          
04736B 1B 01 00 66 0648*  	dl 0x00011B,0x000066,BUF_44_032
       00 00 42 02 
       00          
047374 2E 00 00 75 0649*  	dl 0x00002E,0x000075,BUF_44_040
       00 00 43 02 
       00          
04737D 98 00 00 75 0650*  	dl 0x000098,0x000075,BUF_44_040
       00 00 43 02 
       00          
047386 03 01 00 75 0651*  	dl 0x000103,0x000075,BUF_44_040
       00 00 43 02 
       00          
04738F C8 00 00 A1 0652*  	dl 0x0000C8,0x0000A1,BUF_44_044
       00 00 44 02 
       00          
047398             0653*  
047398             0654*  ; render_obj_id:45
047398             0655*  sprite_obj_010:
047398 09 00 00 56 0656*  	dl 0x000009,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473A1 2C 00 00 56 0657*  	dl 0x00002C,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473AA 50 00 00 56 0658*  	dl 0x000050,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473B3 73 00 00 56 0659*  	dl 0x000073,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473BC 97 00 00 56 0660*  	dl 0x000097,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473C5 BA 00 00 56 0661*  	dl 0x0000BA,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473CE DE 00 00 56 0662*  	dl 0x0000DE,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473D7 01 01 00 56 0663*  	dl 0x000101,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473E0 25 01 00 56 0664*  	dl 0x000125,0x000056,BUF_45_004
       00 00 45 02 
       00          
0473E9 0C 00 00 58 0665*  	dl 0x00000C,0x000058,BUF_45_020
       00 00 46 02 
       00          
0473F2 3A 00 00 58 0666*  	dl 0x00003A,0x000058,BUF_45_020
       00 00 46 02 
       00          
0473FB 67 00 00 58 0667*  	dl 0x000067,0x000058,BUF_45_020
       00 00 46 02 
       00          
047404 95 00 00 58 0668*  	dl 0x000095,0x000058,BUF_45_020
       00 00 46 02 
       00          
04740D C2 00 00 58 0669*  	dl 0x0000C2,0x000058,BUF_45_020
       00 00 46 02 
       00          
047416 F0 00 00 58 0670*  	dl 0x0000F0,0x000058,BUF_45_020
       00 00 46 02 
       00          
04741F 1D 01 00 58 0671*  	dl 0x00011D,0x000058,BUF_45_020
       00 00 46 02 
       00          
047428 11 00 00 5D 0672*  	dl 0x000011,0x00005D,BUF_45_032
       00 00 47 02 
       00          
047431 50 00 00 5D 0673*  	dl 0x000050,0x00005D,BUF_45_032
       00 00 47 02 
       00          
04743A 91 00 00 5D 0674*  	dl 0x000091,0x00005D,BUF_45_032
       00 00 47 02 
       00          
047443 D1 00 00 5D 0675*  	dl 0x0000D1,0x00005D,BUF_45_032
       00 00 47 02 
       00          
04744C 11 01 00 5D 0676*  	dl 0x000111,0x00005D,BUF_45_032
       00 00 47 02 
       00          
047455 1D 00 00 63 0677*  	dl 0x00001D,0x000063,BUF_45_040
       00 00 48 02 
       00          
04745E 87 00 00 63 0678*  	dl 0x000087,0x000063,BUF_45_040
       00 00 48 02 
       00          
047467 F2 00 00 63 0679*  	dl 0x0000F2,0x000063,BUF_45_040
       00 00 48 02 
       00          
047470 58 00 00 8D 0680*  	dl 0x000058,0x00008D,BUF_45_044
       00 00 49 02 
       00          
047479             0681*  
047479             0682*  ; render_obj_id:46
047479             0683*  sprite_obj_011:
047479 09 00 00 58 0684*  	dl 0x000009,0x000058,BUF_46_004
       00 00 4A 02 
       00          
047482 2C 00 00 58 0685*  	dl 0x00002C,0x000058,BUF_46_004
       00 00 4A 02 
       00          
04748B 50 00 00 58 0686*  	dl 0x000050,0x000058,BUF_46_004
       00 00 4A 02 
       00          
047494 73 00 00 58 0687*  	dl 0x000073,0x000058,BUF_46_004
       00 00 4A 02 
       00          
04749D 97 00 00 58 0688*  	dl 0x000097,0x000058,BUF_46_004
       00 00 4A 02 
       00          
0474A6 BA 00 00 58 0689*  	dl 0x0000BA,0x000058,BUF_46_004
       00 00 4A 02 
       00          
0474AF DE 00 00 58 0690*  	dl 0x0000DE,0x000058,BUF_46_004
       00 00 4A 02 
       00          
0474B8 01 01 00 58 0691*  	dl 0x000101,0x000058,BUF_46_004
       00 00 4A 02 
       00          
0474C1 25 01 00 58 0692*  	dl 0x000125,0x000058,BUF_46_004
       00 00 4A 02 
       00          
0474CA 0C 00 00 5A 0693*  	dl 0x00000C,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
0474D3 3A 00 00 5A 0694*  	dl 0x00003A,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
0474DC 67 00 00 5A 0695*  	dl 0x000067,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
0474E5 95 00 00 5A 0696*  	dl 0x000095,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
0474EE C2 00 00 5A 0697*  	dl 0x0000C2,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
0474F7 F0 00 00 5A 0698*  	dl 0x0000F0,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
047500 1D 01 00 5A 0699*  	dl 0x00011D,0x00005A,BUF_46_020
       00 00 4B 02 
       00          
047509 11 00 00 60 0700*  	dl 0x000011,0x000060,BUF_46_032
       00 00 4C 02 
       00          
047512 50 00 00 60 0701*  	dl 0x000050,0x000060,BUF_46_032
       00 00 4C 02 
       00          
04751B 91 00 00 60 0702*  	dl 0x000091,0x000060,BUF_46_032
       00 00 4C 02 
       00          
047524 D1 00 00 60 0703*  	dl 0x0000D1,0x000060,BUF_46_032
       00 00 4C 02 
       00          
04752D 11 01 00 60 0704*  	dl 0x000111,0x000060,BUF_46_032
       00 00 4C 02 
       00          
047536 1D 00 00 69 0705*  	dl 0x00001D,0x000069,BUF_46_040
       00 00 4D 02 
       00          
04753F 87 00 00 69 0706*  	dl 0x000087,0x000069,BUF_46_040
       00 00 4D 02 
       00          
047548 F2 00 00 69 0707*  	dl 0x0000F2,0x000069,BUF_46_040
       00 00 4D 02 
       00          
047551 8E 00 00 9F 0708*  	dl 0x00008E,0x00009F,BUF_46_044
       00 00 4E 02 
       00          
04755A             0709*  
04755A             0710*  ; render_obj_id:47
04755A             0711*  sprite_obj_012:
04755A 09 00 00 57 0712*  	dl 0x000009,0x000057,BUF_47_004
       00 00 4F 02 
       00          
047563 2C 00 00 57 0713*  	dl 0x00002C,0x000057,BUF_47_004
       00 00 4F 02 
       00          
04756C 50 00 00 57 0714*  	dl 0x000050,0x000057,BUF_47_004
       00 00 4F 02 
       00          
047575 73 00 00 57 0715*  	dl 0x000073,0x000057,BUF_47_004
       00 00 4F 02 
       00          
04757E 97 00 00 57 0716*  	dl 0x000097,0x000057,BUF_47_004
       00 00 4F 02 
       00          
047587 BA 00 00 57 0717*  	dl 0x0000BA,0x000057,BUF_47_004
       00 00 4F 02 
       00          
047590 DE 00 00 57 0718*  	dl 0x0000DE,0x000057,BUF_47_004
       00 00 4F 02 
       00          
047599 01 01 00 57 0719*  	dl 0x000101,0x000057,BUF_47_004
       00 00 4F 02 
       00          
0475A2 25 01 00 57 0720*  	dl 0x000125,0x000057,BUF_47_004
       00 00 4F 02 
       00          
0475AB 0C 00 00 59 0721*  	dl 0x00000C,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475B4 3A 00 00 59 0722*  	dl 0x00003A,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475BD 67 00 00 59 0723*  	dl 0x000067,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475C6 95 00 00 59 0724*  	dl 0x000095,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475CF C2 00 00 59 0725*  	dl 0x0000C2,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475D8 F0 00 00 59 0726*  	dl 0x0000F0,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475E1 1D 01 00 59 0727*  	dl 0x00011D,0x000059,BUF_47_020
       00 00 50 02 
       00          
0475EA 11 00 00 5E 0728*  	dl 0x000011,0x00005E,BUF_47_032
       00 00 51 02 
       00          
0475F3 50 00 00 5E 0729*  	dl 0x000050,0x00005E,BUF_47_032
       00 00 51 02 
       00          
0475FC 91 00 00 5E 0730*  	dl 0x000091,0x00005E,BUF_47_032
       00 00 51 02 
       00          
047605 D1 00 00 5E 0731*  	dl 0x0000D1,0x00005E,BUF_47_032
       00 00 51 02 
       00          
04760E 11 01 00 5E 0732*  	dl 0x000111,0x00005E,BUF_47_032
       00 00 51 02 
       00          
047617 1D 00 00 66 0733*  	dl 0x00001D,0x000066,BUF_47_040
       00 00 52 02 
       00          
047620 87 00 00 66 0734*  	dl 0x000087,0x000066,BUF_47_040
       00 00 52 02 
       00          
047629 F2 00 00 66 0735*  	dl 0x0000F2,0x000066,BUF_47_040
       00 00 52 02 
       00          
047632 B2 00 00 96 0736*  	dl 0x0000B2,0x000096,BUF_47_044
       00 00 53 02 
       00          
04763B             0737*  
04763B             0738*  ; render_obj_id:48
04763B             0739*  sprite_obj_013:
04763B 0A 00 00 5A 0740*  	dl 0x00000A,0x00005A,BUF_48_004
       00 00 54 02 
       00          
047644 2D 00 00 5A 0741*  	dl 0x00002D,0x00005A,BUF_48_004
       00 00 54 02 
       00          
04764D 51 00 00 5A 0742*  	dl 0x000051,0x00005A,BUF_48_004
       00 00 54 02 
       00          
047656 74 00 00 5A 0743*  	dl 0x000074,0x00005A,BUF_48_004
       00 00 54 02 
       00          
04765F 98 00 00 5A 0744*  	dl 0x000098,0x00005A,BUF_48_004
       00 00 54 02 
       00          
047668 BB 00 00 5A 0745*  	dl 0x0000BB,0x00005A,BUF_48_004
       00 00 54 02 
       00          
047671 DF 00 00 5A 0746*  	dl 0x0000DF,0x00005A,BUF_48_004
       00 00 54 02 
       00          
04767A 02 01 00 5A 0747*  	dl 0x000102,0x00005A,BUF_48_004
       00 00 54 02 
       00          
047683 26 01 00 5A 0748*  	dl 0x000126,0x00005A,BUF_48_004
       00 00 54 02 
       00          
04768C 0D 00 00 5C 0749*  	dl 0x00000D,0x00005C,BUF_48_020
       00 00 55 02 
       00          
047695 3B 00 00 5C 0750*  	dl 0x00003B,0x00005C,BUF_48_020
       00 00 55 02 
       00          
04769E 68 00 00 5C 0751*  	dl 0x000068,0x00005C,BUF_48_020
       00 00 55 02 
       00          
0476A7 96 00 00 5C 0752*  	dl 0x000096,0x00005C,BUF_48_020
       00 00 55 02 
       00          
0476B0 C3 00 00 5C 0753*  	dl 0x0000C3,0x00005C,BUF_48_020
       00 00 55 02 
       00          
0476B9 F1 00 00 5C 0754*  	dl 0x0000F1,0x00005C,BUF_48_020
       00 00 55 02 
       00          
0476C2 1E 01 00 5C 0755*  	dl 0x00011E,0x00005C,BUF_48_020
       00 00 55 02 
       00          
0476CB 12 00 00 62 0756*  	dl 0x000012,0x000062,BUF_48_032
       00 00 56 02 
       00          
0476D4 51 00 00 62 0757*  	dl 0x000051,0x000062,BUF_48_032
       00 00 56 02 
       00          
0476DD 92 00 00 62 0758*  	dl 0x000092,0x000062,BUF_48_032
       00 00 56 02 
       00          
0476E6 D2 00 00 62 0759*  	dl 0x0000D2,0x000062,BUF_48_032
       00 00 56 02 
       00          
0476EF 12 01 00 62 0760*  	dl 0x000112,0x000062,BUF_48_032
       00 00 56 02 
       00          
0476F8 1D 00 00 6C 0761*  	dl 0x00001D,0x00006C,BUF_48_040
       00 00 57 02 
       00          
047701 87 00 00 6C 0762*  	dl 0x000087,0x00006C,BUF_48_040
       00 00 57 02 
       00          
04770A F2 00 00 6C 0763*  	dl 0x0000F2,0x00006C,BUF_48_040
       00 00 57 02 
       00          
047713 00 01 00 A0 0764*  	dl 0x000100,0x0000A0,BUF_48_044
       00 00 58 02 
       00          
04771C             0765*  
04771C             0766*  ; render_obj_id:49
04771C             0767*  sprite_obj_014:
04771C 0A 00 00 59 0768*  	dl 0x00000A,0x000059,BUF_49_004
       00 00 59 02 
       00          
047725 2D 00 00 59 0769*  	dl 0x00002D,0x000059,BUF_49_004
       00 00 59 02 
       00          
04772E 51 00 00 59 0770*  	dl 0x000051,0x000059,BUF_49_004
       00 00 59 02 
       00          
047737 74 00 00 59 0771*  	dl 0x000074,0x000059,BUF_49_004
       00 00 59 02 
       00          
047740 98 00 00 59 0772*  	dl 0x000098,0x000059,BUF_49_004
       00 00 59 02 
       00          
047749 BB 00 00 59 0773*  	dl 0x0000BB,0x000059,BUF_49_004
       00 00 59 02 
       00          
047752 DF 00 00 59 0774*  	dl 0x0000DF,0x000059,BUF_49_004
       00 00 59 02 
       00          
04775B 02 01 00 59 0775*  	dl 0x000102,0x000059,BUF_49_004
       00 00 59 02 
       00          
047764 26 01 00 59 0776*  	dl 0x000126,0x000059,BUF_49_004
       00 00 59 02 
       00          
04776D 0E 00 00 5B 0777*  	dl 0x00000E,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
047776 3C 00 00 5B 0778*  	dl 0x00003C,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
04777F 69 00 00 5B 0779*  	dl 0x000069,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
047788 97 00 00 5B 0780*  	dl 0x000097,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
047791 C4 00 00 5B 0781*  	dl 0x0000C4,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
04779A F2 00 00 5B 0782*  	dl 0x0000F2,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
0477A3 1F 01 00 5B 0783*  	dl 0x00011F,0x00005B,BUF_49_020
       00 00 5A 02 
       00          
0477AC 13 00 00 62 0784*  	dl 0x000013,0x000062,BUF_49_032
       00 00 5B 02 
       00          
0477B5 52 00 00 62 0785*  	dl 0x000052,0x000062,BUF_49_032
       00 00 5B 02 
       00          
0477BE 93 00 00 62 0786*  	dl 0x000093,0x000062,BUF_49_032
       00 00 5B 02 
       00          
0477C7 D3 00 00 62 0787*  	dl 0x0000D3,0x000062,BUF_49_032
       00 00 5B 02 
       00          
0477D0 13 01 00 62 0788*  	dl 0x000113,0x000062,BUF_49_032
       00 00 5B 02 
       00          
0477D9 20 00 00 6C 0789*  	dl 0x000020,0x00006C,BUF_49_040
       00 00 5C 02 
       00          
0477E2 8A 00 00 6C 0790*  	dl 0x00008A,0x00006C,BUF_49_040
       00 00 5C 02 
       00          
0477EB F5 00 00 6C 0791*  	dl 0x0000F5,0x00006C,BUF_49_040
       00 00 5C 02 
       00          
0477F4 E8 00 00 A0 0792*  	dl 0x0000E8,0x0000A0,BUF_49_044
       00 00 5D 02 
       00          
0477FD             0793*  
0477FD             0794*  ; render_obj_id:50
0477FD             0795*  sprite_obj_015:
0477FD 0D 00 00 53 0796*  	dl 0x00000D,0x000053,BUF_50_004
       00 00 5E 02 
       00          
047806 30 00 00 53 0797*  	dl 0x000030,0x000053,BUF_50_004
       00 00 5E 02 
       00          
04780F 54 00 00 53 0798*  	dl 0x000054,0x000053,BUF_50_004
       00 00 5E 02 
       00          
047818 77 00 00 53 0799*  	dl 0x000077,0x000053,BUF_50_004
       00 00 5E 02 
       00          
047821 9B 00 00 53 0800*  	dl 0x00009B,0x000053,BUF_50_004
       00 00 5E 02 
       00          
04782A BE 00 00 53 0801*  	dl 0x0000BE,0x000053,BUF_50_004
       00 00 5E 02 
       00          
047833 E2 00 00 53 0802*  	dl 0x0000E2,0x000053,BUF_50_004
       00 00 5E 02 
       00          
04783C 05 01 00 53 0803*  	dl 0x000105,0x000053,BUF_50_004
       00 00 5E 02 
       00          
047845 29 01 00 53 0804*  	dl 0x000129,0x000053,BUF_50_004
       00 00 5E 02 
       00          
04784E 10 00 00 54 0805*  	dl 0x000010,0x000054,BUF_50_020
       00 00 5F 02 
       00          
047857 3E 00 00 54 0806*  	dl 0x00003E,0x000054,BUF_50_020
       00 00 5F 02 
       00          
047860 6B 00 00 54 0807*  	dl 0x00006B,0x000054,BUF_50_020
       00 00 5F 02 
       00          
047869 99 00 00 54 0808*  	dl 0x000099,0x000054,BUF_50_020
       00 00 5F 02 
       00          
047872 C6 00 00 54 0809*  	dl 0x0000C6,0x000054,BUF_50_020
       00 00 5F 02 
       00          
04787B F4 00 00 54 0810*  	dl 0x0000F4,0x000054,BUF_50_020
       00 00 5F 02 
       00          
047884 21 01 00 54 0811*  	dl 0x000121,0x000054,BUF_50_020
       00 00 5F 02 
       00          
04788D 16 00 00 56 0812*  	dl 0x000016,0x000056,BUF_50_032
       00 00 60 02 
       00          
047896 55 00 00 56 0813*  	dl 0x000055,0x000056,BUF_50_032
       00 00 60 02 
       00          
04789F 96 00 00 56 0814*  	dl 0x000096,0x000056,BUF_50_032
       00 00 60 02 
       00          
0478A8 D6 00 00 56 0815*  	dl 0x0000D6,0x000056,BUF_50_032
       00 00 60 02 
       00          
0478B1 16 01 00 56 0816*  	dl 0x000116,0x000056,BUF_50_032
       00 00 60 02 
       00          
0478BA 26 00 00 5A 0817*  	dl 0x000026,0x00005A,BUF_50_040
       00 00 61 02 
       00          
0478C3 90 00 00 5A 0818*  	dl 0x000090,0x00005A,BUF_50_040
       00 00 61 02 
       00          
0478CC FB 00 00 5A 0819*  	dl 0x0000FB,0x00005A,BUF_50_040
       00 00 61 02 
       00          
0478D5 78 00 00 6E 0820*  	dl 0x000078,0x00006E,BUF_50_044
       00 00 62 02 
       00          
0478DE             0821*  
0478DE             0822*  ; render_obj_id:51
0478DE             0823*  sprite_obj_016:
0478DE 0B 00 00 49 0824*  	dl 0x00000B,0x000049,BUF_51_004
       00 00 63 02 
       00          
0478E7 2E 00 00 49 0825*  	dl 0x00002E,0x000049,BUF_51_004
       00 00 63 02 
       00          
0478F0 52 00 00 49 0826*  	dl 0x000052,0x000049,BUF_51_004
       00 00 63 02 
       00          
0478F9 75 00 00 49 0827*  	dl 0x000075,0x000049,BUF_51_004
       00 00 63 02 
       00          
047902 99 00 00 49 0828*  	dl 0x000099,0x000049,BUF_51_004
       00 00 63 02 
       00          
04790B BC 00 00 49 0829*  	dl 0x0000BC,0x000049,BUF_51_004
       00 00 63 02 
       00          
047914 E0 00 00 49 0830*  	dl 0x0000E0,0x000049,BUF_51_004
       00 00 63 02 
       00          
04791D 03 01 00 49 0831*  	dl 0x000103,0x000049,BUF_51_004
       00 00 63 02 
       00          
047926 27 01 00 49 0832*  	dl 0x000127,0x000049,BUF_51_004
       00 00 63 02 
       00          
04792F 0D 00 00 48 0833*  	dl 0x00000D,0x000048,BUF_51_020
       00 00 64 02 
       00          
047938 3B 00 00 48 0834*  	dl 0x00003B,0x000048,BUF_51_020
       00 00 64 02 
       00          
047941 68 00 00 48 0835*  	dl 0x000068,0x000048,BUF_51_020
       00 00 64 02 
       00          
04794A 96 00 00 48 0836*  	dl 0x000096,0x000048,BUF_51_020
       00 00 64 02 
       00          
047953 C3 00 00 48 0837*  	dl 0x0000C3,0x000048,BUF_51_020
       00 00 64 02 
       00          
04795C F1 00 00 48 0838*  	dl 0x0000F1,0x000048,BUF_51_020
       00 00 64 02 
       00          
047965 1E 01 00 48 0839*  	dl 0x00011E,0x000048,BUF_51_020
       00 00 64 02 
       00          
04796E 13 00 00 45 0840*  	dl 0x000013,0x000045,BUF_51_032
       00 00 65 02 
       00          
047977 52 00 00 45 0841*  	dl 0x000052,0x000045,BUF_51_032
       00 00 65 02 
       00          
047980 93 00 00 45 0842*  	dl 0x000093,0x000045,BUF_51_032
       00 00 65 02 
       00          
047989 D3 00 00 45 0843*  	dl 0x0000D3,0x000045,BUF_51_032
       00 00 65 02 
       00          
047992 13 01 00 45 0844*  	dl 0x000113,0x000045,BUF_51_032
       00 00 65 02 
       00          
04799B 20 00 00 3E 0845*  	dl 0x000020,0x00003E,BUF_51_040
       00 00 66 02 
       00          
0479A4 8A 00 00 3E 0846*  	dl 0x00008A,0x00003E,BUF_51_040
       00 00 66 02 
       00          
0479AD F5 00 00 3E 0847*  	dl 0x0000F5,0x00003E,BUF_51_040
       00 00 66 02 
       00          
0479B6 5E 00 00 1C 0848*  	dl 0x00005E,0x00001C,BUF_51_044
       00 00 67 02 
       00          
0479BF             0849*  
0479BF             0850*  ; render_obj_id:52
0479BF             0851*  sprite_obj_017:
0479BF 0C 00 00 49 0852*  	dl 0x00000C,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479C8 2F 00 00 49 0853*  	dl 0x00002F,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479D1 53 00 00 49 0854*  	dl 0x000053,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479DA 76 00 00 49 0855*  	dl 0x000076,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479E3 9A 00 00 49 0856*  	dl 0x00009A,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479EC BD 00 00 49 0857*  	dl 0x0000BD,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479F5 E1 00 00 49 0858*  	dl 0x0000E1,0x000049,BUF_52_004
       00 00 68 02 
       00          
0479FE 04 01 00 49 0859*  	dl 0x000104,0x000049,BUF_52_004
       00 00 68 02 
       00          
047A07 28 01 00 49 0860*  	dl 0x000128,0x000049,BUF_52_004
       00 00 68 02 
       00          
047A10 0F 00 00 48 0861*  	dl 0x00000F,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A19 3D 00 00 48 0862*  	dl 0x00003D,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A22 6A 00 00 48 0863*  	dl 0x00006A,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A2B 98 00 00 48 0864*  	dl 0x000098,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A34 C5 00 00 48 0865*  	dl 0x0000C5,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A3D F3 00 00 48 0866*  	dl 0x0000F3,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A46 20 01 00 48 0867*  	dl 0x000120,0x000048,BUF_52_020
       00 00 69 02 
       00          
047A4F 16 00 00 45 0868*  	dl 0x000016,0x000045,BUF_52_032
       00 00 6A 02 
       00          
047A58 55 00 00 45 0869*  	dl 0x000055,0x000045,BUF_52_032
       00 00 6A 02 
       00          
047A61 96 00 00 45 0870*  	dl 0x000096,0x000045,BUF_52_032
       00 00 6A 02 
       00          
047A6A D6 00 00 45 0871*  	dl 0x0000D6,0x000045,BUF_52_032
       00 00 6A 02 
       00          
047A73 16 01 00 45 0872*  	dl 0x000116,0x000045,BUF_52_032
       00 00 6A 02 
       00          
047A7C 24 00 00 3E 0873*  	dl 0x000024,0x00003E,BUF_52_040
       00 00 6B 02 
       00          
047A85 8E 00 00 3E 0874*  	dl 0x00008E,0x00003E,BUF_52_040
       00 00 6B 02 
       00          
047A8E F9 00 00 3E 0875*  	dl 0x0000F9,0x00003E,BUF_52_040
       00 00 6B 02 
       00          
047A97 6B 00 00 1C 0876*  	dl 0x00006B,0x00001C,BUF_52_044
       00 00 6C 02 
       00          
047AA0             0877*  
047AA0             0878*  sprite_obj_255: ; placeholder to keep the assembler happy, CANNOT BE A VALID sprite_obj
047AA0             0024   	include "src/asm/font_itc_honda.asm"
047AA0             0001*  ; Bitmap indices:
047AA0             0002*  BUF_4384: equ 0x1120 ; 32
047AA0             0003*  ; Missing character 33 !
047AA0             0004*  ; Missing character 34 "
047AA0             0005*  ; Missing character 35 #
047AA0             0006*  ; Missing character 36 $
047AA0             0007*  ; Missing character 37 %
047AA0             0008*  ; Missing character 38 &
047AA0             0009*  ; Missing character 39 '
047AA0             0010*  ; Missing character 40 (
047AA0             0011*  ; Missing character 41 )
047AA0             0012*  ; Missing character 42 *
047AA0             0013*  ; Missing character 43 +
047AA0             0014*  ; Missing character 44 ,
047AA0             0015*  ; Missing character 45 -
047AA0             0016*  BUF_4398: equ 0x112E ; 46 .
047AA0             0017*  ; Missing character 47 /
047AA0             0018*  BUF_4400: equ 0x1130 ; 48 0
047AA0             0019*  BUF_4401: equ 0x1131 ; 49 1
047AA0             0020*  BUF_4402: equ 0x1132 ; 50 2
047AA0             0021*  BUF_4403: equ 0x1133 ; 51 3
047AA0             0022*  BUF_4404: equ 0x1134 ; 52 4
047AA0             0023*  BUF_4405: equ 0x1135 ; 53 5
047AA0             0024*  BUF_4406: equ 0x1136 ; 54 6
047AA0             0025*  BUF_4407: equ 0x1137 ; 55 7
047AA0             0026*  BUF_4408: equ 0x1138 ; 56 8
047AA0             0027*  BUF_4409: equ 0x1139 ; 57 9
047AA0             0028*  ; Missing character 58 :
047AA0             0029*  ; Missing character 59 ;
047AA0             0030*  ; Missing character 60 <
047AA0             0031*  ; Missing character 61 =
047AA0             0032*  ; Missing character 62 >
047AA0             0033*  ; Missing character 63 ?
047AA0             0034*  ; Missing character 64 @
047AA0             0035*  BUF_4417: equ 0x1141 ; 65 A
047AA0             0036*  BUF_4418: equ 0x1142 ; 66 B
047AA0             0037*  BUF_4419: equ 0x1143 ; 67 C
047AA0             0038*  BUF_4420: equ 0x1144 ; 68 D
047AA0             0039*  BUF_4421: equ 0x1145 ; 69 E
047AA0             0040*  BUF_4422: equ 0x1146 ; 70 F
047AA0             0041*  BUF_4423: equ 0x1147 ; 71 G
047AA0             0042*  BUF_4424: equ 0x1148 ; 72 H
047AA0             0043*  BUF_4425: equ 0x1149 ; 73 I
047AA0             0044*  BUF_4426: equ 0x114A ; 74 J
047AA0             0045*  BUF_4427: equ 0x114B ; 75 K
047AA0             0046*  BUF_4428: equ 0x114C ; 76 L
047AA0             0047*  BUF_4429: equ 0x114D ; 77 M
047AA0             0048*  BUF_4430: equ 0x114E ; 78 N
047AA0             0049*  BUF_4431: equ 0x114F ; 79 O
047AA0             0050*  BUF_4432: equ 0x1150 ; 80 P
047AA0             0051*  BUF_4433: equ 0x1151 ; 81 Q
047AA0             0052*  BUF_4434: equ 0x1152 ; 82 R
047AA0             0053*  BUF_4435: equ 0x1153 ; 83 S
047AA0             0054*  BUF_4436: equ 0x1154 ; 84 T
047AA0             0055*  BUF_4437: equ 0x1155 ; 85 U
047AA0             0056*  BUF_4438: equ 0x1156 ; 86 V
047AA0             0057*  BUF_4439: equ 0x1157 ; 87 W
047AA0             0058*  BUF_4440: equ 0x1158 ; 88 X
047AA0             0059*  BUF_4441: equ 0x1159 ; 89 Y
047AA0             0060*  BUF_4442: equ 0x115A ; 90 Z
047AA0             0061*  ; Missing character 91 [
047AA0             0062*  ; Missing character 92 \
047AA0             0063*  ; Missing character 93 ]
047AA0             0064*  ; Missing character 94 ^
047AA0             0065*  ; Missing character 95 _
047AA0             0066*  ; Missing character 96 `
047AA0             0067*  BUF_4449: equ 0x1161 ; 97 a
047AA0             0068*  BUF_4450: equ 0x1162 ; 98 b
047AA0             0069*  BUF_4451: equ 0x1163 ; 99 c
047AA0             0070*  BUF_4452: equ 0x1164 ; 100 d
047AA0             0071*  BUF_4453: equ 0x1165 ; 101 e
047AA0             0072*  BUF_4454: equ 0x1166 ; 102 f
047AA0             0073*  BUF_4455: equ 0x1167 ; 103 g
047AA0             0074*  BUF_4456: equ 0x1168 ; 104 h
047AA0             0075*  BUF_4457: equ 0x1169 ; 105 i
047AA0             0076*  BUF_4458: equ 0x116A ; 106 j
047AA0             0077*  BUF_4459: equ 0x116B ; 107 k
047AA0             0078*  BUF_4460: equ 0x116C ; 108 l
047AA0             0079*  BUF_4461: equ 0x116D ; 109 m
047AA0             0080*  BUF_4462: equ 0x116E ; 110 n
047AA0             0081*  BUF_4463: equ 0x116F ; 111 o
047AA0             0082*  BUF_4464: equ 0x1170 ; 112 p
047AA0             0083*  BUF_4465: equ 0x1171 ; 113 q
047AA0             0084*  BUF_4466: equ 0x1172 ; 114 r
047AA0             0085*  BUF_4467: equ 0x1173 ; 115 s
047AA0             0086*  BUF_4468: equ 0x1174 ; 116 t
047AA0             0087*  BUF_4469: equ 0x1175 ; 117 u
047AA0             0088*  BUF_4470: equ 0x1176 ; 118 v
047AA0             0089*  BUF_4471: equ 0x1177 ; 119 w
047AA0             0090*  BUF_4472: equ 0x1178 ; 120 x
047AA0             0091*  BUF_4473: equ 0x1179 ; 121 y
047AA0             0092*  BUF_4474: equ 0x117A ; 122 z
047AA0             0093*  ; [y_offset, dim_y, dim_x], buffer_id label: ; mind the little-endian order when fetching these!!!
047AA0             0094*  font_itc_honda:
047AA0 06 01 00 20 0095*  	dl 0x000106,BUF_4384
       11 00       
047AA6 06 01 00 20 0096*  	dl 0x000106,BUF_4384 ; Missing character 33
       11 00       
047AAC 06 01 00 20 0097*  	dl 0x000106,BUF_4384 ; Missing character 34
       11 00       
047AB2 06 01 00 20 0098*  	dl 0x000106,BUF_4384 ; Missing character 35
       11 00       
047AB8 06 01 00 20 0099*  	dl 0x000106,BUF_4384 ; Missing character 36
       11 00       
047ABE 06 01 00 20 0100*  	dl 0x000106,BUF_4384 ; Missing character 37
       11 00       
047AC4 06 01 00 20 0101*  	dl 0x000106,BUF_4384 ; Missing character 38
       11 00       
047ACA 06 01 00 20 0102*  	dl 0x000106,BUF_4384 ; Missing character 39
       11 00       
047AD0 06 01 00 20 0103*  	dl 0x000106,BUF_4384 ; Missing character 40
       11 00       
047AD6 06 01 00 20 0104*  	dl 0x000106,BUF_4384 ; Missing character 41
       11 00       
047ADC 06 01 00 20 0105*  	dl 0x000106,BUF_4384 ; Missing character 42
       11 00       
047AE2 06 01 00 20 0106*  	dl 0x000106,BUF_4384 ; Missing character 43
       11 00       
047AE8 06 01 00 20 0107*  	dl 0x000106,BUF_4384 ; Missing character 44
       11 00       
047AEE 06 01 00 20 0108*  	dl 0x000106,BUF_4384 ; Missing character 45
       11 00       
047AF4 05 05 0E 2E 0109*  	dl 0x0E0505,BUF_4398
       11 00       
047AFA 06 01 00 20 0110*  	dl 0x000106,BUF_4384 ; Missing character 47
       11 00       
047B00 0A 12 00 30 0111*  	dl 0x00120A,BUF_4400
       11 00       
047B06 04 12 00 31 0112*  	dl 0x001204,BUF_4401
       11 00       
047B0C 09 12 00 32 0113*  	dl 0x001209,BUF_4402
       11 00       
047B12 0A 12 00 33 0114*  	dl 0x00120A,BUF_4403
       11 00       
047B18 0C 12 00 34 0115*  	dl 0x00120C,BUF_4404
       11 00       
047B1E 0A 12 00 35 0116*  	dl 0x00120A,BUF_4405
       11 00       
047B24 0A 12 00 36 0117*  	dl 0x00120A,BUF_4406
       11 00       
047B2A 08 12 00 37 0118*  	dl 0x001208,BUF_4407
       11 00       
047B30 0A 12 00 38 0119*  	dl 0x00120A,BUF_4408
       11 00       
047B36 0A 12 00 39 0120*  	dl 0x00120A,BUF_4409
       11 00       
047B3C 06 01 00 20 0121*  	dl 0x000106,BUF_4384 ; Missing character 58
       11 00       
047B42 06 01 00 20 0122*  	dl 0x000106,BUF_4384 ; Missing character 59
       11 00       
047B48 06 01 00 20 0123*  	dl 0x000106,BUF_4384 ; Missing character 60
       11 00       
047B4E 06 01 00 20 0124*  	dl 0x000106,BUF_4384 ; Missing character 61
       11 00       
047B54 06 01 00 20 0125*  	dl 0x000106,BUF_4384 ; Missing character 62
       11 00       
047B5A 06 01 00 20 0126*  	dl 0x000106,BUF_4384 ; Missing character 63
       11 00       
047B60 06 01 00 20 0127*  	dl 0x000106,BUF_4384 ; Missing character 64
       11 00       
047B66 0A 12 01 41 0128*  	dl 0x01120A,BUF_4417
       11 00       
047B6C 0A 12 00 42 0129*  	dl 0x00120A,BUF_4418
       11 00       
047B72 08 13 00 43 0130*  	dl 0x001308,BUF_4419
       11 00       
047B78 0A 12 00 44 0131*  	dl 0x00120A,BUF_4420
       11 00       
047B7E 08 12 00 45 0132*  	dl 0x001208,BUF_4421
       11 00       
047B84 08 12 00 46 0133*  	dl 0x001208,BUF_4422
       11 00       
047B8A 0A 12 00 47 0134*  	dl 0x00120A,BUF_4423
       11 00       
047B90 0A 12 00 48 0135*  	dl 0x00120A,BUF_4424
       11 00       
047B96 03 12 00 49 0136*  	dl 0x001203,BUF_4425
       11 00       
047B9C 06 12 00 4A 0137*  	dl 0x001206,BUF_4426
       11 00       
047BA2 0A 12 00 4B 0138*  	dl 0x00120A,BUF_4427
       11 00       
047BA8 08 12 01 4C 0139*  	dl 0x011208,BUF_4428
       11 00       
047BAE 0E 12 00 4D 0140*  	dl 0x00120E,BUF_4429
       11 00       
047BB4 0A 12 00 4E 0141*  	dl 0x00120A,BUF_4430
       11 00       
047BBA 0A 12 00 4F 0142*  	dl 0x00120A,BUF_4431
       11 00       
047BC0 0A 12 00 50 0143*  	dl 0x00120A,BUF_4432
       11 00       
047BC6 0A 15 00 51 0144*  	dl 0x00150A,BUF_4433
       11 00       
047BCC 0A 12 00 52 0145*  	dl 0x00120A,BUF_4434
       11 00       
047BD2 09 13 00 53 0146*  	dl 0x001309,BUF_4435
       11 00       
047BD8 0A 12 00 54 0147*  	dl 0x00120A,BUF_4436
       11 00       
047BDE 0A 12 00 55 0148*  	dl 0x00120A,BUF_4437
       11 00       
047BE4 0A 12 00 56 0149*  	dl 0x00120A,BUF_4438
       11 00       
047BEA 10 12 00 57 0150*  	dl 0x001210,BUF_4439
       11 00       
047BF0 0A 12 00 58 0151*  	dl 0x00120A,BUF_4440
       11 00       
047BF6 0A 12 01 59 0152*  	dl 0x01120A,BUF_4441
       11 00       
047BFC 09 12 01 5A 0153*  	dl 0x011209,BUF_4442
       11 00       
047C02 06 01 00 20 0154*  	dl 0x000106,BUF_4384 ; Missing character 91
       11 00       
047C08 06 01 00 20 0155*  	dl 0x000106,BUF_4384 ; Missing character 92
       11 00       
047C0E 06 01 00 20 0156*  	dl 0x000106,BUF_4384 ; Missing character 93
       11 00       
047C14 06 01 00 20 0157*  	dl 0x000106,BUF_4384 ; Missing character 94
       11 00       
047C1A 06 01 00 20 0158*  	dl 0x000106,BUF_4384 ; Missing character 95
       11 00       
047C20 06 01 00 20 0159*  	dl 0x000106,BUF_4384 ; Missing character 96
       11 00       
047C26 08 0C 06 61 0160*  	dl 0x060C08,BUF_4449
       11 00       
047C2C 09 12 01 62 0161*  	dl 0x011209,BUF_4450
       11 00       
047C32 07 0C 06 63 0162*  	dl 0x060C07,BUF_4451
       11 00       
047C38 09 12 00 64 0163*  	dl 0x001209,BUF_4452
       11 00       
047C3E 08 0C 06 65 0164*  	dl 0x060C08,BUF_4453
       11 00       
047C44 09 12 00 66 0165*  	dl 0x001209,BUF_4454
       11 00       
047C4A 09 12 06 67 0166*  	dl 0x061209,BUF_4455
       11 00       
047C50 09 12 01 68 0167*  	dl 0x011209,BUF_4456
       11 00       
047C56 04 12 00 69 0168*  	dl 0x001204,BUF_4457
       11 00       
047C5C 08 18 00 6A 0169*  	dl 0x001808,BUF_4458
       11 00       
047C62 09 12 01 6B 0170*  	dl 0x011209,BUF_4459
       11 00       
047C68 03 12 00 6C 0171*  	dl 0x001203,BUF_4460
       11 00       
047C6E 0E 0D 06 6D 0172*  	dl 0x060D0E,BUF_4461
       11 00       
047C74 09 0C 06 6E 0173*  	dl 0x060C09,BUF_4462
       11 00       
047C7A 09 0C 06 6F 0174*  	dl 0x060C09,BUF_4463
       11 00       
047C80 09 12 06 70 0175*  	dl 0x061209,BUF_4464
       11 00       
047C86 09 12 06 71 0176*  	dl 0x061209,BUF_4465
       11 00       
047C8C 06 0D 06 72 0177*  	dl 0x060D06,BUF_4466
       11 00       
047C92 08 0D 06 73 0178*  	dl 0x060D08,BUF_4467
       11 00       
047C98 07 0F 03 74 0179*  	dl 0x030F07,BUF_4468
       11 00       
047C9E 09 0C 06 75 0180*  	dl 0x060C09,BUF_4469
       11 00       
047CA4 09 0C 06 76 0181*  	dl 0x060C09,BUF_4470
       11 00       
047CAA 0E 0C 06 77 0182*  	dl 0x060C0E,BUF_4471
       11 00       
047CB0 09 0C 06 78 0183*  	dl 0x060C09,BUF_4472
       11 00       
047CB6 09 11 06 79 0184*  	dl 0x061109,BUF_4473
       11 00       
047CBC 09 0C 06 7A 0185*  	dl 0x060C09,BUF_4474
       11 00       
047CC2             0186*  
047CC2             0187*  ; Import .rgba2 bitmap files and load them into VDP buffers
047CC2             0188*  load_font_itc_honda:
047CC2             0189*  
047CC2 21 03 86 04 0190*  	ld hl,Fhonda032
047CC6 11 C5 C2 04 0191*  	ld de,filedata
047CCA 01 00 00 01 0192*  	ld bc,65536
047CCE 3E 01       0193*  	ld a,mos_load
047CD0 5B CF       0194*  	RST.LIL 08h
047CD2 21 20 11 00 0195*  	ld hl,BUF_4384
047CD6 01 06 00 00 0196*  	ld bc,6
047CDA 11 01 00 00 0197*  	ld de,1
047CDE DD 21 06 00 0198*  	ld ix,6
       00          
047CE3 CD A5 B6 04 0199*  	call vdu_load_img
047CE7             0200*  ; Missing character 33
047CE7             0201*  ; Missing character 34
047CE7             0202*  ; Missing character 35
047CE7             0203*  ; Missing character 36
047CE7             0204*  ; Missing character 37
047CE7             0205*  ; Missing character 38
047CE7             0206*  ; Missing character 39
047CE7             0207*  ; Missing character 40
047CE7             0208*  ; Missing character 41
047CE7             0209*  ; Missing character 42
047CE7             0210*  ; Missing character 43
047CE7             0211*  ; Missing character 44
047CE7             0212*  ; Missing character 45
047CE7             0213*  
047CE7 21 19 86 04 0214*  	ld hl,Fhonda046
047CEB 11 C5 C2 04 0215*  	ld de,filedata
047CEF 01 00 00 01 0216*  	ld bc,65536
047CF3 3E 01       0217*  	ld a,mos_load
047CF5 5B CF       0218*  	RST.LIL 08h
047CF7 21 2E 11 00 0219*  	ld hl,BUF_4398
047CFB 01 05 00 00 0220*  	ld bc,5
047CFF 11 05 00 00 0221*  	ld de,5
047D03 DD 21 19 00 0222*  	ld ix,25
       00          
047D08 CD A5 B6 04 0223*  	call vdu_load_img
047D0C             0224*  ; Missing character 47
047D0C             0225*  
047D0C 21 2F 86 04 0226*  	ld hl,Fhonda048
047D10 11 C5 C2 04 0227*  	ld de,filedata
047D14 01 00 00 01 0228*  	ld bc,65536
047D18 3E 01       0229*  	ld a,mos_load
047D1A 5B CF       0230*  	RST.LIL 08h
047D1C 21 30 11 00 0231*  	ld hl,BUF_4400
047D20 01 0A 00 00 0232*  	ld bc,10
047D24 11 12 00 00 0233*  	ld de,18
047D28 DD 21 B4 00 0234*  	ld ix,180
       00          
047D2D CD A5 B6 04 0235*  	call vdu_load_img
047D31             0236*  
047D31 21 45 86 04 0237*  	ld hl,Fhonda049
047D35 11 C5 C2 04 0238*  	ld de,filedata
047D39 01 00 00 01 0239*  	ld bc,65536
047D3D 3E 01       0240*  	ld a,mos_load
047D3F 5B CF       0241*  	RST.LIL 08h
047D41 21 31 11 00 0242*  	ld hl,BUF_4401
047D45 01 04 00 00 0243*  	ld bc,4
047D49 11 12 00 00 0244*  	ld de,18
047D4D DD 21 48 00 0245*  	ld ix,72
       00          
047D52 CD A5 B6 04 0246*  	call vdu_load_img
047D56             0247*  
047D56 21 5B 86 04 0248*  	ld hl,Fhonda050
047D5A 11 C5 C2 04 0249*  	ld de,filedata
047D5E 01 00 00 01 0250*  	ld bc,65536
047D62 3E 01       0251*  	ld a,mos_load
047D64 5B CF       0252*  	RST.LIL 08h
047D66 21 32 11 00 0253*  	ld hl,BUF_4402
047D6A 01 09 00 00 0254*  	ld bc,9
047D6E 11 12 00 00 0255*  	ld de,18
047D72 DD 21 A2 00 0256*  	ld ix,162
       00          
047D77 CD A5 B6 04 0257*  	call vdu_load_img
047D7B             0258*  
047D7B 21 71 86 04 0259*  	ld hl,Fhonda051
047D7F 11 C5 C2 04 0260*  	ld de,filedata
047D83 01 00 00 01 0261*  	ld bc,65536
047D87 3E 01       0262*  	ld a,mos_load
047D89 5B CF       0263*  	RST.LIL 08h
047D8B 21 33 11 00 0264*  	ld hl,BUF_4403
047D8F 01 0A 00 00 0265*  	ld bc,10
047D93 11 12 00 00 0266*  	ld de,18
047D97 DD 21 B4 00 0267*  	ld ix,180
       00          
047D9C CD A5 B6 04 0268*  	call vdu_load_img
047DA0             0269*  
047DA0 21 87 86 04 0270*  	ld hl,Fhonda052
047DA4 11 C5 C2 04 0271*  	ld de,filedata
047DA8 01 00 00 01 0272*  	ld bc,65536
047DAC 3E 01       0273*  	ld a,mos_load
047DAE 5B CF       0274*  	RST.LIL 08h
047DB0 21 34 11 00 0275*  	ld hl,BUF_4404
047DB4 01 0C 00 00 0276*  	ld bc,12
047DB8 11 12 00 00 0277*  	ld de,18
047DBC DD 21 D8 00 0278*  	ld ix,216
       00          
047DC1 CD A5 B6 04 0279*  	call vdu_load_img
047DC5             0280*  
047DC5 21 9D 86 04 0281*  	ld hl,Fhonda053
047DC9 11 C5 C2 04 0282*  	ld de,filedata
047DCD 01 00 00 01 0283*  	ld bc,65536
047DD1 3E 01       0284*  	ld a,mos_load
047DD3 5B CF       0285*  	RST.LIL 08h
047DD5 21 35 11 00 0286*  	ld hl,BUF_4405
047DD9 01 0A 00 00 0287*  	ld bc,10
047DDD 11 12 00 00 0288*  	ld de,18
047DE1 DD 21 B4 00 0289*  	ld ix,180
       00          
047DE6 CD A5 B6 04 0290*  	call vdu_load_img
047DEA             0291*  
047DEA 21 B3 86 04 0292*  	ld hl,Fhonda054
047DEE 11 C5 C2 04 0293*  	ld de,filedata
047DF2 01 00 00 01 0294*  	ld bc,65536
047DF6 3E 01       0295*  	ld a,mos_load
047DF8 5B CF       0296*  	RST.LIL 08h
047DFA 21 36 11 00 0297*  	ld hl,BUF_4406
047DFE 01 0A 00 00 0298*  	ld bc,10
047E02 11 12 00 00 0299*  	ld de,18
047E06 DD 21 B4 00 0300*  	ld ix,180
       00          
047E0B CD A5 B6 04 0301*  	call vdu_load_img
047E0F             0302*  
047E0F 21 C9 86 04 0303*  	ld hl,Fhonda055
047E13 11 C5 C2 04 0304*  	ld de,filedata
047E17 01 00 00 01 0305*  	ld bc,65536
047E1B 3E 01       0306*  	ld a,mos_load
047E1D 5B CF       0307*  	RST.LIL 08h
047E1F 21 37 11 00 0308*  	ld hl,BUF_4407
047E23 01 08 00 00 0309*  	ld bc,8
047E27 11 12 00 00 0310*  	ld de,18
047E2B DD 21 90 00 0311*  	ld ix,144
       00          
047E30 CD A5 B6 04 0312*  	call vdu_load_img
047E34             0313*  
047E34 21 DF 86 04 0314*  	ld hl,Fhonda056
047E38 11 C5 C2 04 0315*  	ld de,filedata
047E3C 01 00 00 01 0316*  	ld bc,65536
047E40 3E 01       0317*  	ld a,mos_load
047E42 5B CF       0318*  	RST.LIL 08h
047E44 21 38 11 00 0319*  	ld hl,BUF_4408
047E48 01 0A 00 00 0320*  	ld bc,10
047E4C 11 12 00 00 0321*  	ld de,18
047E50 DD 21 B4 00 0322*  	ld ix,180
       00          
047E55 CD A5 B6 04 0323*  	call vdu_load_img
047E59             0324*  
047E59 21 F5 86 04 0325*  	ld hl,Fhonda057
047E5D 11 C5 C2 04 0326*  	ld de,filedata
047E61 01 00 00 01 0327*  	ld bc,65536
047E65 3E 01       0328*  	ld a,mos_load
047E67 5B CF       0329*  	RST.LIL 08h
047E69 21 39 11 00 0330*  	ld hl,BUF_4409
047E6D 01 0A 00 00 0331*  	ld bc,10
047E71 11 12 00 00 0332*  	ld de,18
047E75 DD 21 B4 00 0333*  	ld ix,180
       00          
047E7A CD A5 B6 04 0334*  	call vdu_load_img
047E7E             0335*  ; Missing character 58
047E7E             0336*  ; Missing character 59
047E7E             0337*  ; Missing character 60
047E7E             0338*  ; Missing character 61
047E7E             0339*  ; Missing character 62
047E7E             0340*  ; Missing character 63
047E7E             0341*  ; Missing character 64
047E7E             0342*  
047E7E 21 0B 87 04 0343*  	ld hl,Fhonda065
047E82 11 C5 C2 04 0344*  	ld de,filedata
047E86 01 00 00 01 0345*  	ld bc,65536
047E8A 3E 01       0346*  	ld a,mos_load
047E8C 5B CF       0347*  	RST.LIL 08h
047E8E 21 41 11 00 0348*  	ld hl,BUF_4417
047E92 01 0A 00 00 0349*  	ld bc,10
047E96 11 12 00 00 0350*  	ld de,18
047E9A DD 21 B4 00 0351*  	ld ix,180
       00          
047E9F CD A5 B6 04 0352*  	call vdu_load_img
047EA3             0353*  
047EA3 21 21 87 04 0354*  	ld hl,Fhonda066
047EA7 11 C5 C2 04 0355*  	ld de,filedata
047EAB 01 00 00 01 0356*  	ld bc,65536
047EAF 3E 01       0357*  	ld a,mos_load
047EB1 5B CF       0358*  	RST.LIL 08h
047EB3 21 42 11 00 0359*  	ld hl,BUF_4418
047EB7 01 0A 00 00 0360*  	ld bc,10
047EBB 11 12 00 00 0361*  	ld de,18
047EBF DD 21 B4 00 0362*  	ld ix,180
       00          
047EC4 CD A5 B6 04 0363*  	call vdu_load_img
047EC8             0364*  
047EC8 21 37 87 04 0365*  	ld hl,Fhonda067
047ECC 11 C5 C2 04 0366*  	ld de,filedata
047ED0 01 00 00 01 0367*  	ld bc,65536
047ED4 3E 01       0368*  	ld a,mos_load
047ED6 5B CF       0369*  	RST.LIL 08h
047ED8 21 43 11 00 0370*  	ld hl,BUF_4419
047EDC 01 08 00 00 0371*  	ld bc,8
047EE0 11 13 00 00 0372*  	ld de,19
047EE4 DD 21 98 00 0373*  	ld ix,152
       00          
047EE9 CD A5 B6 04 0374*  	call vdu_load_img
047EED             0375*  
047EED 21 4D 87 04 0376*  	ld hl,Fhonda068
047EF1 11 C5 C2 04 0377*  	ld de,filedata
047EF5 01 00 00 01 0378*  	ld bc,65536
047EF9 3E 01       0379*  	ld a,mos_load
047EFB 5B CF       0380*  	RST.LIL 08h
047EFD 21 44 11 00 0381*  	ld hl,BUF_4420
047F01 01 0A 00 00 0382*  	ld bc,10
047F05 11 12 00 00 0383*  	ld de,18
047F09 DD 21 B4 00 0384*  	ld ix,180
       00          
047F0E CD A5 B6 04 0385*  	call vdu_load_img
047F12             0386*  
047F12 21 63 87 04 0387*  	ld hl,Fhonda069
047F16 11 C5 C2 04 0388*  	ld de,filedata
047F1A 01 00 00 01 0389*  	ld bc,65536
047F1E 3E 01       0390*  	ld a,mos_load
047F20 5B CF       0391*  	RST.LIL 08h
047F22 21 45 11 00 0392*  	ld hl,BUF_4421
047F26 01 08 00 00 0393*  	ld bc,8
047F2A 11 12 00 00 0394*  	ld de,18
047F2E DD 21 90 00 0395*  	ld ix,144
       00          
047F33 CD A5 B6 04 0396*  	call vdu_load_img
047F37             0397*  
047F37 21 79 87 04 0398*  	ld hl,Fhonda070
047F3B 11 C5 C2 04 0399*  	ld de,filedata
047F3F 01 00 00 01 0400*  	ld bc,65536
047F43 3E 01       0401*  	ld a,mos_load
047F45 5B CF       0402*  	RST.LIL 08h
047F47 21 46 11 00 0403*  	ld hl,BUF_4422
047F4B 01 08 00 00 0404*  	ld bc,8
047F4F 11 12 00 00 0405*  	ld de,18
047F53 DD 21 90 00 0406*  	ld ix,144
       00          
047F58 CD A5 B6 04 0407*  	call vdu_load_img
047F5C             0408*  
047F5C 21 8F 87 04 0409*  	ld hl,Fhonda071
047F60 11 C5 C2 04 0410*  	ld de,filedata
047F64 01 00 00 01 0411*  	ld bc,65536
047F68 3E 01       0412*  	ld a,mos_load
047F6A 5B CF       0413*  	RST.LIL 08h
047F6C 21 47 11 00 0414*  	ld hl,BUF_4423
047F70 01 0A 00 00 0415*  	ld bc,10
047F74 11 12 00 00 0416*  	ld de,18
047F78 DD 21 B4 00 0417*  	ld ix,180
       00          
047F7D CD A5 B6 04 0418*  	call vdu_load_img
047F81             0419*  
047F81 21 A5 87 04 0420*  	ld hl,Fhonda072
047F85 11 C5 C2 04 0421*  	ld de,filedata
047F89 01 00 00 01 0422*  	ld bc,65536
047F8D 3E 01       0423*  	ld a,mos_load
047F8F 5B CF       0424*  	RST.LIL 08h
047F91 21 48 11 00 0425*  	ld hl,BUF_4424
047F95 01 0A 00 00 0426*  	ld bc,10
047F99 11 12 00 00 0427*  	ld de,18
047F9D DD 21 B4 00 0428*  	ld ix,180
       00          
047FA2 CD A5 B6 04 0429*  	call vdu_load_img
047FA6             0430*  
047FA6 21 BB 87 04 0431*  	ld hl,Fhonda073
047FAA 11 C5 C2 04 0432*  	ld de,filedata
047FAE 01 00 00 01 0433*  	ld bc,65536
047FB2 3E 01       0434*  	ld a,mos_load
047FB4 5B CF       0435*  	RST.LIL 08h
047FB6 21 49 11 00 0436*  	ld hl,BUF_4425
047FBA 01 03 00 00 0437*  	ld bc,3
047FBE 11 12 00 00 0438*  	ld de,18
047FC2 DD 21 36 00 0439*  	ld ix,54
       00          
047FC7 CD A5 B6 04 0440*  	call vdu_load_img
047FCB             0441*  
047FCB 21 D1 87 04 0442*  	ld hl,Fhonda074
047FCF 11 C5 C2 04 0443*  	ld de,filedata
047FD3 01 00 00 01 0444*  	ld bc,65536
047FD7 3E 01       0445*  	ld a,mos_load
047FD9 5B CF       0446*  	RST.LIL 08h
047FDB 21 4A 11 00 0447*  	ld hl,BUF_4426
047FDF 01 06 00 00 0448*  	ld bc,6
047FE3 11 12 00 00 0449*  	ld de,18
047FE7 DD 21 6C 00 0450*  	ld ix,108
       00          
047FEC CD A5 B6 04 0451*  	call vdu_load_img
047FF0             0452*  
047FF0 21 E7 87 04 0453*  	ld hl,Fhonda075
047FF4 11 C5 C2 04 0454*  	ld de,filedata
047FF8 01 00 00 01 0455*  	ld bc,65536
047FFC 3E 01       0456*  	ld a,mos_load
047FFE 5B CF       0457*  	RST.LIL 08h
048000 21 4B 11 00 0458*  	ld hl,BUF_4427
048004 01 0A 00 00 0459*  	ld bc,10
048008 11 12 00 00 0460*  	ld de,18
04800C DD 21 B4 00 0461*  	ld ix,180
       00          
048011 CD A5 B6 04 0462*  	call vdu_load_img
048015             0463*  
048015 21 FD 87 04 0464*  	ld hl,Fhonda076
048019 11 C5 C2 04 0465*  	ld de,filedata
04801D 01 00 00 01 0466*  	ld bc,65536
048021 3E 01       0467*  	ld a,mos_load
048023 5B CF       0468*  	RST.LIL 08h
048025 21 4C 11 00 0469*  	ld hl,BUF_4428
048029 01 08 00 00 0470*  	ld bc,8
04802D 11 12 00 00 0471*  	ld de,18
048031 DD 21 90 00 0472*  	ld ix,144
       00          
048036 CD A5 B6 04 0473*  	call vdu_load_img
04803A             0474*  
04803A 21 13 88 04 0475*  	ld hl,Fhonda077
04803E 11 C5 C2 04 0476*  	ld de,filedata
048042 01 00 00 01 0477*  	ld bc,65536
048046 3E 01       0478*  	ld a,mos_load
048048 5B CF       0479*  	RST.LIL 08h
04804A 21 4D 11 00 0480*  	ld hl,BUF_4429
04804E 01 0E 00 00 0481*  	ld bc,14
048052 11 12 00 00 0482*  	ld de,18
048056 DD 21 FC 00 0483*  	ld ix,252
       00          
04805B CD A5 B6 04 0484*  	call vdu_load_img
04805F             0485*  
04805F 21 29 88 04 0486*  	ld hl,Fhonda078
048063 11 C5 C2 04 0487*  	ld de,filedata
048067 01 00 00 01 0488*  	ld bc,65536
04806B 3E 01       0489*  	ld a,mos_load
04806D 5B CF       0490*  	RST.LIL 08h
04806F 21 4E 11 00 0491*  	ld hl,BUF_4430
048073 01 0A 00 00 0492*  	ld bc,10
048077 11 12 00 00 0493*  	ld de,18
04807B DD 21 B4 00 0494*  	ld ix,180
       00          
048080 CD A5 B6 04 0495*  	call vdu_load_img
048084             0496*  
048084 21 3F 88 04 0497*  	ld hl,Fhonda079
048088 11 C5 C2 04 0498*  	ld de,filedata
04808C 01 00 00 01 0499*  	ld bc,65536
048090 3E 01       0500*  	ld a,mos_load
048092 5B CF       0501*  	RST.LIL 08h
048094 21 4F 11 00 0502*  	ld hl,BUF_4431
048098 01 0A 00 00 0503*  	ld bc,10
04809C 11 12 00 00 0504*  	ld de,18
0480A0 DD 21 B4 00 0505*  	ld ix,180
       00          
0480A5 CD A5 B6 04 0506*  	call vdu_load_img
0480A9             0507*  
0480A9 21 55 88 04 0508*  	ld hl,Fhonda080
0480AD 11 C5 C2 04 0509*  	ld de,filedata
0480B1 01 00 00 01 0510*  	ld bc,65536
0480B5 3E 01       0511*  	ld a,mos_load
0480B7 5B CF       0512*  	RST.LIL 08h
0480B9 21 50 11 00 0513*  	ld hl,BUF_4432
0480BD 01 0A 00 00 0514*  	ld bc,10
0480C1 11 12 00 00 0515*  	ld de,18
0480C5 DD 21 B4 00 0516*  	ld ix,180
       00          
0480CA CD A5 B6 04 0517*  	call vdu_load_img
0480CE             0518*  
0480CE 21 6B 88 04 0519*  	ld hl,Fhonda081
0480D2 11 C5 C2 04 0520*  	ld de,filedata
0480D6 01 00 00 01 0521*  	ld bc,65536
0480DA 3E 01       0522*  	ld a,mos_load
0480DC 5B CF       0523*  	RST.LIL 08h
0480DE 21 51 11 00 0524*  	ld hl,BUF_4433
0480E2 01 0A 00 00 0525*  	ld bc,10
0480E6 11 15 00 00 0526*  	ld de,21
0480EA DD 21 D2 00 0527*  	ld ix,210
       00          
0480EF CD A5 B6 04 0528*  	call vdu_load_img
0480F3             0529*  
0480F3 21 81 88 04 0530*  	ld hl,Fhonda082
0480F7 11 C5 C2 04 0531*  	ld de,filedata
0480FB 01 00 00 01 0532*  	ld bc,65536
0480FF 3E 01       0533*  	ld a,mos_load
048101 5B CF       0534*  	RST.LIL 08h
048103 21 52 11 00 0535*  	ld hl,BUF_4434
048107 01 0A 00 00 0536*  	ld bc,10
04810B 11 12 00 00 0537*  	ld de,18
04810F DD 21 B4 00 0538*  	ld ix,180
       00          
048114 CD A5 B6 04 0539*  	call vdu_load_img
048118             0540*  
048118 21 97 88 04 0541*  	ld hl,Fhonda083
04811C 11 C5 C2 04 0542*  	ld de,filedata
048120 01 00 00 01 0543*  	ld bc,65536
048124 3E 01       0544*  	ld a,mos_load
048126 5B CF       0545*  	RST.LIL 08h
048128 21 53 11 00 0546*  	ld hl,BUF_4435
04812C 01 09 00 00 0547*  	ld bc,9
048130 11 13 00 00 0548*  	ld de,19
048134 DD 21 AB 00 0549*  	ld ix,171
       00          
048139 CD A5 B6 04 0550*  	call vdu_load_img
04813D             0551*  
04813D 21 AD 88 04 0552*  	ld hl,Fhonda084
048141 11 C5 C2 04 0553*  	ld de,filedata
048145 01 00 00 01 0554*  	ld bc,65536
048149 3E 01       0555*  	ld a,mos_load
04814B 5B CF       0556*  	RST.LIL 08h
04814D 21 54 11 00 0557*  	ld hl,BUF_4436
048151 01 0A 00 00 0558*  	ld bc,10
048155 11 12 00 00 0559*  	ld de,18
048159 DD 21 B4 00 0560*  	ld ix,180
       00          
04815E CD A5 B6 04 0561*  	call vdu_load_img
048162             0562*  
048162 21 C3 88 04 0563*  	ld hl,Fhonda085
048166 11 C5 C2 04 0564*  	ld de,filedata
04816A 01 00 00 01 0565*  	ld bc,65536
04816E 3E 01       0566*  	ld a,mos_load
048170 5B CF       0567*  	RST.LIL 08h
048172 21 55 11 00 0568*  	ld hl,BUF_4437
048176 01 0A 00 00 0569*  	ld bc,10
04817A 11 12 00 00 0570*  	ld de,18
04817E DD 21 B4 00 0571*  	ld ix,180
       00          
048183 CD A5 B6 04 0572*  	call vdu_load_img
048187             0573*  
048187 21 D9 88 04 0574*  	ld hl,Fhonda086
04818B 11 C5 C2 04 0575*  	ld de,filedata
04818F 01 00 00 01 0576*  	ld bc,65536
048193 3E 01       0577*  	ld a,mos_load
048195 5B CF       0578*  	RST.LIL 08h
048197 21 56 11 00 0579*  	ld hl,BUF_4438
04819B 01 0A 00 00 0580*  	ld bc,10
04819F 11 12 00 00 0581*  	ld de,18
0481A3 DD 21 B4 00 0582*  	ld ix,180
       00          
0481A8 CD A5 B6 04 0583*  	call vdu_load_img
0481AC             0584*  
0481AC 21 EF 88 04 0585*  	ld hl,Fhonda087
0481B0 11 C5 C2 04 0586*  	ld de,filedata
0481B4 01 00 00 01 0587*  	ld bc,65536
0481B8 3E 01       0588*  	ld a,mos_load
0481BA 5B CF       0589*  	RST.LIL 08h
0481BC 21 57 11 00 0590*  	ld hl,BUF_4439
0481C0 01 10 00 00 0591*  	ld bc,16
0481C4 11 12 00 00 0592*  	ld de,18
0481C8 DD 21 20 01 0593*  	ld ix,288
       00          
0481CD CD A5 B6 04 0594*  	call vdu_load_img
0481D1             0595*  
0481D1 21 05 89 04 0596*  	ld hl,Fhonda088
0481D5 11 C5 C2 04 0597*  	ld de,filedata
0481D9 01 00 00 01 0598*  	ld bc,65536
0481DD 3E 01       0599*  	ld a,mos_load
0481DF 5B CF       0600*  	RST.LIL 08h
0481E1 21 58 11 00 0601*  	ld hl,BUF_4440
0481E5 01 0A 00 00 0602*  	ld bc,10
0481E9 11 12 00 00 0603*  	ld de,18
0481ED DD 21 B4 00 0604*  	ld ix,180
       00          
0481F2 CD A5 B6 04 0605*  	call vdu_load_img
0481F6             0606*  
0481F6 21 1B 89 04 0607*  	ld hl,Fhonda089
0481FA 11 C5 C2 04 0608*  	ld de,filedata
0481FE 01 00 00 01 0609*  	ld bc,65536
048202 3E 01       0610*  	ld a,mos_load
048204 5B CF       0611*  	RST.LIL 08h
048206 21 59 11 00 0612*  	ld hl,BUF_4441
04820A 01 0A 00 00 0613*  	ld bc,10
04820E 11 12 00 00 0614*  	ld de,18
048212 DD 21 B4 00 0615*  	ld ix,180
       00          
048217 CD A5 B6 04 0616*  	call vdu_load_img
04821B             0617*  
04821B 21 31 89 04 0618*  	ld hl,Fhonda090
04821F 11 C5 C2 04 0619*  	ld de,filedata
048223 01 00 00 01 0620*  	ld bc,65536
048227 3E 01       0621*  	ld a,mos_load
048229 5B CF       0622*  	RST.LIL 08h
04822B 21 5A 11 00 0623*  	ld hl,BUF_4442
04822F 01 09 00 00 0624*  	ld bc,9
048233 11 12 00 00 0625*  	ld de,18
048237 DD 21 A2 00 0626*  	ld ix,162
       00          
04823C CD A5 B6 04 0627*  	call vdu_load_img
048240             0628*  ; Missing character 91
048240             0629*  ; Missing character 92
048240             0630*  ; Missing character 93
048240             0631*  ; Missing character 94
048240             0632*  ; Missing character 95
048240             0633*  ; Missing character 96
048240             0634*  
048240 21 47 89 04 0635*  	ld hl,Fhonda097
048244 11 C5 C2 04 0636*  	ld de,filedata
048248 01 00 00 01 0637*  	ld bc,65536
04824C 3E 01       0638*  	ld a,mos_load
04824E 5B CF       0639*  	RST.LIL 08h
048250 21 61 11 00 0640*  	ld hl,BUF_4449
048254 01 08 00 00 0641*  	ld bc,8
048258 11 0C 00 00 0642*  	ld de,12
04825C DD 21 60 00 0643*  	ld ix,96
       00          
048261 CD A5 B6 04 0644*  	call vdu_load_img
048265             0645*  
048265 21 5D 89 04 0646*  	ld hl,Fhonda098
048269 11 C5 C2 04 0647*  	ld de,filedata
04826D 01 00 00 01 0648*  	ld bc,65536
048271 3E 01       0649*  	ld a,mos_load
048273 5B CF       0650*  	RST.LIL 08h
048275 21 62 11 00 0651*  	ld hl,BUF_4450
048279 01 09 00 00 0652*  	ld bc,9
04827D 11 12 00 00 0653*  	ld de,18
048281 DD 21 A2 00 0654*  	ld ix,162
       00          
048286 CD A5 B6 04 0655*  	call vdu_load_img
04828A             0656*  
04828A 21 73 89 04 0657*  	ld hl,Fhonda099
04828E 11 C5 C2 04 0658*  	ld de,filedata
048292 01 00 00 01 0659*  	ld bc,65536
048296 3E 01       0660*  	ld a,mos_load
048298 5B CF       0661*  	RST.LIL 08h
04829A 21 63 11 00 0662*  	ld hl,BUF_4451
04829E 01 07 00 00 0663*  	ld bc,7
0482A2 11 0C 00 00 0664*  	ld de,12
0482A6 DD 21 54 00 0665*  	ld ix,84
       00          
0482AB CD A5 B6 04 0666*  	call vdu_load_img
0482AF             0667*  
0482AF 21 89 89 04 0668*  	ld hl,Fhonda100
0482B3 11 C5 C2 04 0669*  	ld de,filedata
0482B7 01 00 00 01 0670*  	ld bc,65536
0482BB 3E 01       0671*  	ld a,mos_load
0482BD 5B CF       0672*  	RST.LIL 08h
0482BF 21 64 11 00 0673*  	ld hl,BUF_4452
0482C3 01 09 00 00 0674*  	ld bc,9
0482C7 11 12 00 00 0675*  	ld de,18
0482CB DD 21 A2 00 0676*  	ld ix,162
       00          
0482D0 CD A5 B6 04 0677*  	call vdu_load_img
0482D4             0678*  
0482D4 21 9F 89 04 0679*  	ld hl,Fhonda101
0482D8 11 C5 C2 04 0680*  	ld de,filedata
0482DC 01 00 00 01 0681*  	ld bc,65536
0482E0 3E 01       0682*  	ld a,mos_load
0482E2 5B CF       0683*  	RST.LIL 08h
0482E4 21 65 11 00 0684*  	ld hl,BUF_4453
0482E8 01 08 00 00 0685*  	ld bc,8
0482EC 11 0C 00 00 0686*  	ld de,12
0482F0 DD 21 60 00 0687*  	ld ix,96
       00          
0482F5 CD A5 B6 04 0688*  	call vdu_load_img
0482F9             0689*  
0482F9 21 B5 89 04 0690*  	ld hl,Fhonda102
0482FD 11 C5 C2 04 0691*  	ld de,filedata
048301 01 00 00 01 0692*  	ld bc,65536
048305 3E 01       0693*  	ld a,mos_load
048307 5B CF       0694*  	RST.LIL 08h
048309 21 66 11 00 0695*  	ld hl,BUF_4454
04830D 01 09 00 00 0696*  	ld bc,9
048311 11 12 00 00 0697*  	ld de,18
048315 DD 21 A2 00 0698*  	ld ix,162
       00          
04831A CD A5 B6 04 0699*  	call vdu_load_img
04831E             0700*  
04831E 21 CB 89 04 0701*  	ld hl,Fhonda103
048322 11 C5 C2 04 0702*  	ld de,filedata
048326 01 00 00 01 0703*  	ld bc,65536
04832A 3E 01       0704*  	ld a,mos_load
04832C 5B CF       0705*  	RST.LIL 08h
04832E 21 67 11 00 0706*  	ld hl,BUF_4455
048332 01 09 00 00 0707*  	ld bc,9
048336 11 12 00 00 0708*  	ld de,18
04833A DD 21 A2 00 0709*  	ld ix,162
       00          
04833F CD A5 B6 04 0710*  	call vdu_load_img
048343             0711*  
048343 21 E1 89 04 0712*  	ld hl,Fhonda104
048347 11 C5 C2 04 0713*  	ld de,filedata
04834B 01 00 00 01 0714*  	ld bc,65536
04834F 3E 01       0715*  	ld a,mos_load
048351 5B CF       0716*  	RST.LIL 08h
048353 21 68 11 00 0717*  	ld hl,BUF_4456
048357 01 09 00 00 0718*  	ld bc,9
04835B 11 12 00 00 0719*  	ld de,18
04835F DD 21 A2 00 0720*  	ld ix,162
       00          
048364 CD A5 B6 04 0721*  	call vdu_load_img
048368             0722*  
048368 21 F7 89 04 0723*  	ld hl,Fhonda105
04836C 11 C5 C2 04 0724*  	ld de,filedata
048370 01 00 00 01 0725*  	ld bc,65536
048374 3E 01       0726*  	ld a,mos_load
048376 5B CF       0727*  	RST.LIL 08h
048378 21 69 11 00 0728*  	ld hl,BUF_4457
04837C 01 04 00 00 0729*  	ld bc,4
048380 11 12 00 00 0730*  	ld de,18
048384 DD 21 48 00 0731*  	ld ix,72
       00          
048389 CD A5 B6 04 0732*  	call vdu_load_img
04838D             0733*  
04838D 21 0D 8A 04 0734*  	ld hl,Fhonda106
048391 11 C5 C2 04 0735*  	ld de,filedata
048395 01 00 00 01 0736*  	ld bc,65536
048399 3E 01       0737*  	ld a,mos_load
04839B 5B CF       0738*  	RST.LIL 08h
04839D 21 6A 11 00 0739*  	ld hl,BUF_4458
0483A1 01 08 00 00 0740*  	ld bc,8
0483A5 11 18 00 00 0741*  	ld de,24
0483A9 DD 21 C0 00 0742*  	ld ix,192
       00          
0483AE CD A5 B6 04 0743*  	call vdu_load_img
0483B2             0744*  
0483B2 21 23 8A 04 0745*  	ld hl,Fhonda107
0483B6 11 C5 C2 04 0746*  	ld de,filedata
0483BA 01 00 00 01 0747*  	ld bc,65536
0483BE 3E 01       0748*  	ld a,mos_load
0483C0 5B CF       0749*  	RST.LIL 08h
0483C2 21 6B 11 00 0750*  	ld hl,BUF_4459
0483C6 01 09 00 00 0751*  	ld bc,9
0483CA 11 12 00 00 0752*  	ld de,18
0483CE DD 21 A2 00 0753*  	ld ix,162
       00          
0483D3 CD A5 B6 04 0754*  	call vdu_load_img
0483D7             0755*  
0483D7 21 39 8A 04 0756*  	ld hl,Fhonda108
0483DB 11 C5 C2 04 0757*  	ld de,filedata
0483DF 01 00 00 01 0758*  	ld bc,65536
0483E3 3E 01       0759*  	ld a,mos_load
0483E5 5B CF       0760*  	RST.LIL 08h
0483E7 21 6C 11 00 0761*  	ld hl,BUF_4460
0483EB 01 03 00 00 0762*  	ld bc,3
0483EF 11 12 00 00 0763*  	ld de,18
0483F3 DD 21 36 00 0764*  	ld ix,54
       00          
0483F8 CD A5 B6 04 0765*  	call vdu_load_img
0483FC             0766*  
0483FC 21 4F 8A 04 0767*  	ld hl,Fhonda109
048400 11 C5 C2 04 0768*  	ld de,filedata
048404 01 00 00 01 0769*  	ld bc,65536
048408 3E 01       0770*  	ld a,mos_load
04840A 5B CF       0771*  	RST.LIL 08h
04840C 21 6D 11 00 0772*  	ld hl,BUF_4461
048410 01 0E 00 00 0773*  	ld bc,14
048414 11 0D 00 00 0774*  	ld de,13
048418 DD 21 B6 00 0775*  	ld ix,182
       00          
04841D CD A5 B6 04 0776*  	call vdu_load_img
048421             0777*  
048421 21 65 8A 04 0778*  	ld hl,Fhonda110
048425 11 C5 C2 04 0779*  	ld de,filedata
048429 01 00 00 01 0780*  	ld bc,65536
04842D 3E 01       0781*  	ld a,mos_load
04842F 5B CF       0782*  	RST.LIL 08h
048431 21 6E 11 00 0783*  	ld hl,BUF_4462
048435 01 09 00 00 0784*  	ld bc,9
048439 11 0C 00 00 0785*  	ld de,12
04843D DD 21 6C 00 0786*  	ld ix,108
       00          
048442 CD A5 B6 04 0787*  	call vdu_load_img
048446             0788*  
048446 21 7B 8A 04 0789*  	ld hl,Fhonda111
04844A 11 C5 C2 04 0790*  	ld de,filedata
04844E 01 00 00 01 0791*  	ld bc,65536
048452 3E 01       0792*  	ld a,mos_load
048454 5B CF       0793*  	RST.LIL 08h
048456 21 6F 11 00 0794*  	ld hl,BUF_4463
04845A 01 09 00 00 0795*  	ld bc,9
04845E 11 0C 00 00 0796*  	ld de,12
048462 DD 21 6C 00 0797*  	ld ix,108
       00          
048467 CD A5 B6 04 0798*  	call vdu_load_img
04846B             0799*  
04846B 21 91 8A 04 0800*  	ld hl,Fhonda112
04846F 11 C5 C2 04 0801*  	ld de,filedata
048473 01 00 00 01 0802*  	ld bc,65536
048477 3E 01       0803*  	ld a,mos_load
048479 5B CF       0804*  	RST.LIL 08h
04847B 21 70 11 00 0805*  	ld hl,BUF_4464
04847F 01 09 00 00 0806*  	ld bc,9
048483 11 12 00 00 0807*  	ld de,18
048487 DD 21 A2 00 0808*  	ld ix,162
       00          
04848C CD A5 B6 04 0809*  	call vdu_load_img
048490             0810*  
048490 21 A7 8A 04 0811*  	ld hl,Fhonda113
048494 11 C5 C2 04 0812*  	ld de,filedata
048498 01 00 00 01 0813*  	ld bc,65536
04849C 3E 01       0814*  	ld a,mos_load
04849E 5B CF       0815*  	RST.LIL 08h
0484A0 21 71 11 00 0816*  	ld hl,BUF_4465
0484A4 01 09 00 00 0817*  	ld bc,9
0484A8 11 12 00 00 0818*  	ld de,18
0484AC DD 21 A2 00 0819*  	ld ix,162
       00          
0484B1 CD A5 B6 04 0820*  	call vdu_load_img
0484B5             0821*  
0484B5 21 BD 8A 04 0822*  	ld hl,Fhonda114
0484B9 11 C5 C2 04 0823*  	ld de,filedata
0484BD 01 00 00 01 0824*  	ld bc,65536
0484C1 3E 01       0825*  	ld a,mos_load
0484C3 5B CF       0826*  	RST.LIL 08h
0484C5 21 72 11 00 0827*  	ld hl,BUF_4466
0484C9 01 06 00 00 0828*  	ld bc,6
0484CD 11 0D 00 00 0829*  	ld de,13
0484D1 DD 21 4E 00 0830*  	ld ix,78
       00          
0484D6 CD A5 B6 04 0831*  	call vdu_load_img
0484DA             0832*  
0484DA 21 D3 8A 04 0833*  	ld hl,Fhonda115
0484DE 11 C5 C2 04 0834*  	ld de,filedata
0484E2 01 00 00 01 0835*  	ld bc,65536
0484E6 3E 01       0836*  	ld a,mos_load
0484E8 5B CF       0837*  	RST.LIL 08h
0484EA 21 73 11 00 0838*  	ld hl,BUF_4467
0484EE 01 08 00 00 0839*  	ld bc,8
0484F2 11 0D 00 00 0840*  	ld de,13
0484F6 DD 21 68 00 0841*  	ld ix,104
       00          
0484FB CD A5 B6 04 0842*  	call vdu_load_img
0484FF             0843*  
0484FF 21 E9 8A 04 0844*  	ld hl,Fhonda116
048503 11 C5 C2 04 0845*  	ld de,filedata
048507 01 00 00 01 0846*  	ld bc,65536
04850B 3E 01       0847*  	ld a,mos_load
04850D 5B CF       0848*  	RST.LIL 08h
04850F 21 74 11 00 0849*  	ld hl,BUF_4468
048513 01 07 00 00 0850*  	ld bc,7
048517 11 0F 00 00 0851*  	ld de,15
04851B DD 21 69 00 0852*  	ld ix,105
       00          
048520 CD A5 B6 04 0853*  	call vdu_load_img
048524             0854*  
048524 21 FF 8A 04 0855*  	ld hl,Fhonda117
048528 11 C5 C2 04 0856*  	ld de,filedata
04852C 01 00 00 01 0857*  	ld bc,65536
048530 3E 01       0858*  	ld a,mos_load
048532 5B CF       0859*  	RST.LIL 08h
048534 21 75 11 00 0860*  	ld hl,BUF_4469
048538 01 09 00 00 0861*  	ld bc,9
04853C 11 0C 00 00 0862*  	ld de,12
048540 DD 21 6C 00 0863*  	ld ix,108
       00          
048545 CD A5 B6 04 0864*  	call vdu_load_img
048549             0865*  
048549 21 15 8B 04 0866*  	ld hl,Fhonda118
04854D 11 C5 C2 04 0867*  	ld de,filedata
048551 01 00 00 01 0868*  	ld bc,65536
048555 3E 01       0869*  	ld a,mos_load
048557 5B CF       0870*  	RST.LIL 08h
048559 21 76 11 00 0871*  	ld hl,BUF_4470
04855D 01 09 00 00 0872*  	ld bc,9
048561 11 0C 00 00 0873*  	ld de,12
048565 DD 21 6C 00 0874*  	ld ix,108
       00          
04856A CD A5 B6 04 0875*  	call vdu_load_img
04856E             0876*  
04856E 21 2B 8B 04 0877*  	ld hl,Fhonda119
048572 11 C5 C2 04 0878*  	ld de,filedata
048576 01 00 00 01 0879*  	ld bc,65536
04857A 3E 01       0880*  	ld a,mos_load
04857C 5B CF       0881*  	RST.LIL 08h
04857E 21 77 11 00 0882*  	ld hl,BUF_4471
048582 01 0E 00 00 0883*  	ld bc,14
048586 11 0C 00 00 0884*  	ld de,12
04858A DD 21 A8 00 0885*  	ld ix,168
       00          
04858F CD A5 B6 04 0886*  	call vdu_load_img
048593             0887*  
048593 21 41 8B 04 0888*  	ld hl,Fhonda120
048597 11 C5 C2 04 0889*  	ld de,filedata
04859B 01 00 00 01 0890*  	ld bc,65536
04859F 3E 01       0891*  	ld a,mos_load
0485A1 5B CF       0892*  	RST.LIL 08h
0485A3 21 78 11 00 0893*  	ld hl,BUF_4472
0485A7 01 09 00 00 0894*  	ld bc,9
0485AB 11 0C 00 00 0895*  	ld de,12
0485AF DD 21 6C 00 0896*  	ld ix,108
       00          
0485B4 CD A5 B6 04 0897*  	call vdu_load_img
0485B8             0898*  
0485B8 21 57 8B 04 0899*  	ld hl,Fhonda121
0485BC 11 C5 C2 04 0900*  	ld de,filedata
0485C0 01 00 00 01 0901*  	ld bc,65536
0485C4 3E 01       0902*  	ld a,mos_load
0485C6 5B CF       0903*  	RST.LIL 08h
0485C8 21 79 11 00 0904*  	ld hl,BUF_4473
0485CC 01 09 00 00 0905*  	ld bc,9
0485D0 11 11 00 00 0906*  	ld de,17
0485D4 DD 21 99 00 0907*  	ld ix,153
       00          
0485D9 CD A5 B6 04 0908*  	call vdu_load_img
0485DD             0909*  
0485DD 21 6D 8B 04 0910*  	ld hl,Fhonda122
0485E1 11 C5 C2 04 0911*  	ld de,filedata
0485E5 01 00 00 01 0912*  	ld bc,65536
0485E9 3E 01       0913*  	ld a,mos_load
0485EB 5B CF       0914*  	RST.LIL 08h
0485ED 21 7A 11 00 0915*  	ld hl,BUF_4474
0485F1 01 09 00 00 0916*  	ld bc,9
0485F5 11 0C 00 00 0917*  	ld de,12
0485F9 DD 21 6C 00 0918*  	ld ix,108
       00          
0485FE CD A5 B6 04 0919*  	call vdu_load_img
048602             0920*  
048602 C9          0921*  	ret
048603             0922*  
048603 66 6F 6E 74 0923*  Fhonda032: db "fonts/honda/032.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 33 32 2E 
       72 67 62 61 
       32 00       
048619 66 6F 6E 74 0924*  Fhonda046: db "fonts/honda/046.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 34 36 2E 
       72 67 62 61 
       32 00       
04862F 66 6F 6E 74 0925*  Fhonda048: db "fonts/honda/048.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 34 38 2E 
       72 67 62 61 
       32 00       
048645 66 6F 6E 74 0926*  Fhonda049: db "fonts/honda/049.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 34 39 2E 
       72 67 62 61 
       32 00       
04865B 66 6F 6E 74 0927*  Fhonda050: db "fonts/honda/050.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 30 2E 
       72 67 62 61 
       32 00       
048671 66 6F 6E 74 0928*  Fhonda051: db "fonts/honda/051.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 31 2E 
       72 67 62 61 
       32 00       
048687 66 6F 6E 74 0929*  Fhonda052: db "fonts/honda/052.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 32 2E 
       72 67 62 61 
       32 00       
04869D 66 6F 6E 74 0930*  Fhonda053: db "fonts/honda/053.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 33 2E 
       72 67 62 61 
       32 00       
0486B3 66 6F 6E 74 0931*  Fhonda054: db "fonts/honda/054.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 34 2E 
       72 67 62 61 
       32 00       
0486C9 66 6F 6E 74 0932*  Fhonda055: db "fonts/honda/055.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 35 2E 
       72 67 62 61 
       32 00       
0486DF 66 6F 6E 74 0933*  Fhonda056: db "fonts/honda/056.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 36 2E 
       72 67 62 61 
       32 00       
0486F5 66 6F 6E 74 0934*  Fhonda057: db "fonts/honda/057.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 35 37 2E 
       72 67 62 61 
       32 00       
04870B 66 6F 6E 74 0935*  Fhonda065: db "fonts/honda/065.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 35 2E 
       72 67 62 61 
       32 00       
048721 66 6F 6E 74 0936*  Fhonda066: db "fonts/honda/066.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 36 2E 
       72 67 62 61 
       32 00       
048737 66 6F 6E 74 0937*  Fhonda067: db "fonts/honda/067.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 37 2E 
       72 67 62 61 
       32 00       
04874D 66 6F 6E 74 0938*  Fhonda068: db "fonts/honda/068.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 38 2E 
       72 67 62 61 
       32 00       
048763 66 6F 6E 74 0939*  Fhonda069: db "fonts/honda/069.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 36 39 2E 
       72 67 62 61 
       32 00       
048779 66 6F 6E 74 0940*  Fhonda070: db "fonts/honda/070.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 30 2E 
       72 67 62 61 
       32 00       
04878F 66 6F 6E 74 0941*  Fhonda071: db "fonts/honda/071.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 31 2E 
       72 67 62 61 
       32 00       
0487A5 66 6F 6E 74 0942*  Fhonda072: db "fonts/honda/072.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 32 2E 
       72 67 62 61 
       32 00       
0487BB 66 6F 6E 74 0943*  Fhonda073: db "fonts/honda/073.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 33 2E 
       72 67 62 61 
       32 00       
0487D1 66 6F 6E 74 0944*  Fhonda074: db "fonts/honda/074.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 34 2E 
       72 67 62 61 
       32 00       
0487E7 66 6F 6E 74 0945*  Fhonda075: db "fonts/honda/075.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 35 2E 
       72 67 62 61 
       32 00       
0487FD 66 6F 6E 74 0946*  Fhonda076: db "fonts/honda/076.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 36 2E 
       72 67 62 61 
       32 00       
048813 66 6F 6E 74 0947*  Fhonda077: db "fonts/honda/077.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 37 2E 
       72 67 62 61 
       32 00       
048829 66 6F 6E 74 0948*  Fhonda078: db "fonts/honda/078.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 38 2E 
       72 67 62 61 
       32 00       
04883F 66 6F 6E 74 0949*  Fhonda079: db "fonts/honda/079.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 37 39 2E 
       72 67 62 61 
       32 00       
048855 66 6F 6E 74 0950*  Fhonda080: db "fonts/honda/080.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 30 2E 
       72 67 62 61 
       32 00       
04886B 66 6F 6E 74 0951*  Fhonda081: db "fonts/honda/081.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 31 2E 
       72 67 62 61 
       32 00       
048881 66 6F 6E 74 0952*  Fhonda082: db "fonts/honda/082.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 32 2E 
       72 67 62 61 
       32 00       
048897 66 6F 6E 74 0953*  Fhonda083: db "fonts/honda/083.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 33 2E 
       72 67 62 61 
       32 00       
0488AD 66 6F 6E 74 0954*  Fhonda084: db "fonts/honda/084.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 34 2E 
       72 67 62 61 
       32 00       
0488C3 66 6F 6E 74 0955*  Fhonda085: db "fonts/honda/085.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 35 2E 
       72 67 62 61 
       32 00       
0488D9 66 6F 6E 74 0956*  Fhonda086: db "fonts/honda/086.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 36 2E 
       72 67 62 61 
       32 00       
0488EF 66 6F 6E 74 0957*  Fhonda087: db "fonts/honda/087.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 37 2E 
       72 67 62 61 
       32 00       
048905 66 6F 6E 74 0958*  Fhonda088: db "fonts/honda/088.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 38 2E 
       72 67 62 61 
       32 00       
04891B 66 6F 6E 74 0959*  Fhonda089: db "fonts/honda/089.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 38 39 2E 
       72 67 62 61 
       32 00       
048931 66 6F 6E 74 0960*  Fhonda090: db "fonts/honda/090.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 30 2E 
       72 67 62 61 
       32 00       
048947 66 6F 6E 74 0961*  Fhonda097: db "fonts/honda/097.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 37 2E 
       72 67 62 61 
       32 00       
04895D 66 6F 6E 74 0962*  Fhonda098: db "fonts/honda/098.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 38 2E 
       72 67 62 61 
       32 00       
048973 66 6F 6E 74 0963*  Fhonda099: db "fonts/honda/099.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       30 39 39 2E 
       72 67 62 61 
       32 00       
048989 66 6F 6E 74 0964*  Fhonda100: db "fonts/honda/100.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 30 2E 
       72 67 62 61 
       32 00       
04899F 66 6F 6E 74 0965*  Fhonda101: db "fonts/honda/101.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 31 2E 
       72 67 62 61 
       32 00       
0489B5 66 6F 6E 74 0966*  Fhonda102: db "fonts/honda/102.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 32 2E 
       72 67 62 61 
       32 00       
0489CB 66 6F 6E 74 0967*  Fhonda103: db "fonts/honda/103.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 33 2E 
       72 67 62 61 
       32 00       
0489E1 66 6F 6E 74 0968*  Fhonda104: db "fonts/honda/104.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 34 2E 
       72 67 62 61 
       32 00       
0489F7 66 6F 6E 74 0969*  Fhonda105: db "fonts/honda/105.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 35 2E 
       72 67 62 61 
       32 00       
048A0D 66 6F 6E 74 0970*  Fhonda106: db "fonts/honda/106.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 36 2E 
       72 67 62 61 
       32 00       
048A23 66 6F 6E 74 0971*  Fhonda107: db "fonts/honda/107.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 37 2E 
       72 67 62 61 
       32 00       
048A39 66 6F 6E 74 0972*  Fhonda108: db "fonts/honda/108.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 38 2E 
       72 67 62 61 
       32 00       
048A4F 66 6F 6E 74 0973*  Fhonda109: db "fonts/honda/109.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 30 39 2E 
       72 67 62 61 
       32 00       
048A65 66 6F 6E 74 0974*  Fhonda110: db "fonts/honda/110.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 30 2E 
       72 67 62 61 
       32 00       
048A7B 66 6F 6E 74 0975*  Fhonda111: db "fonts/honda/111.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 31 2E 
       72 67 62 61 
       32 00       
048A91 66 6F 6E 74 0976*  Fhonda112: db "fonts/honda/112.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 32 2E 
       72 67 62 61 
       32 00       
048AA7 66 6F 6E 74 0977*  Fhonda113: db "fonts/honda/113.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 33 2E 
       72 67 62 61 
       32 00       
048ABD 66 6F 6E 74 0978*  Fhonda114: db "fonts/honda/114.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 34 2E 
       72 67 62 61 
       32 00       
048AD3 66 6F 6E 74 0979*  Fhonda115: db "fonts/honda/115.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 35 2E 
       72 67 62 61 
       32 00       
048AE9 66 6F 6E 74 0980*  Fhonda116: db "fonts/honda/116.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 36 2E 
       72 67 62 61 
       32 00       
048AFF 66 6F 6E 74 0981*  Fhonda117: db "fonts/honda/117.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 37 2E 
       72 67 62 61 
       32 00       
048B15 66 6F 6E 74 0982*  Fhonda118: db "fonts/honda/118.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 38 2E 
       72 67 62 61 
       32 00       
048B2B 66 6F 6E 74 0983*  Fhonda119: db "fonts/honda/119.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 31 39 2E 
       72 67 62 61 
       32 00       
048B41 66 6F 6E 74 0984*  Fhonda120: db "fonts/honda/120.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 32 30 2E 
       72 67 62 61 
       32 00       
048B57 66 6F 6E 74 0985*  Fhonda121: db "fonts/honda/121.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 32 31 2E 
       72 67 62 61 
       32 00       
048B6D 66 6F 6E 74 0986*  Fhonda122: db "fonts/honda/122.rgba2",0
       73 2F 68 6F 
       6E 64 61 2F 
       31 32 32 2E 
       72 67 62 61 
       32 00       
048B83             0025   	include "src/asm/font_retro_computer.asm"
048B83             0001*  ; Bitmap indices:
048B83             0002*  BUF_4128: equ 0x1020 ; 32
048B83             0003*  BUF_4129: equ 0x1021 ; 33 !
048B83             0004*  ; Missing character 34 "
048B83             0005*  ; Missing character 35 #
048B83             0006*  ; Missing character 36 $
048B83             0007*  ; Missing character 37 %
048B83             0008*  ; Missing character 38 &
048B83             0009*  ; Missing character 39 '
048B83             0010*  ; Missing character 40 (
048B83             0011*  ; Missing character 41 )
048B83             0012*  ; Missing character 42 *
048B83             0013*  ; Missing character 43 +
048B83             0014*  ; Missing character 44 ,
048B83             0015*  ; Missing character 45 -
048B83             0016*  ; Missing character 46 .
048B83             0017*  ; Missing character 47 /
048B83             0018*  BUF_4144: equ 0x1030 ; 48 0
048B83             0019*  BUF_4145: equ 0x1031 ; 49 1
048B83             0020*  BUF_4146: equ 0x1032 ; 50 2
048B83             0021*  BUF_4147: equ 0x1033 ; 51 3
048B83             0022*  BUF_4148: equ 0x1034 ; 52 4
048B83             0023*  BUF_4149: equ 0x1035 ; 53 5
048B83             0024*  BUF_4150: equ 0x1036 ; 54 6
048B83             0025*  BUF_4151: equ 0x1037 ; 55 7
048B83             0026*  BUF_4152: equ 0x1038 ; 56 8
048B83             0027*  BUF_4153: equ 0x1039 ; 57 9
048B83             0028*  ; Missing character 58 :
048B83             0029*  ; Missing character 59 ;
048B83             0030*  ; Missing character 60 <
048B83             0031*  ; Missing character 61 =
048B83             0032*  ; Missing character 62 >
048B83             0033*  BUF_4159: equ 0x103F ; 63 ?
048B83             0034*  ; Missing character 64 @
048B83             0035*  BUF_4161: equ 0x1041 ; 65 A
048B83             0036*  BUF_4162: equ 0x1042 ; 66 B
048B83             0037*  BUF_4163: equ 0x1043 ; 67 C
048B83             0038*  BUF_4164: equ 0x1044 ; 68 D
048B83             0039*  BUF_4165: equ 0x1045 ; 69 E
048B83             0040*  BUF_4166: equ 0x1046 ; 70 F
048B83             0041*  BUF_4167: equ 0x1047 ; 71 G
048B83             0042*  BUF_4168: equ 0x1048 ; 72 H
048B83             0043*  BUF_4169: equ 0x1049 ; 73 I
048B83             0044*  BUF_4170: equ 0x104A ; 74 J
048B83             0045*  BUF_4171: equ 0x104B ; 75 K
048B83             0046*  BUF_4172: equ 0x104C ; 76 L
048B83             0047*  BUF_4173: equ 0x104D ; 77 M
048B83             0048*  BUF_4174: equ 0x104E ; 78 N
048B83             0049*  BUF_4175: equ 0x104F ; 79 O
048B83             0050*  BUF_4176: equ 0x1050 ; 80 P
048B83             0051*  BUF_4177: equ 0x1051 ; 81 Q
048B83             0052*  BUF_4178: equ 0x1052 ; 82 R
048B83             0053*  BUF_4179: equ 0x1053 ; 83 S
048B83             0054*  BUF_4180: equ 0x1054 ; 84 T
048B83             0055*  BUF_4181: equ 0x1055 ; 85 U
048B83             0056*  BUF_4182: equ 0x1056 ; 86 V
048B83             0057*  BUF_4183: equ 0x1057 ; 87 W
048B83             0058*  BUF_4184: equ 0x1058 ; 88 X
048B83             0059*  BUF_4185: equ 0x1059 ; 89 Y
048B83             0060*  BUF_4186: equ 0x105A ; 90 Z
048B83             0061*  ; Missing character 91 [
048B83             0062*  ; Missing character 92 \
048B83             0063*  ; Missing character 93 ]
048B83             0064*  ; Missing character 94 ^
048B83             0065*  ; Missing character 95 _
048B83             0066*  ; Missing character 96 `
048B83             0067*  ; Missing character 97 a
048B83             0068*  ; Missing character 98 b
048B83             0069*  ; Missing character 99 c
048B83             0070*  ; Missing character 100 d
048B83             0071*  ; Missing character 101 e
048B83             0072*  ; Missing character 102 f
048B83             0073*  ; Missing character 103 g
048B83             0074*  ; Missing character 104 h
048B83             0075*  ; Missing character 105 i
048B83             0076*  ; Missing character 106 j
048B83             0077*  ; Missing character 107 k
048B83             0078*  ; Missing character 108 l
048B83             0079*  ; Missing character 109 m
048B83             0080*  ; Missing character 110 n
048B83             0081*  ; Missing character 111 o
048B83             0082*  ; Missing character 112 p
048B83             0083*  ; Missing character 113 q
048B83             0084*  ; Missing character 114 r
048B83             0085*  ; Missing character 115 s
048B83             0086*  ; Missing character 116 t
048B83             0087*  ; Missing character 117 u
048B83             0088*  ; Missing character 118 v
048B83             0089*  ; Missing character 119 w
048B83             0090*  ; Missing character 120 x
048B83             0091*  ; Missing character 121 y
048B83             0092*  ; Missing character 122 z
048B83             0093*  ; [y_offset, dim_y, dim_x], buffer_id label: ; mind the little-endian order when fetching these!!!
048B83             0094*  font_retro_computer:
048B83 06 01 00 20 0095*  	dl 0x000106,BUF_4128
       10 00       
048B89 03 0E 00 21 0096*  	dl 0x000E03,BUF_4129
       10 00       
048B8F 06 01 00 20 0097*  	dl 0x000106,BUF_4128 ; Missing character 34
       10 00       
048B95 06 01 00 20 0098*  	dl 0x000106,BUF_4128 ; Missing character 35
       10 00       
048B9B 06 01 00 20 0099*  	dl 0x000106,BUF_4128 ; Missing character 36
       10 00       
048BA1 06 01 00 20 0100*  	dl 0x000106,BUF_4128 ; Missing character 37
       10 00       
048BA7 06 01 00 20 0101*  	dl 0x000106,BUF_4128 ; Missing character 38
       10 00       
048BAD 06 01 00 20 0102*  	dl 0x000106,BUF_4128 ; Missing character 39
       10 00       
048BB3 06 01 00 20 0103*  	dl 0x000106,BUF_4128 ; Missing character 40
       10 00       
048BB9 06 01 00 20 0104*  	dl 0x000106,BUF_4128 ; Missing character 41
       10 00       
048BBF 06 01 00 20 0105*  	dl 0x000106,BUF_4128 ; Missing character 42
       10 00       
048BC5 06 01 00 20 0106*  	dl 0x000106,BUF_4128 ; Missing character 43
       10 00       
048BCB 06 01 00 20 0107*  	dl 0x000106,BUF_4128 ; Missing character 44
       10 00       
048BD1 06 01 00 20 0108*  	dl 0x000106,BUF_4128 ; Missing character 45
       10 00       
048BD7 06 01 00 20 0109*  	dl 0x000106,BUF_4128 ; Missing character 46
       10 00       
048BDD 06 01 00 20 0110*  	dl 0x000106,BUF_4128 ; Missing character 47
       10 00       
048BE3 08 0E 00 30 0111*  	dl 0x000E08,BUF_4144
       10 00       
048BE9 08 0E 00 31 0112*  	dl 0x000E08,BUF_4145
       10 00       
048BEF 08 0E 00 32 0113*  	dl 0x000E08,BUF_4146
       10 00       
048BF5 08 0E 00 33 0114*  	dl 0x000E08,BUF_4147
       10 00       
048BFB 08 0E 00 34 0115*  	dl 0x000E08,BUF_4148
       10 00       
048C01 08 0E 00 35 0116*  	dl 0x000E08,BUF_4149
       10 00       
048C07 08 0E 00 36 0117*  	dl 0x000E08,BUF_4150
       10 00       
048C0D 08 0E 00 37 0118*  	dl 0x000E08,BUF_4151
       10 00       
048C13 08 0E 00 38 0119*  	dl 0x000E08,BUF_4152
       10 00       
048C19 08 0E 00 39 0120*  	dl 0x000E08,BUF_4153
       10 00       
048C1F 06 01 00 20 0121*  	dl 0x000106,BUF_4128 ; Missing character 58
       10 00       
048C25 06 01 00 20 0122*  	dl 0x000106,BUF_4128 ; Missing character 59
       10 00       
048C2B 06 01 00 20 0123*  	dl 0x000106,BUF_4128 ; Missing character 60
       10 00       
048C31 06 01 00 20 0124*  	dl 0x000106,BUF_4128 ; Missing character 61
       10 00       
048C37 06 01 00 20 0125*  	dl 0x000106,BUF_4128 ; Missing character 62
       10 00       
048C3D 08 0E 00 3F 0126*  	dl 0x000E08,BUF_4159
       10 00       
048C43 06 01 00 20 0127*  	dl 0x000106,BUF_4128 ; Missing character 64
       10 00       
048C49 07 0E 00 41 0128*  	dl 0x000E07,BUF_4161
       10 00       
048C4F 08 0E 00 42 0129*  	dl 0x000E08,BUF_4162
       10 00       
048C55 07 0E 00 43 0130*  	dl 0x000E07,BUF_4163
       10 00       
048C5B 08 0E 00 44 0131*  	dl 0x000E08,BUF_4164
       10 00       
048C61 08 0E 00 45 0132*  	dl 0x000E08,BUF_4165
       10 00       
048C67 07 0E 00 46 0133*  	dl 0x000E07,BUF_4166
       10 00       
048C6D 08 0E 00 47 0134*  	dl 0x000E08,BUF_4167
       10 00       
048C73 07 0E 00 48 0135*  	dl 0x000E07,BUF_4168
       10 00       
048C79 07 0E 00 49 0136*  	dl 0x000E07,BUF_4169
       10 00       
048C7F 08 0E 00 4A 0137*  	dl 0x000E08,BUF_4170
       10 00       
048C85 07 0E 00 4B 0138*  	dl 0x000E07,BUF_4171
       10 00       
048C8B 08 0E 00 4C 0139*  	dl 0x000E08,BUF_4172
       10 00       
048C91 09 0E 00 4D 0140*  	dl 0x000E09,BUF_4173
       10 00       
048C97 07 0E 00 4E 0141*  	dl 0x000E07,BUF_4174
       10 00       
048C9D 08 0E 00 4F 0142*  	dl 0x000E08,BUF_4175
       10 00       
048CA3 07 0E 00 50 0143*  	dl 0x000E07,BUF_4176
       10 00       
048CA9 08 0F 00 51 0144*  	dl 0x000F08,BUF_4177
       10 00       
048CAF 08 0E 00 52 0145*  	dl 0x000E08,BUF_4178
       10 00       
048CB5 08 0E 00 53 0146*  	dl 0x000E08,BUF_4179
       10 00       
048CBB 07 0E 00 54 0147*  	dl 0x000E07,BUF_4180
       10 00       
048CC1 08 0E 00 55 0148*  	dl 0x000E08,BUF_4181
       10 00       
048CC7 07 0E 00 56 0149*  	dl 0x000E07,BUF_4182
       10 00       
048CCD 0B 0E 00 57 0150*  	dl 0x000E0B,BUF_4183
       10 00       
048CD3 07 0E 00 58 0151*  	dl 0x000E07,BUF_4184
       10 00       
048CD9 08 0E 00 59 0152*  	dl 0x000E08,BUF_4185
       10 00       
048CDF 07 0E 00 5A 0153*  	dl 0x000E07,BUF_4186
       10 00       
048CE5 06 01 00 20 0154*  	dl 0x000106,BUF_4128 ; Missing character 91
       10 00       
048CEB 06 01 00 20 0155*  	dl 0x000106,BUF_4128 ; Missing character 92
       10 00       
048CF1 06 01 00 20 0156*  	dl 0x000106,BUF_4128 ; Missing character 93
       10 00       
048CF7 06 01 00 20 0157*  	dl 0x000106,BUF_4128 ; Missing character 94
       10 00       
048CFD 06 01 00 20 0158*  	dl 0x000106,BUF_4128 ; Missing character 95
       10 00       
048D03 06 01 00 20 0159*  	dl 0x000106,BUF_4128 ; Missing character 96
       10 00       
048D09 06 01 00 20 0160*  	dl 0x000106,BUF_4128 ; Missing character 97
       10 00       
048D0F 06 01 00 20 0161*  	dl 0x000106,BUF_4128 ; Missing character 98
       10 00       
048D15 06 01 00 20 0162*  	dl 0x000106,BUF_4128 ; Missing character 99
       10 00       
048D1B 06 01 00 20 0163*  	dl 0x000106,BUF_4128 ; Missing character 100
       10 00       
048D21 06 01 00 20 0164*  	dl 0x000106,BUF_4128 ; Missing character 101
       10 00       
048D27 06 01 00 20 0165*  	dl 0x000106,BUF_4128 ; Missing character 102
       10 00       
048D2D 06 01 00 20 0166*  	dl 0x000106,BUF_4128 ; Missing character 103
       10 00       
048D33 06 01 00 20 0167*  	dl 0x000106,BUF_4128 ; Missing character 104
       10 00       
048D39 06 01 00 20 0168*  	dl 0x000106,BUF_4128 ; Missing character 105
       10 00       
048D3F 06 01 00 20 0169*  	dl 0x000106,BUF_4128 ; Missing character 106
       10 00       
048D45 06 01 00 20 0170*  	dl 0x000106,BUF_4128 ; Missing character 107
       10 00       
048D4B 06 01 00 20 0171*  	dl 0x000106,BUF_4128 ; Missing character 108
       10 00       
048D51 06 01 00 20 0172*  	dl 0x000106,BUF_4128 ; Missing character 109
       10 00       
048D57 06 01 00 20 0173*  	dl 0x000106,BUF_4128 ; Missing character 110
       10 00       
048D5D 06 01 00 20 0174*  	dl 0x000106,BUF_4128 ; Missing character 111
       10 00       
048D63 06 01 00 20 0175*  	dl 0x000106,BUF_4128 ; Missing character 112
       10 00       
048D69 06 01 00 20 0176*  	dl 0x000106,BUF_4128 ; Missing character 113
       10 00       
048D6F 06 01 00 20 0177*  	dl 0x000106,BUF_4128 ; Missing character 114
       10 00       
048D75 06 01 00 20 0178*  	dl 0x000106,BUF_4128 ; Missing character 115
       10 00       
048D7B 06 01 00 20 0179*  	dl 0x000106,BUF_4128 ; Missing character 116
       10 00       
048D81 06 01 00 20 0180*  	dl 0x000106,BUF_4128 ; Missing character 117
       10 00       
048D87 06 01 00 20 0181*  	dl 0x000106,BUF_4128 ; Missing character 118
       10 00       
048D8D 06 01 00 20 0182*  	dl 0x000106,BUF_4128 ; Missing character 119
       10 00       
048D93 06 01 00 20 0183*  	dl 0x000106,BUF_4128 ; Missing character 120
       10 00       
048D99 06 01 00 20 0184*  	dl 0x000106,BUF_4128 ; Missing character 121
       10 00       
048D9F 06 01 00 20 0185*  	dl 0x000106,BUF_4128 ; Missing character 122
       10 00       
048DA5             0186*  
048DA5             0187*  ; Import .rgba2 bitmap files and load them into VDP buffers
048DA5             0188*  load_font_retro_computer:
048DA5             0189*  
048DA5 21 49 93 04 0190*  	ld hl,Frc032
048DA9 11 C5 C2 04 0191*  	ld de,filedata
048DAD 01 00 00 01 0192*  	ld bc,65536
048DB1 3E 01       0193*  	ld a,mos_load
048DB3 5B CF       0194*  	RST.LIL 08h
048DB5 21 20 10 00 0195*  	ld hl,BUF_4128
048DB9 01 06 00 00 0196*  	ld bc,6
048DBD 11 01 00 00 0197*  	ld de,1
048DC1 DD 21 06 00 0198*  	ld ix,6
       00          
048DC6 CD A5 B6 04 0199*  	call vdu_load_img
048DCA             0200*  
048DCA 21 5C 93 04 0201*  	ld hl,Frc033
048DCE 11 C5 C2 04 0202*  	ld de,filedata
048DD2 01 00 00 01 0203*  	ld bc,65536
048DD6 3E 01       0204*  	ld a,mos_load
048DD8 5B CF       0205*  	RST.LIL 08h
048DDA 21 21 10 00 0206*  	ld hl,BUF_4129
048DDE 01 03 00 00 0207*  	ld bc,3
048DE2 11 0E 00 00 0208*  	ld de,14
048DE6 DD 21 2A 00 0209*  	ld ix,42
       00          
048DEB CD A5 B6 04 0210*  	call vdu_load_img
048DEF             0211*  ; Missing character 34
048DEF             0212*  ; Missing character 35
048DEF             0213*  ; Missing character 36
048DEF             0214*  ; Missing character 37
048DEF             0215*  ; Missing character 38
048DEF             0216*  ; Missing character 39
048DEF             0217*  ; Missing character 40
048DEF             0218*  ; Missing character 41
048DEF             0219*  ; Missing character 42
048DEF             0220*  ; Missing character 43
048DEF             0221*  ; Missing character 44
048DEF             0222*  ; Missing character 45
048DEF             0223*  ; Missing character 46
048DEF             0224*  ; Missing character 47
048DEF             0225*  
048DEF 21 6F 93 04 0226*  	ld hl,Frc048
048DF3 11 C5 C2 04 0227*  	ld de,filedata
048DF7 01 00 00 01 0228*  	ld bc,65536
048DFB 3E 01       0229*  	ld a,mos_load
048DFD 5B CF       0230*  	RST.LIL 08h
048DFF 21 30 10 00 0231*  	ld hl,BUF_4144
048E03 01 08 00 00 0232*  	ld bc,8
048E07 11 0E 00 00 0233*  	ld de,14
048E0B DD 21 70 00 0234*  	ld ix,112
       00          
048E10 CD A5 B6 04 0235*  	call vdu_load_img
048E14             0236*  
048E14 21 82 93 04 0237*  	ld hl,Frc049
048E18 11 C5 C2 04 0238*  	ld de,filedata
048E1C 01 00 00 01 0239*  	ld bc,65536
048E20 3E 01       0240*  	ld a,mos_load
048E22 5B CF       0241*  	RST.LIL 08h
048E24 21 31 10 00 0242*  	ld hl,BUF_4145
048E28 01 08 00 00 0243*  	ld bc,8
048E2C 11 0E 00 00 0244*  	ld de,14
048E30 DD 21 70 00 0245*  	ld ix,112
       00          
048E35 CD A5 B6 04 0246*  	call vdu_load_img
048E39             0247*  
048E39 21 95 93 04 0248*  	ld hl,Frc050
048E3D 11 C5 C2 04 0249*  	ld de,filedata
048E41 01 00 00 01 0250*  	ld bc,65536
048E45 3E 01       0251*  	ld a,mos_load
048E47 5B CF       0252*  	RST.LIL 08h
048E49 21 32 10 00 0253*  	ld hl,BUF_4146
048E4D 01 08 00 00 0254*  	ld bc,8
048E51 11 0E 00 00 0255*  	ld de,14
048E55 DD 21 70 00 0256*  	ld ix,112
       00          
048E5A CD A5 B6 04 0257*  	call vdu_load_img
048E5E             0258*  
048E5E 21 A8 93 04 0259*  	ld hl,Frc051
048E62 11 C5 C2 04 0260*  	ld de,filedata
048E66 01 00 00 01 0261*  	ld bc,65536
048E6A 3E 01       0262*  	ld a,mos_load
048E6C 5B CF       0263*  	RST.LIL 08h
048E6E 21 33 10 00 0264*  	ld hl,BUF_4147
048E72 01 08 00 00 0265*  	ld bc,8
048E76 11 0E 00 00 0266*  	ld de,14
048E7A DD 21 70 00 0267*  	ld ix,112
       00          
048E7F CD A5 B6 04 0268*  	call vdu_load_img
048E83             0269*  
048E83 21 BB 93 04 0270*  	ld hl,Frc052
048E87 11 C5 C2 04 0271*  	ld de,filedata
048E8B 01 00 00 01 0272*  	ld bc,65536
048E8F 3E 01       0273*  	ld a,mos_load
048E91 5B CF       0274*  	RST.LIL 08h
048E93 21 34 10 00 0275*  	ld hl,BUF_4148
048E97 01 08 00 00 0276*  	ld bc,8
048E9B 11 0E 00 00 0277*  	ld de,14
048E9F DD 21 70 00 0278*  	ld ix,112
       00          
048EA4 CD A5 B6 04 0279*  	call vdu_load_img
048EA8             0280*  
048EA8 21 CE 93 04 0281*  	ld hl,Frc053
048EAC 11 C5 C2 04 0282*  	ld de,filedata
048EB0 01 00 00 01 0283*  	ld bc,65536
048EB4 3E 01       0284*  	ld a,mos_load
048EB6 5B CF       0285*  	RST.LIL 08h
048EB8 21 35 10 00 0286*  	ld hl,BUF_4149
048EBC 01 08 00 00 0287*  	ld bc,8
048EC0 11 0E 00 00 0288*  	ld de,14
048EC4 DD 21 70 00 0289*  	ld ix,112
       00          
048EC9 CD A5 B6 04 0290*  	call vdu_load_img
048ECD             0291*  
048ECD 21 E1 93 04 0292*  	ld hl,Frc054
048ED1 11 C5 C2 04 0293*  	ld de,filedata
048ED5 01 00 00 01 0294*  	ld bc,65536
048ED9 3E 01       0295*  	ld a,mos_load
048EDB 5B CF       0296*  	RST.LIL 08h
048EDD 21 36 10 00 0297*  	ld hl,BUF_4150
048EE1 01 08 00 00 0298*  	ld bc,8
048EE5 11 0E 00 00 0299*  	ld de,14
048EE9 DD 21 70 00 0300*  	ld ix,112
       00          
048EEE CD A5 B6 04 0301*  	call vdu_load_img
048EF2             0302*  
048EF2 21 F4 93 04 0303*  	ld hl,Frc055
048EF6 11 C5 C2 04 0304*  	ld de,filedata
048EFA 01 00 00 01 0305*  	ld bc,65536
048EFE 3E 01       0306*  	ld a,mos_load
048F00 5B CF       0307*  	RST.LIL 08h
048F02 21 37 10 00 0308*  	ld hl,BUF_4151
048F06 01 08 00 00 0309*  	ld bc,8
048F0A 11 0E 00 00 0310*  	ld de,14
048F0E DD 21 70 00 0311*  	ld ix,112
       00          
048F13 CD A5 B6 04 0312*  	call vdu_load_img
048F17             0313*  
048F17 21 07 94 04 0314*  	ld hl,Frc056
048F1B 11 C5 C2 04 0315*  	ld de,filedata
048F1F 01 00 00 01 0316*  	ld bc,65536
048F23 3E 01       0317*  	ld a,mos_load
048F25 5B CF       0318*  	RST.LIL 08h
048F27 21 38 10 00 0319*  	ld hl,BUF_4152
048F2B 01 08 00 00 0320*  	ld bc,8
048F2F 11 0E 00 00 0321*  	ld de,14
048F33 DD 21 70 00 0322*  	ld ix,112
       00          
048F38 CD A5 B6 04 0323*  	call vdu_load_img
048F3C             0324*  
048F3C 21 1A 94 04 0325*  	ld hl,Frc057
048F40 11 C5 C2 04 0326*  	ld de,filedata
048F44 01 00 00 01 0327*  	ld bc,65536
048F48 3E 01       0328*  	ld a,mos_load
048F4A 5B CF       0329*  	RST.LIL 08h
048F4C 21 39 10 00 0330*  	ld hl,BUF_4153
048F50 01 08 00 00 0331*  	ld bc,8
048F54 11 0E 00 00 0332*  	ld de,14
048F58 DD 21 70 00 0333*  	ld ix,112
       00          
048F5D CD A5 B6 04 0334*  	call vdu_load_img
048F61             0335*  ; Missing character 58
048F61             0336*  ; Missing character 59
048F61             0337*  ; Missing character 60
048F61             0338*  ; Missing character 61
048F61             0339*  ; Missing character 62
048F61             0340*  
048F61 21 2D 94 04 0341*  	ld hl,Frc063
048F65 11 C5 C2 04 0342*  	ld de,filedata
048F69 01 00 00 01 0343*  	ld bc,65536
048F6D 3E 01       0344*  	ld a,mos_load
048F6F 5B CF       0345*  	RST.LIL 08h
048F71 21 3F 10 00 0346*  	ld hl,BUF_4159
048F75 01 08 00 00 0347*  	ld bc,8
048F79 11 0E 00 00 0348*  	ld de,14
048F7D DD 21 70 00 0349*  	ld ix,112
       00          
048F82 CD A5 B6 04 0350*  	call vdu_load_img
048F86             0351*  ; Missing character 64
048F86             0352*  
048F86 21 40 94 04 0353*  	ld hl,Frc065
048F8A 11 C5 C2 04 0354*  	ld de,filedata
048F8E 01 00 00 01 0355*  	ld bc,65536
048F92 3E 01       0356*  	ld a,mos_load
048F94 5B CF       0357*  	RST.LIL 08h
048F96 21 41 10 00 0358*  	ld hl,BUF_4161
048F9A 01 07 00 00 0359*  	ld bc,7
048F9E 11 0E 00 00 0360*  	ld de,14
048FA2 DD 21 62 00 0361*  	ld ix,98
       00          
048FA7 CD A5 B6 04 0362*  	call vdu_load_img
048FAB             0363*  
048FAB 21 53 94 04 0364*  	ld hl,Frc066
048FAF 11 C5 C2 04 0365*  	ld de,filedata
048FB3 01 00 00 01 0366*  	ld bc,65536
048FB7 3E 01       0367*  	ld a,mos_load
048FB9 5B CF       0368*  	RST.LIL 08h
048FBB 21 42 10 00 0369*  	ld hl,BUF_4162
048FBF 01 08 00 00 0370*  	ld bc,8
048FC3 11 0E 00 00 0371*  	ld de,14
048FC7 DD 21 70 00 0372*  	ld ix,112
       00          
048FCC CD A5 B6 04 0373*  	call vdu_load_img
048FD0             0374*  
048FD0 21 66 94 04 0375*  	ld hl,Frc067
048FD4 11 C5 C2 04 0376*  	ld de,filedata
048FD8 01 00 00 01 0377*  	ld bc,65536
048FDC 3E 01       0378*  	ld a,mos_load
048FDE 5B CF       0379*  	RST.LIL 08h
048FE0 21 43 10 00 0380*  	ld hl,BUF_4163
048FE4 01 07 00 00 0381*  	ld bc,7
048FE8 11 0E 00 00 0382*  	ld de,14
048FEC DD 21 62 00 0383*  	ld ix,98
       00          
048FF1 CD A5 B6 04 0384*  	call vdu_load_img
048FF5             0385*  
048FF5 21 79 94 04 0386*  	ld hl,Frc068
048FF9 11 C5 C2 04 0387*  	ld de,filedata
048FFD 01 00 00 01 0388*  	ld bc,65536
049001 3E 01       0389*  	ld a,mos_load
049003 5B CF       0390*  	RST.LIL 08h
049005 21 44 10 00 0391*  	ld hl,BUF_4164
049009 01 08 00 00 0392*  	ld bc,8
04900D 11 0E 00 00 0393*  	ld de,14
049011 DD 21 70 00 0394*  	ld ix,112
       00          
049016 CD A5 B6 04 0395*  	call vdu_load_img
04901A             0396*  
04901A 21 8C 94 04 0397*  	ld hl,Frc069
04901E 11 C5 C2 04 0398*  	ld de,filedata
049022 01 00 00 01 0399*  	ld bc,65536
049026 3E 01       0400*  	ld a,mos_load
049028 5B CF       0401*  	RST.LIL 08h
04902A 21 45 10 00 0402*  	ld hl,BUF_4165
04902E 01 08 00 00 0403*  	ld bc,8
049032 11 0E 00 00 0404*  	ld de,14
049036 DD 21 70 00 0405*  	ld ix,112
       00          
04903B CD A5 B6 04 0406*  	call vdu_load_img
04903F             0407*  
04903F 21 9F 94 04 0408*  	ld hl,Frc070
049043 11 C5 C2 04 0409*  	ld de,filedata
049047 01 00 00 01 0410*  	ld bc,65536
04904B 3E 01       0411*  	ld a,mos_load
04904D 5B CF       0412*  	RST.LIL 08h
04904F 21 46 10 00 0413*  	ld hl,BUF_4166
049053 01 07 00 00 0414*  	ld bc,7
049057 11 0E 00 00 0415*  	ld de,14
04905B DD 21 62 00 0416*  	ld ix,98
       00          
049060 CD A5 B6 04 0417*  	call vdu_load_img
049064             0418*  
049064 21 B2 94 04 0419*  	ld hl,Frc071
049068 11 C5 C2 04 0420*  	ld de,filedata
04906C 01 00 00 01 0421*  	ld bc,65536
049070 3E 01       0422*  	ld a,mos_load
049072 5B CF       0423*  	RST.LIL 08h
049074 21 47 10 00 0424*  	ld hl,BUF_4167
049078 01 08 00 00 0425*  	ld bc,8
04907C 11 0E 00 00 0426*  	ld de,14
049080 DD 21 70 00 0427*  	ld ix,112
       00          
049085 CD A5 B6 04 0428*  	call vdu_load_img
049089             0429*  
049089 21 C5 94 04 0430*  	ld hl,Frc072
04908D 11 C5 C2 04 0431*  	ld de,filedata
049091 01 00 00 01 0432*  	ld bc,65536
049095 3E 01       0433*  	ld a,mos_load
049097 5B CF       0434*  	RST.LIL 08h
049099 21 48 10 00 0435*  	ld hl,BUF_4168
04909D 01 07 00 00 0436*  	ld bc,7
0490A1 11 0E 00 00 0437*  	ld de,14
0490A5 DD 21 62 00 0438*  	ld ix,98
       00          
0490AA CD A5 B6 04 0439*  	call vdu_load_img
0490AE             0440*  
0490AE 21 D8 94 04 0441*  	ld hl,Frc073
0490B2 11 C5 C2 04 0442*  	ld de,filedata
0490B6 01 00 00 01 0443*  	ld bc,65536
0490BA 3E 01       0444*  	ld a,mos_load
0490BC 5B CF       0445*  	RST.LIL 08h
0490BE 21 49 10 00 0446*  	ld hl,BUF_4169
0490C2 01 07 00 00 0447*  	ld bc,7
0490C6 11 0E 00 00 0448*  	ld de,14
0490CA DD 21 62 00 0449*  	ld ix,98
       00          
0490CF CD A5 B6 04 0450*  	call vdu_load_img
0490D3             0451*  
0490D3 21 EB 94 04 0452*  	ld hl,Frc074
0490D7 11 C5 C2 04 0453*  	ld de,filedata
0490DB 01 00 00 01 0454*  	ld bc,65536
0490DF 3E 01       0455*  	ld a,mos_load
0490E1 5B CF       0456*  	RST.LIL 08h
0490E3 21 4A 10 00 0457*  	ld hl,BUF_4170
0490E7 01 08 00 00 0458*  	ld bc,8
0490EB 11 0E 00 00 0459*  	ld de,14
0490EF DD 21 70 00 0460*  	ld ix,112
       00          
0490F4 CD A5 B6 04 0461*  	call vdu_load_img
0490F8             0462*  
0490F8 21 FE 94 04 0463*  	ld hl,Frc075
0490FC 11 C5 C2 04 0464*  	ld de,filedata
049100 01 00 00 01 0465*  	ld bc,65536
049104 3E 01       0466*  	ld a,mos_load
049106 5B CF       0467*  	RST.LIL 08h
049108 21 4B 10 00 0468*  	ld hl,BUF_4171
04910C 01 07 00 00 0469*  	ld bc,7
049110 11 0E 00 00 0470*  	ld de,14
049114 DD 21 62 00 0471*  	ld ix,98
       00          
049119 CD A5 B6 04 0472*  	call vdu_load_img
04911D             0473*  
04911D 21 11 95 04 0474*  	ld hl,Frc076
049121 11 C5 C2 04 0475*  	ld de,filedata
049125 01 00 00 01 0476*  	ld bc,65536
049129 3E 01       0477*  	ld a,mos_load
04912B 5B CF       0478*  	RST.LIL 08h
04912D 21 4C 10 00 0479*  	ld hl,BUF_4172
049131 01 08 00 00 0480*  	ld bc,8
049135 11 0E 00 00 0481*  	ld de,14
049139 DD 21 70 00 0482*  	ld ix,112
       00          
04913E CD A5 B6 04 0483*  	call vdu_load_img
049142             0484*  
049142 21 24 95 04 0485*  	ld hl,Frc077
049146 11 C5 C2 04 0486*  	ld de,filedata
04914A 01 00 00 01 0487*  	ld bc,65536
04914E 3E 01       0488*  	ld a,mos_load
049150 5B CF       0489*  	RST.LIL 08h
049152 21 4D 10 00 0490*  	ld hl,BUF_4173
049156 01 09 00 00 0491*  	ld bc,9
04915A 11 0E 00 00 0492*  	ld de,14
04915E DD 21 7E 00 0493*  	ld ix,126
       00          
049163 CD A5 B6 04 0494*  	call vdu_load_img
049167             0495*  
049167 21 37 95 04 0496*  	ld hl,Frc078
04916B 11 C5 C2 04 0497*  	ld de,filedata
04916F 01 00 00 01 0498*  	ld bc,65536
049173 3E 01       0499*  	ld a,mos_load
049175 5B CF       0500*  	RST.LIL 08h
049177 21 4E 10 00 0501*  	ld hl,BUF_4174
04917B 01 07 00 00 0502*  	ld bc,7
04917F 11 0E 00 00 0503*  	ld de,14
049183 DD 21 62 00 0504*  	ld ix,98
       00          
049188 CD A5 B6 04 0505*  	call vdu_load_img
04918C             0506*  
04918C 21 4A 95 04 0507*  	ld hl,Frc079
049190 11 C5 C2 04 0508*  	ld de,filedata
049194 01 00 00 01 0509*  	ld bc,65536
049198 3E 01       0510*  	ld a,mos_load
04919A 5B CF       0511*  	RST.LIL 08h
04919C 21 4F 10 00 0512*  	ld hl,BUF_4175
0491A0 01 08 00 00 0513*  	ld bc,8
0491A4 11 0E 00 00 0514*  	ld de,14
0491A8 DD 21 70 00 0515*  	ld ix,112
       00          
0491AD CD A5 B6 04 0516*  	call vdu_load_img
0491B1             0517*  
0491B1 21 5D 95 04 0518*  	ld hl,Frc080
0491B5 11 C5 C2 04 0519*  	ld de,filedata
0491B9 01 00 00 01 0520*  	ld bc,65536
0491BD 3E 01       0521*  	ld a,mos_load
0491BF 5B CF       0522*  	RST.LIL 08h
0491C1 21 50 10 00 0523*  	ld hl,BUF_4176
0491C5 01 07 00 00 0524*  	ld bc,7
0491C9 11 0E 00 00 0525*  	ld de,14
0491CD DD 21 62 00 0526*  	ld ix,98
       00          
0491D2 CD A5 B6 04 0527*  	call vdu_load_img
0491D6             0528*  
0491D6 21 70 95 04 0529*  	ld hl,Frc081
0491DA 11 C5 C2 04 0530*  	ld de,filedata
0491DE 01 00 00 01 0531*  	ld bc,65536
0491E2 3E 01       0532*  	ld a,mos_load
0491E4 5B CF       0533*  	RST.LIL 08h
0491E6 21 51 10 00 0534*  	ld hl,BUF_4177
0491EA 01 08 00 00 0535*  	ld bc,8
0491EE 11 0F 00 00 0536*  	ld de,15
0491F2 DD 21 78 00 0537*  	ld ix,120
       00          
0491F7 CD A5 B6 04 0538*  	call vdu_load_img
0491FB             0539*  
0491FB 21 83 95 04 0540*  	ld hl,Frc082
0491FF 11 C5 C2 04 0541*  	ld de,filedata
049203 01 00 00 01 0542*  	ld bc,65536
049207 3E 01       0543*  	ld a,mos_load
049209 5B CF       0544*  	RST.LIL 08h
04920B 21 52 10 00 0545*  	ld hl,BUF_4178
04920F 01 08 00 00 0546*  	ld bc,8
049213 11 0E 00 00 0547*  	ld de,14
049217 DD 21 70 00 0548*  	ld ix,112
       00          
04921C CD A5 B6 04 0549*  	call vdu_load_img
049220             0550*  
049220 21 96 95 04 0551*  	ld hl,Frc083
049224 11 C5 C2 04 0552*  	ld de,filedata
049228 01 00 00 01 0553*  	ld bc,65536
04922C 3E 01       0554*  	ld a,mos_load
04922E 5B CF       0555*  	RST.LIL 08h
049230 21 53 10 00 0556*  	ld hl,BUF_4179
049234 01 08 00 00 0557*  	ld bc,8
049238 11 0E 00 00 0558*  	ld de,14
04923C DD 21 70 00 0559*  	ld ix,112
       00          
049241 CD A5 B6 04 0560*  	call vdu_load_img
049245             0561*  
049245 21 A9 95 04 0562*  	ld hl,Frc084
049249 11 C5 C2 04 0563*  	ld de,filedata
04924D 01 00 00 01 0564*  	ld bc,65536
049251 3E 01       0565*  	ld a,mos_load
049253 5B CF       0566*  	RST.LIL 08h
049255 21 54 10 00 0567*  	ld hl,BUF_4180
049259 01 07 00 00 0568*  	ld bc,7
04925D 11 0E 00 00 0569*  	ld de,14
049261 DD 21 62 00 0570*  	ld ix,98
       00          
049266 CD A5 B6 04 0571*  	call vdu_load_img
04926A             0572*  
04926A 21 BC 95 04 0573*  	ld hl,Frc085
04926E 11 C5 C2 04 0574*  	ld de,filedata
049272 01 00 00 01 0575*  	ld bc,65536
049276 3E 01       0576*  	ld a,mos_load
049278 5B CF       0577*  	RST.LIL 08h
04927A 21 55 10 00 0578*  	ld hl,BUF_4181
04927E 01 08 00 00 0579*  	ld bc,8
049282 11 0E 00 00 0580*  	ld de,14
049286 DD 21 70 00 0581*  	ld ix,112
       00          
04928B CD A5 B6 04 0582*  	call vdu_load_img
04928F             0583*  
04928F 21 CF 95 04 0584*  	ld hl,Frc086
049293 11 C5 C2 04 0585*  	ld de,filedata
049297 01 00 00 01 0586*  	ld bc,65536
04929B 3E 01       0587*  	ld a,mos_load
04929D 5B CF       0588*  	RST.LIL 08h
04929F 21 56 10 00 0589*  	ld hl,BUF_4182
0492A3 01 07 00 00 0590*  	ld bc,7
0492A7 11 0E 00 00 0591*  	ld de,14
0492AB DD 21 62 00 0592*  	ld ix,98
       00          
0492B0 CD A5 B6 04 0593*  	call vdu_load_img
0492B4             0594*  
0492B4 21 E2 95 04 0595*  	ld hl,Frc087
0492B8 11 C5 C2 04 0596*  	ld de,filedata
0492BC 01 00 00 01 0597*  	ld bc,65536
0492C0 3E 01       0598*  	ld a,mos_load
0492C2 5B CF       0599*  	RST.LIL 08h
0492C4 21 57 10 00 0600*  	ld hl,BUF_4183
0492C8 01 0B 00 00 0601*  	ld bc,11
0492CC 11 0E 00 00 0602*  	ld de,14
0492D0 DD 21 9A 00 0603*  	ld ix,154
       00          
0492D5 CD A5 B6 04 0604*  	call vdu_load_img
0492D9             0605*  
0492D9 21 F5 95 04 0606*  	ld hl,Frc088
0492DD 11 C5 C2 04 0607*  	ld de,filedata
0492E1 01 00 00 01 0608*  	ld bc,65536
0492E5 3E 01       0609*  	ld a,mos_load
0492E7 5B CF       0610*  	RST.LIL 08h
0492E9 21 58 10 00 0611*  	ld hl,BUF_4184
0492ED 01 07 00 00 0612*  	ld bc,7
0492F1 11 0E 00 00 0613*  	ld de,14
0492F5 DD 21 62 00 0614*  	ld ix,98
       00          
0492FA CD A5 B6 04 0615*  	call vdu_load_img
0492FE             0616*  
0492FE 21 08 96 04 0617*  	ld hl,Frc089
049302 11 C5 C2 04 0618*  	ld de,filedata
049306 01 00 00 01 0619*  	ld bc,65536
04930A 3E 01       0620*  	ld a,mos_load
04930C 5B CF       0621*  	RST.LIL 08h
04930E 21 59 10 00 0622*  	ld hl,BUF_4185
049312 01 08 00 00 0623*  	ld bc,8
049316 11 0E 00 00 0624*  	ld de,14
04931A DD 21 70 00 0625*  	ld ix,112
       00          
04931F CD A5 B6 04 0626*  	call vdu_load_img
049323             0627*  
049323 21 1B 96 04 0628*  	ld hl,Frc090
049327 11 C5 C2 04 0629*  	ld de,filedata
04932B 01 00 00 01 0630*  	ld bc,65536
04932F 3E 01       0631*  	ld a,mos_load
049331 5B CF       0632*  	RST.LIL 08h
049333 21 5A 10 00 0633*  	ld hl,BUF_4186
049337 01 07 00 00 0634*  	ld bc,7
04933B 11 0E 00 00 0635*  	ld de,14
04933F DD 21 62 00 0636*  	ld ix,98
       00          
049344 CD A5 B6 04 0637*  	call vdu_load_img
049348             0638*  ; Missing character 91
049348             0639*  ; Missing character 92
049348             0640*  ; Missing character 93
049348             0641*  ; Missing character 94
049348             0642*  ; Missing character 95
049348             0643*  ; Missing character 96
049348             0644*  ; Missing character 97
049348             0645*  ; Missing character 98
049348             0646*  ; Missing character 99
049348             0647*  ; Missing character 100
049348             0648*  ; Missing character 101
049348             0649*  ; Missing character 102
049348             0650*  ; Missing character 103
049348             0651*  ; Missing character 104
049348             0652*  ; Missing character 105
049348             0653*  ; Missing character 106
049348             0654*  ; Missing character 107
049348             0655*  ; Missing character 108
049348             0656*  ; Missing character 109
049348             0657*  ; Missing character 110
049348             0658*  ; Missing character 111
049348             0659*  ; Missing character 112
049348             0660*  ; Missing character 113
049348             0661*  ; Missing character 114
049348             0662*  ; Missing character 115
049348             0663*  ; Missing character 116
049348             0664*  ; Missing character 117
049348             0665*  ; Missing character 118
049348             0666*  ; Missing character 119
049348             0667*  ; Missing character 120
049348             0668*  ; Missing character 121
049348             0669*  ; Missing character 122
049348             0670*  
049348 C9          0671*  	ret
049349             0672*  
049349 66 6F 6E 74 0673*  Frc032: db "fonts/rc/032.rgba2",0
       73 2F 72 63 
       2F 30 33 32 
       2E 72 67 62 
       61 32 00    
04935C 66 6F 6E 74 0674*  Frc033: db "fonts/rc/033.rgba2",0
       73 2F 72 63 
       2F 30 33 33 
       2E 72 67 62 
       61 32 00    
04936F 66 6F 6E 74 0675*  Frc048: db "fonts/rc/048.rgba2",0
       73 2F 72 63 
       2F 30 34 38 
       2E 72 67 62 
       61 32 00    
049382 66 6F 6E 74 0676*  Frc049: db "fonts/rc/049.rgba2",0
       73 2F 72 63 
       2F 30 34 39 
       2E 72 67 62 
       61 32 00    
049395 66 6F 6E 74 0677*  Frc050: db "fonts/rc/050.rgba2",0
       73 2F 72 63 
       2F 30 35 30 
       2E 72 67 62 
       61 32 00    
0493A8 66 6F 6E 74 0678*  Frc051: db "fonts/rc/051.rgba2",0
       73 2F 72 63 
       2F 30 35 31 
       2E 72 67 62 
       61 32 00    
0493BB 66 6F 6E 74 0679*  Frc052: db "fonts/rc/052.rgba2",0
       73 2F 72 63 
       2F 30 35 32 
       2E 72 67 62 
       61 32 00    
0493CE 66 6F 6E 74 0680*  Frc053: db "fonts/rc/053.rgba2",0
       73 2F 72 63 
       2F 30 35 33 
       2E 72 67 62 
       61 32 00    
0493E1 66 6F 6E 74 0681*  Frc054: db "fonts/rc/054.rgba2",0
       73 2F 72 63 
       2F 30 35 34 
       2E 72 67 62 
       61 32 00    
0493F4 66 6F 6E 74 0682*  Frc055: db "fonts/rc/055.rgba2",0
       73 2F 72 63 
       2F 30 35 35 
       2E 72 67 62 
       61 32 00    
049407 66 6F 6E 74 0683*  Frc056: db "fonts/rc/056.rgba2",0
       73 2F 72 63 
       2F 30 35 36 
       2E 72 67 62 
       61 32 00    
04941A 66 6F 6E 74 0684*  Frc057: db "fonts/rc/057.rgba2",0
       73 2F 72 63 
       2F 30 35 37 
       2E 72 67 62 
       61 32 00    
04942D 66 6F 6E 74 0685*  Frc063: db "fonts/rc/063.rgba2",0
       73 2F 72 63 
       2F 30 36 33 
       2E 72 67 62 
       61 32 00    
049440 66 6F 6E 74 0686*  Frc065: db "fonts/rc/065.rgba2",0
       73 2F 72 63 
       2F 30 36 35 
       2E 72 67 62 
       61 32 00    
049453 66 6F 6E 74 0687*  Frc066: db "fonts/rc/066.rgba2",0
       73 2F 72 63 
       2F 30 36 36 
       2E 72 67 62 
       61 32 00    
049466 66 6F 6E 74 0688*  Frc067: db "fonts/rc/067.rgba2",0
       73 2F 72 63 
       2F 30 36 37 
       2E 72 67 62 
       61 32 00    
049479 66 6F 6E 74 0689*  Frc068: db "fonts/rc/068.rgba2",0
       73 2F 72 63 
       2F 30 36 38 
       2E 72 67 62 
       61 32 00    
04948C 66 6F 6E 74 0690*  Frc069: db "fonts/rc/069.rgba2",0
       73 2F 72 63 
       2F 30 36 39 
       2E 72 67 62 
       61 32 00    
04949F 66 6F 6E 74 0691*  Frc070: db "fonts/rc/070.rgba2",0
       73 2F 72 63 
       2F 30 37 30 
       2E 72 67 62 
       61 32 00    
0494B2 66 6F 6E 74 0692*  Frc071: db "fonts/rc/071.rgba2",0
       73 2F 72 63 
       2F 30 37 31 
       2E 72 67 62 
       61 32 00    
0494C5 66 6F 6E 74 0693*  Frc072: db "fonts/rc/072.rgba2",0
       73 2F 72 63 
       2F 30 37 32 
       2E 72 67 62 
       61 32 00    
0494D8 66 6F 6E 74 0694*  Frc073: db "fonts/rc/073.rgba2",0
       73 2F 72 63 
       2F 30 37 33 
       2E 72 67 62 
       61 32 00    
0494EB 66 6F 6E 74 0695*  Frc074: db "fonts/rc/074.rgba2",0
       73 2F 72 63 
       2F 30 37 34 
       2E 72 67 62 
       61 32 00    
0494FE 66 6F 6E 74 0696*  Frc075: db "fonts/rc/075.rgba2",0
       73 2F 72 63 
       2F 30 37 35 
       2E 72 67 62 
       61 32 00    
049511 66 6F 6E 74 0697*  Frc076: db "fonts/rc/076.rgba2",0
       73 2F 72 63 
       2F 30 37 36 
       2E 72 67 62 
       61 32 00    
049524 66 6F 6E 74 0698*  Frc077: db "fonts/rc/077.rgba2",0
       73 2F 72 63 
       2F 30 37 37 
       2E 72 67 62 
       61 32 00    
049537 66 6F 6E 74 0699*  Frc078: db "fonts/rc/078.rgba2",0
       73 2F 72 63 
       2F 30 37 38 
       2E 72 67 62 
       61 32 00    
04954A 66 6F 6E 74 0700*  Frc079: db "fonts/rc/079.rgba2",0
       73 2F 72 63 
       2F 30 37 39 
       2E 72 67 62 
       61 32 00    
04955D 66 6F 6E 74 0701*  Frc080: db "fonts/rc/080.rgba2",0
       73 2F 72 63 
       2F 30 38 30 
       2E 72 67 62 
       61 32 00    
049570 66 6F 6E 74 0702*  Frc081: db "fonts/rc/081.rgba2",0
       73 2F 72 63 
       2F 30 38 31 
       2E 72 67 62 
       61 32 00    
049583 66 6F 6E 74 0703*  Frc082: db "fonts/rc/082.rgba2",0
       73 2F 72 63 
       2F 30 38 32 
       2E 72 67 62 
       61 32 00    
049596 66 6F 6E 74 0704*  Frc083: db "fonts/rc/083.rgba2",0
       73 2F 72 63 
       2F 30 38 33 
       2E 72 67 62 
       61 32 00    
0495A9 66 6F 6E 74 0705*  Frc084: db "fonts/rc/084.rgba2",0
       73 2F 72 63 
       2F 30 38 34 
       2E 72 67 62 
       61 32 00    
0495BC 66 6F 6E 74 0706*  Frc085: db "fonts/rc/085.rgba2",0
       73 2F 72 63 
       2F 30 38 35 
       2E 72 67 62 
       61 32 00    
0495CF 66 6F 6E 74 0707*  Frc086: db "fonts/rc/086.rgba2",0
       73 2F 72 63 
       2F 30 38 36 
       2E 72 67 62 
       61 32 00    
0495E2 66 6F 6E 74 0708*  Frc087: db "fonts/rc/087.rgba2",0
       73 2F 72 63 
       2F 30 38 37 
       2E 72 67 62 
       61 32 00    
0495F5 66 6F 6E 74 0709*  Frc088: db "fonts/rc/088.rgba2",0
       73 2F 72 63 
       2F 30 38 38 
       2E 72 67 62 
       61 32 00    
049608 66 6F 6E 74 0710*  Frc089: db "fonts/rc/089.rgba2",0
       73 2F 72 63 
       2F 30 38 39 
       2E 72 67 62 
       61 32 00    
04961B 66 6F 6E 74 0711*  Frc090: db "fonts/rc/090.rgba2",0
       73 2F 72 63 
       2F 30 39 30 
       2E 72 67 62 
       61 32 00    
04962E             0026   	include "src/asm/ui.asm"
04962E             0001*  ; ui routines will go here
04962E             0027   	include "src/asm/ui_img.asm"
04962E             0001*  ; Bitmap indices:
04962E             0002*  BUF_UI_BJ_120_120: equ 0x2000
04962E             0003*  BUF_UI_LOWER_PANEL: equ 0x2001
04962E             0004*  BUF_UI_LOWER_PANEL_GATLING: equ 0x2002
04962E             0005*  BUF_UI_LOWER_PANEL_KNIFE: equ 0x2003
04962E             0006*  BUF_UI_LOWER_PANEL_MACHINE_GUN: equ 0x2004
04962E             0007*  BUF_UI_LOWER_PANEL_PISTOL: equ 0x2005
04962E             0008*  BUF_UI_SPLASH: equ 0x2006
04962E             0009*  
04962E             0010*  ; Import .rgba2 bitmap files and load them into VDP buffers
04962E             0011*  load_ui_images:
04962E             0012*  
04962E 21 4E 97 04 0013*  	ld hl,F_UI_bj_120_120
049632 11 C5 C2 04 0014*  	ld de,filedata
049636 01 00 00 01 0015*  	ld bc,65536
04963A 3E 01       0016*  	ld a,mos_load
04963C 5B CF       0017*  	RST.LIL 08h
04963E 21 00 20 00 0018*  	ld hl,BUF_UI_BJ_120_120
049642 01 78 00 00 0019*  	ld bc,120
049646 11 78 00 00 0020*  	ld de,120
04964A DD 21 40 38 0021*  	ld ix,14400
       00          
04964F CD A5 B6 04 0022*  	call vdu_load_img
049653 3E 2E       0023*  	LD A, '.'
049655 5B D7       0024*  	RST.LIL 10h
049657             0025*  
049657 21 62 97 04 0026*  	ld hl,F_UI_lower_panel
04965B 11 C5 C2 04 0027*  	ld de,filedata
04965F 01 00 00 01 0028*  	ld bc,65536
049663 3E 01       0029*  	ld a,mos_load
049665 5B CF       0030*  	RST.LIL 08h
049667 21 01 20 00 0031*  	ld hl,BUF_UI_LOWER_PANEL
04966B 01 40 01 00 0032*  	ld bc,320
04966F 11 50 00 00 0033*  	ld de,80
049673 DD 21 00 64 0034*  	ld ix,25600
       00          
049678 CD A5 B6 04 0035*  	call vdu_load_img
04967C 3E 2E       0036*  	LD A, '.'
04967E 5B D7       0037*  	RST.LIL 10h
049680             0038*  
049680 21 77 97 04 0039*  	ld hl,F_UI_lower_panel_gatling
049684 11 C5 C2 04 0040*  	ld de,filedata
049688 01 00 00 01 0041*  	ld bc,65536
04968C 3E 01       0042*  	ld a,mos_load
04968E 5B CF       0043*  	RST.LIL 08h
049690 21 02 20 00 0044*  	ld hl,BUF_UI_LOWER_PANEL_GATLING
049694 01 28 00 00 0045*  	ld bc,40
049698 11 14 00 00 0046*  	ld de,20
04969C DD 21 20 03 0047*  	ld ix,800
       00          
0496A1 CD A5 B6 04 0048*  	call vdu_load_img
0496A5 3E 2E       0049*  	LD A, '.'
0496A7 5B D7       0050*  	RST.LIL 10h
0496A9             0051*  
0496A9 21 94 97 04 0052*  	ld hl,F_UI_lower_panel_knife
0496AD 11 C5 C2 04 0053*  	ld de,filedata
0496B1 01 00 00 01 0054*  	ld bc,65536
0496B5 3E 01       0055*  	ld a,mos_load
0496B7 5B CF       0056*  	RST.LIL 08h
0496B9 21 03 20 00 0057*  	ld hl,BUF_UI_LOWER_PANEL_KNIFE
0496BD 01 28 00 00 0058*  	ld bc,40
0496C1 11 14 00 00 0059*  	ld de,20
0496C5 DD 21 20 03 0060*  	ld ix,800
       00          
0496CA CD A5 B6 04 0061*  	call vdu_load_img
0496CE 3E 2E       0062*  	LD A, '.'
0496D0 5B D7       0063*  	RST.LIL 10h
0496D2             0064*  
0496D2 21 AF 97 04 0065*  	ld hl,F_UI_lower_panel_machine_gun
0496D6 11 C5 C2 04 0066*  	ld de,filedata
0496DA 01 00 00 01 0067*  	ld bc,65536
0496DE 3E 01       0068*  	ld a,mos_load
0496E0 5B CF       0069*  	RST.LIL 08h
0496E2 21 04 20 00 0070*  	ld hl,BUF_UI_LOWER_PANEL_MACHINE_GUN
0496E6 01 28 00 00 0071*  	ld bc,40
0496EA 11 14 00 00 0072*  	ld de,20
0496EE DD 21 20 03 0073*  	ld ix,800
       00          
0496F3 CD A5 B6 04 0074*  	call vdu_load_img
0496F7 3E 2E       0075*  	LD A, '.'
0496F9 5B D7       0076*  	RST.LIL 10h
0496FB             0077*  
0496FB 21 D0 97 04 0078*  	ld hl,F_UI_lower_panel_pistol
0496FF 11 C5 C2 04 0079*  	ld de,filedata
049703 01 00 00 01 0080*  	ld bc,65536
049707 3E 01       0081*  	ld a,mos_load
049709 5B CF       0082*  	RST.LIL 08h
04970B 21 05 20 00 0083*  	ld hl,BUF_UI_LOWER_PANEL_PISTOL
04970F 01 28 00 00 0084*  	ld bc,40
049713 11 14 00 00 0085*  	ld de,20
049717 DD 21 20 03 0086*  	ld ix,800
       00          
04971C CD A5 B6 04 0087*  	call vdu_load_img
049720 3E 2E       0088*  	LD A, '.'
049722 5B D7       0089*  	RST.LIL 10h
049724             0090*  
049724 21 EC 97 04 0091*  	ld hl,F_UI_splash
049728 11 C5 C2 04 0092*  	ld de,filedata
04972C 01 00 00 01 0093*  	ld bc,65536
049730 3E 01       0094*  	ld a,mos_load
049732 5B CF       0095*  	RST.LIL 08h
049734 21 06 20 00 0096*  	ld hl,BUF_UI_SPLASH
049738 01 40 01 00 0097*  	ld bc,320
04973C 11 A0 00 00 0098*  	ld de,160
049740 DD 21 00 C8 0099*  	ld ix,51200
       00          
049745 CD A5 B6 04 0100*  	call vdu_load_img
049749 3E 2E       0101*  	LD A, '.'
04974B 5B D7       0102*  	RST.LIL 10h
04974D             0103*  
04974D C9          0104*  	ret
04974E             0105*  
04974E 75 69 2F 62 0106*  F_UI_bj_120_120: db "ui/bj_120_120.rgba2",0
       6A 5F 31 32 
       30 5F 31 32 
       30 2E 72 67 
       62 61 32 00 
049762 75 69 2F 6C 0107*  F_UI_lower_panel: db "ui/lower_panel.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 2E 72 
       67 62 61 32 
       00          
049777 75 69 2F 6C 0108*  F_UI_lower_panel_gatling: db "ui/lower_panel_gatling.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 67 
       61 74 6C 69 
       6E 67 2E 72 
       67 62 61 32 
       00          
049794 75 69 2F 6C 0109*  F_UI_lower_panel_knife: db "ui/lower_panel_knife.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 6B 
       6E 69 66 65 
       2E 72 67 62 
       61 32 00    
0497AF 75 69 2F 6C 0110*  F_UI_lower_panel_machine_gun: db "ui/lower_panel_machine_gun.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 6D 
       61 63 68 69 
       6E 65 5F 67 
       75 6E 2E 72 
       67 62 61 32 
       00          
0497D0 75 69 2F 6C 0111*  F_UI_lower_panel_pistol: db "ui/lower_panel_pistol.rgba2",0
       6F 77 65 72 
       5F 70 61 6E 
       65 6C 5F 70 
       69 73 74 6F 
       6C 2E 72 67 
       62 61 32 00 
0497EC 75 69 2F 73 0112*  F_UI_splash: db "ui/splash.rgba2",0
       70 6C 61 73 
       68 2E 72 67 
       62 61 32 00 
0497FC             0028   	include "src/asm/ui_img_bj.asm"
0497FC             0001*  ; Bitmap indices:
0497FC             0002*  BUF_UI_BJ_GATLING_00: equ 0x2100
0497FC             0003*  BUF_UI_BJ_GATLING_01: equ 0x2101
0497FC             0004*  BUF_UI_BJ_GATLING_02: equ 0x2102
0497FC             0005*  BUF_UI_BJ_GATLING_03: equ 0x2103
0497FC             0006*  BUF_UI_BJ_GATLING_04: equ 0x2104
0497FC             0007*  BUF_UI_BJ_KNIFE_00: equ 0x2105
0497FC             0008*  BUF_UI_BJ_KNIFE_01: equ 0x2106
0497FC             0009*  BUF_UI_BJ_KNIFE_02: equ 0x2107
0497FC             0010*  BUF_UI_BJ_KNIFE_03: equ 0x2108
0497FC             0011*  BUF_UI_BJ_KNIFE_04: equ 0x2109
0497FC             0012*  BUF_UI_BJ_MACHINE_GUN_00: equ 0x210A
0497FC             0013*  BUF_UI_BJ_MACHINE_GUN_01: equ 0x210B
0497FC             0014*  BUF_UI_BJ_MACHINE_GUN_02: equ 0x210C
0497FC             0015*  BUF_UI_BJ_MACHINE_GUN_03: equ 0x210D
0497FC             0016*  BUF_UI_BJ_MACHINE_GUN_04: equ 0x210E
0497FC             0017*  BUF_UI_BJ_PISTOL_00: equ 0x210F
0497FC             0018*  BUF_UI_BJ_PISTOL_01: equ 0x2110
0497FC             0019*  BUF_UI_BJ_PISTOL_02: equ 0x2111
0497FC             0020*  BUF_UI_BJ_PISTOL_03: equ 0x2112
0497FC             0021*  BUF_UI_BJ_PISTOL_04: equ 0x2113
0497FC             0022*  
0497FC             0023*  ; Import .rgba2 bitmap files and load them into VDP buffers
0497FC             0024*  load_ui_images_bj:
0497FC             0025*  
0497FC 21 31 9B 04 0026*  	ld hl,F_UI_bj_gatling_00
049800 11 C5 C2 04 0027*  	ld de,filedata
049804 01 00 00 01 0028*  	ld bc,65536
049808 3E 01       0029*  	ld a,mos_load
04980A 5B CF       0030*  	RST.LIL 08h
04980C 21 00 21 00 0031*  	ld hl,BUF_UI_BJ_GATLING_00
049810 01 40 00 00 0032*  	ld bc,64
049814 11 40 00 00 0033*  	ld de,64
049818 DD 21 00 10 0034*  	ld ix,4096
       00          
04981D CD A5 B6 04 0035*  	call vdu_load_img
049821 3E 2E       0036*  	LD A, '.'
049823 5B D7       0037*  	RST.LIL 10h
049825             0038*  
049825 21 4B 9B 04 0039*  	ld hl,F_UI_bj_gatling_01
049829 11 C5 C2 04 0040*  	ld de,filedata
04982D 01 00 00 01 0041*  	ld bc,65536
049831 3E 01       0042*  	ld a,mos_load
049833 5B CF       0043*  	RST.LIL 08h
049835 21 01 21 00 0044*  	ld hl,BUF_UI_BJ_GATLING_01
049839 01 40 00 00 0045*  	ld bc,64
04983D 11 40 00 00 0046*  	ld de,64
049841 DD 21 00 10 0047*  	ld ix,4096
       00          
049846 CD A5 B6 04 0048*  	call vdu_load_img
04984A 3E 2E       0049*  	LD A, '.'
04984C 5B D7       0050*  	RST.LIL 10h
04984E             0051*  
04984E 21 65 9B 04 0052*  	ld hl,F_UI_bj_gatling_02
049852 11 C5 C2 04 0053*  	ld de,filedata
049856 01 00 00 01 0054*  	ld bc,65536
04985A 3E 01       0055*  	ld a,mos_load
04985C 5B CF       0056*  	RST.LIL 08h
04985E 21 02 21 00 0057*  	ld hl,BUF_UI_BJ_GATLING_02
049862 01 40 00 00 0058*  	ld bc,64
049866 11 40 00 00 0059*  	ld de,64
04986A DD 21 00 10 0060*  	ld ix,4096
       00          
04986F CD A5 B6 04 0061*  	call vdu_load_img
049873 3E 2E       0062*  	LD A, '.'
049875 5B D7       0063*  	RST.LIL 10h
049877             0064*  
049877 21 7F 9B 04 0065*  	ld hl,F_UI_bj_gatling_03
04987B 11 C5 C2 04 0066*  	ld de,filedata
04987F 01 00 00 01 0067*  	ld bc,65536
049883 3E 01       0068*  	ld a,mos_load
049885 5B CF       0069*  	RST.LIL 08h
049887 21 03 21 00 0070*  	ld hl,BUF_UI_BJ_GATLING_03
04988B 01 40 00 00 0071*  	ld bc,64
04988F 11 40 00 00 0072*  	ld de,64
049893 DD 21 00 10 0073*  	ld ix,4096
       00          
049898 CD A5 B6 04 0074*  	call vdu_load_img
04989C 3E 2E       0075*  	LD A, '.'
04989E 5B D7       0076*  	RST.LIL 10h
0498A0             0077*  
0498A0 21 99 9B 04 0078*  	ld hl,F_UI_bj_gatling_04
0498A4 11 C5 C2 04 0079*  	ld de,filedata
0498A8 01 00 00 01 0080*  	ld bc,65536
0498AC 3E 01       0081*  	ld a,mos_load
0498AE 5B CF       0082*  	RST.LIL 08h
0498B0 21 04 21 00 0083*  	ld hl,BUF_UI_BJ_GATLING_04
0498B4 01 40 00 00 0084*  	ld bc,64
0498B8 11 40 00 00 0085*  	ld de,64
0498BC DD 21 00 10 0086*  	ld ix,4096
       00          
0498C1 CD A5 B6 04 0087*  	call vdu_load_img
0498C5 3E 2E       0088*  	LD A, '.'
0498C7 5B D7       0089*  	RST.LIL 10h
0498C9             0090*  
0498C9 21 B3 9B 04 0091*  	ld hl,F_UI_bj_knife_00
0498CD 11 C5 C2 04 0092*  	ld de,filedata
0498D1 01 00 00 01 0093*  	ld bc,65536
0498D5 3E 01       0094*  	ld a,mos_load
0498D7 5B CF       0095*  	RST.LIL 08h
0498D9 21 05 21 00 0096*  	ld hl,BUF_UI_BJ_KNIFE_00
0498DD 01 40 00 00 0097*  	ld bc,64
0498E1 11 40 00 00 0098*  	ld de,64
0498E5 DD 21 00 10 0099*  	ld ix,4096
       00          
0498EA CD A5 B6 04 0100*  	call vdu_load_img
0498EE 3E 2E       0101*  	LD A, '.'
0498F0 5B D7       0102*  	RST.LIL 10h
0498F2             0103*  
0498F2 21 CB 9B 04 0104*  	ld hl,F_UI_bj_knife_01
0498F6 11 C5 C2 04 0105*  	ld de,filedata
0498FA 01 00 00 01 0106*  	ld bc,65536
0498FE 3E 01       0107*  	ld a,mos_load
049900 5B CF       0108*  	RST.LIL 08h
049902 21 06 21 00 0109*  	ld hl,BUF_UI_BJ_KNIFE_01
049906 01 40 00 00 0110*  	ld bc,64
04990A 11 40 00 00 0111*  	ld de,64
04990E DD 21 00 10 0112*  	ld ix,4096
       00          
049913 CD A5 B6 04 0113*  	call vdu_load_img
049917 3E 2E       0114*  	LD A, '.'
049919 5B D7       0115*  	RST.LIL 10h
04991B             0116*  
04991B 21 E3 9B 04 0117*  	ld hl,F_UI_bj_knife_02
04991F 11 C5 C2 04 0118*  	ld de,filedata
049923 01 00 00 01 0119*  	ld bc,65536
049927 3E 01       0120*  	ld a,mos_load
049929 5B CF       0121*  	RST.LIL 08h
04992B 21 07 21 00 0122*  	ld hl,BUF_UI_BJ_KNIFE_02
04992F 01 40 00 00 0123*  	ld bc,64
049933 11 40 00 00 0124*  	ld de,64
049937 DD 21 00 10 0125*  	ld ix,4096
       00          
04993C CD A5 B6 04 0126*  	call vdu_load_img
049940 3E 2E       0127*  	LD A, '.'
049942 5B D7       0128*  	RST.LIL 10h
049944             0129*  
049944 21 FB 9B 04 0130*  	ld hl,F_UI_bj_knife_03
049948 11 C5 C2 04 0131*  	ld de,filedata
04994C 01 00 00 01 0132*  	ld bc,65536
049950 3E 01       0133*  	ld a,mos_load
049952 5B CF       0134*  	RST.LIL 08h
049954 21 08 21 00 0135*  	ld hl,BUF_UI_BJ_KNIFE_03
049958 01 40 00 00 0136*  	ld bc,64
04995C 11 40 00 00 0137*  	ld de,64
049960 DD 21 00 10 0138*  	ld ix,4096
       00          
049965 CD A5 B6 04 0139*  	call vdu_load_img
049969 3E 2E       0140*  	LD A, '.'
04996B 5B D7       0141*  	RST.LIL 10h
04996D             0142*  
04996D 21 13 9C 04 0143*  	ld hl,F_UI_bj_knife_04
049971 11 C5 C2 04 0144*  	ld de,filedata
049975 01 00 00 01 0145*  	ld bc,65536
049979 3E 01       0146*  	ld a,mos_load
04997B 5B CF       0147*  	RST.LIL 08h
04997D 21 09 21 00 0148*  	ld hl,BUF_UI_BJ_KNIFE_04
049981 01 40 00 00 0149*  	ld bc,64
049985 11 40 00 00 0150*  	ld de,64
049989 DD 21 00 10 0151*  	ld ix,4096
       00          
04998E CD A5 B6 04 0152*  	call vdu_load_img
049992 3E 2E       0153*  	LD A, '.'
049994 5B D7       0154*  	RST.LIL 10h
049996             0155*  
049996 21 2B 9C 04 0156*  	ld hl,F_UI_bj_machine_gun_00
04999A 11 C5 C2 04 0157*  	ld de,filedata
04999E 01 00 00 01 0158*  	ld bc,65536
0499A2 3E 01       0159*  	ld a,mos_load
0499A4 5B CF       0160*  	RST.LIL 08h
0499A6 21 0A 21 00 0161*  	ld hl,BUF_UI_BJ_MACHINE_GUN_00
0499AA 01 40 00 00 0162*  	ld bc,64
0499AE 11 40 00 00 0163*  	ld de,64
0499B2 DD 21 00 10 0164*  	ld ix,4096
       00          
0499B7 CD A5 B6 04 0165*  	call vdu_load_img
0499BB 3E 2E       0166*  	LD A, '.'
0499BD 5B D7       0167*  	RST.LIL 10h
0499BF             0168*  
0499BF 21 49 9C 04 0169*  	ld hl,F_UI_bj_machine_gun_01
0499C3 11 C5 C2 04 0170*  	ld de,filedata
0499C7 01 00 00 01 0171*  	ld bc,65536
0499CB 3E 01       0172*  	ld a,mos_load
0499CD 5B CF       0173*  	RST.LIL 08h
0499CF 21 0B 21 00 0174*  	ld hl,BUF_UI_BJ_MACHINE_GUN_01
0499D3 01 40 00 00 0175*  	ld bc,64
0499D7 11 40 00 00 0176*  	ld de,64
0499DB DD 21 00 10 0177*  	ld ix,4096
       00          
0499E0 CD A5 B6 04 0178*  	call vdu_load_img
0499E4 3E 2E       0179*  	LD A, '.'
0499E6 5B D7       0180*  	RST.LIL 10h
0499E8             0181*  
0499E8 21 67 9C 04 0182*  	ld hl,F_UI_bj_machine_gun_02
0499EC 11 C5 C2 04 0183*  	ld de,filedata
0499F0 01 00 00 01 0184*  	ld bc,65536
0499F4 3E 01       0185*  	ld a,mos_load
0499F6 5B CF       0186*  	RST.LIL 08h
0499F8 21 0C 21 00 0187*  	ld hl,BUF_UI_BJ_MACHINE_GUN_02
0499FC 01 40 00 00 0188*  	ld bc,64
049A00 11 40 00 00 0189*  	ld de,64
049A04 DD 21 00 10 0190*  	ld ix,4096
       00          
049A09 CD A5 B6 04 0191*  	call vdu_load_img
049A0D 3E 2E       0192*  	LD A, '.'
049A0F 5B D7       0193*  	RST.LIL 10h
049A11             0194*  
049A11 21 85 9C 04 0195*  	ld hl,F_UI_bj_machine_gun_03
049A15 11 C5 C2 04 0196*  	ld de,filedata
049A19 01 00 00 01 0197*  	ld bc,65536
049A1D 3E 01       0198*  	ld a,mos_load
049A1F 5B CF       0199*  	RST.LIL 08h
049A21 21 0D 21 00 0200*  	ld hl,BUF_UI_BJ_MACHINE_GUN_03
049A25 01 40 00 00 0201*  	ld bc,64
049A29 11 40 00 00 0202*  	ld de,64
049A2D DD 21 00 10 0203*  	ld ix,4096
       00          
049A32 CD A5 B6 04 0204*  	call vdu_load_img
049A36 3E 2E       0205*  	LD A, '.'
049A38 5B D7       0206*  	RST.LIL 10h
049A3A             0207*  
049A3A 21 A3 9C 04 0208*  	ld hl,F_UI_bj_machine_gun_04
049A3E 11 C5 C2 04 0209*  	ld de,filedata
049A42 01 00 00 01 0210*  	ld bc,65536
049A46 3E 01       0211*  	ld a,mos_load
049A48 5B CF       0212*  	RST.LIL 08h
049A4A 21 0E 21 00 0213*  	ld hl,BUF_UI_BJ_MACHINE_GUN_04
049A4E 01 40 00 00 0214*  	ld bc,64
049A52 11 40 00 00 0215*  	ld de,64
049A56 DD 21 00 10 0216*  	ld ix,4096
       00          
049A5B CD A5 B6 04 0217*  	call vdu_load_img
049A5F 3E 2E       0218*  	LD A, '.'
049A61 5B D7       0219*  	RST.LIL 10h
049A63             0220*  
049A63 21 C1 9C 04 0221*  	ld hl,F_UI_bj_pistol_00
049A67 11 C5 C2 04 0222*  	ld de,filedata
049A6B 01 00 00 01 0223*  	ld bc,65536
049A6F 3E 01       0224*  	ld a,mos_load
049A71 5B CF       0225*  	RST.LIL 08h
049A73 21 0F 21 00 0226*  	ld hl,BUF_UI_BJ_PISTOL_00
049A77 01 40 00 00 0227*  	ld bc,64
049A7B 11 40 00 00 0228*  	ld de,64
049A7F DD 21 00 10 0229*  	ld ix,4096
       00          
049A84 CD A5 B6 04 0230*  	call vdu_load_img
049A88 3E 2E       0231*  	LD A, '.'
049A8A 5B D7       0232*  	RST.LIL 10h
049A8C             0233*  
049A8C 21 DA 9C 04 0234*  	ld hl,F_UI_bj_pistol_01
049A90 11 C5 C2 04 0235*  	ld de,filedata
049A94 01 00 00 01 0236*  	ld bc,65536
049A98 3E 01       0237*  	ld a,mos_load
049A9A 5B CF       0238*  	RST.LIL 08h
049A9C 21 10 21 00 0239*  	ld hl,BUF_UI_BJ_PISTOL_01
049AA0 01 40 00 00 0240*  	ld bc,64
049AA4 11 40 00 00 0241*  	ld de,64
049AA8 DD 21 00 10 0242*  	ld ix,4096
       00          
049AAD CD A5 B6 04 0243*  	call vdu_load_img
049AB1 3E 2E       0244*  	LD A, '.'
049AB3 5B D7       0245*  	RST.LIL 10h
049AB5             0246*  
049AB5 21 F3 9C 04 0247*  	ld hl,F_UI_bj_pistol_02
049AB9 11 C5 C2 04 0248*  	ld de,filedata
049ABD 01 00 00 01 0249*  	ld bc,65536
049AC1 3E 01       0250*  	ld a,mos_load
049AC3 5B CF       0251*  	RST.LIL 08h
049AC5 21 11 21 00 0252*  	ld hl,BUF_UI_BJ_PISTOL_02
049AC9 01 40 00 00 0253*  	ld bc,64
049ACD 11 40 00 00 0254*  	ld de,64
049AD1 DD 21 00 10 0255*  	ld ix,4096
       00          
049AD6 CD A5 B6 04 0256*  	call vdu_load_img
049ADA 3E 2E       0257*  	LD A, '.'
049ADC 5B D7       0258*  	RST.LIL 10h
049ADE             0259*  
049ADE 21 0C 9D 04 0260*  	ld hl,F_UI_bj_pistol_03
049AE2 11 C5 C2 04 0261*  	ld de,filedata
049AE6 01 00 00 01 0262*  	ld bc,65536
049AEA 3E 01       0263*  	ld a,mos_load
049AEC 5B CF       0264*  	RST.LIL 08h
049AEE 21 12 21 00 0265*  	ld hl,BUF_UI_BJ_PISTOL_03
049AF2 01 40 00 00 0266*  	ld bc,64
049AF6 11 40 00 00 0267*  	ld de,64
049AFA DD 21 00 10 0268*  	ld ix,4096
       00          
049AFF CD A5 B6 04 0269*  	call vdu_load_img
049B03 3E 2E       0270*  	LD A, '.'
049B05 5B D7       0271*  	RST.LIL 10h
049B07             0272*  
049B07 21 25 9D 04 0273*  	ld hl,F_UI_bj_pistol_04
049B0B 11 C5 C2 04 0274*  	ld de,filedata
049B0F 01 00 00 01 0275*  	ld bc,65536
049B13 3E 01       0276*  	ld a,mos_load
049B15 5B CF       0277*  	RST.LIL 08h
049B17 21 13 21 00 0278*  	ld hl,BUF_UI_BJ_PISTOL_04
049B1B 01 40 00 00 0279*  	ld bc,64
049B1F 11 40 00 00 0280*  	ld de,64
049B23 DD 21 00 10 0281*  	ld ix,4096
       00          
049B28 CD A5 B6 04 0282*  	call vdu_load_img
049B2C 3E 2E       0283*  	LD A, '.'
049B2E 5B D7       0284*  	RST.LIL 10h
049B30             0285*  
049B30 C9          0286*  	ret
049B31             0287*  
049B31 75 69 2F 62 0288*  F_UI_bj_gatling_00: db "ui/bj/bj_gatling_00.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 30 2E 
       72 67 62 61 
       32 00       
049B4B 75 69 2F 62 0289*  F_UI_bj_gatling_01: db "ui/bj/bj_gatling_01.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 31 2E 
       72 67 62 61 
       32 00       
049B65 75 69 2F 62 0290*  F_UI_bj_gatling_02: db "ui/bj/bj_gatling_02.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 32 2E 
       72 67 62 61 
       32 00       
049B7F 75 69 2F 62 0291*  F_UI_bj_gatling_03: db "ui/bj/bj_gatling_03.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 33 2E 
       72 67 62 61 
       32 00       
049B99 75 69 2F 62 0292*  F_UI_bj_gatling_04: db "ui/bj/bj_gatling_04.rgba2",0
       6A 2F 62 6A 
       5F 67 61 74 
       6C 69 6E 67 
       5F 30 34 2E 
       72 67 62 61 
       32 00       
049BB3 75 69 2F 62 0293*  F_UI_bj_knife_00: db "ui/bj/bj_knife_00.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       30 2E 72 67 
       62 61 32 00 
049BCB 75 69 2F 62 0294*  F_UI_bj_knife_01: db "ui/bj/bj_knife_01.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       31 2E 72 67 
       62 61 32 00 
049BE3 75 69 2F 62 0295*  F_UI_bj_knife_02: db "ui/bj/bj_knife_02.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       32 2E 72 67 
       62 61 32 00 
049BFB 75 69 2F 62 0296*  F_UI_bj_knife_03: db "ui/bj/bj_knife_03.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       33 2E 72 67 
       62 61 32 00 
049C13 75 69 2F 62 0297*  F_UI_bj_knife_04: db "ui/bj/bj_knife_04.rgba2",0
       6A 2F 62 6A 
       5F 6B 6E 69 
       66 65 5F 30 
       34 2E 72 67 
       62 61 32 00 
049C2B 75 69 2F 62 0298*  F_UI_bj_machine_gun_00: db "ui/bj/bj_machine_gun_00.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 30 2E 
       72 67 62 61 
       32 00       
049C49 75 69 2F 62 0299*  F_UI_bj_machine_gun_01: db "ui/bj/bj_machine_gun_01.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 31 2E 
       72 67 62 61 
       32 00       
049C67 75 69 2F 62 0300*  F_UI_bj_machine_gun_02: db "ui/bj/bj_machine_gun_02.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 32 2E 
       72 67 62 61 
       32 00       
049C85 75 69 2F 62 0301*  F_UI_bj_machine_gun_03: db "ui/bj/bj_machine_gun_03.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 33 2E 
       72 67 62 61 
       32 00       
049CA3 75 69 2F 62 0302*  F_UI_bj_machine_gun_04: db "ui/bj/bj_machine_gun_04.rgba2",0
       6A 2F 62 6A 
       5F 6D 61 63 
       68 69 6E 65 
       5F 67 75 6E 
       5F 30 34 2E 
       72 67 62 61 
       32 00       
049CC1 75 69 2F 62 0303*  F_UI_bj_pistol_00: db "ui/bj/bj_pistol_00.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 30 2E 72 
       67 62 61 32 
       00          
049CDA 75 69 2F 62 0304*  F_UI_bj_pistol_01: db "ui/bj/bj_pistol_01.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 31 2E 72 
       67 62 61 32 
       00          
049CF3 75 69 2F 62 0305*  F_UI_bj_pistol_02: db "ui/bj/bj_pistol_02.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 32 2E 72 
       67 62 61 32 
       00          
049D0C 75 69 2F 62 0306*  F_UI_bj_pistol_03: db "ui/bj/bj_pistol_03.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 33 2E 72 
       67 62 61 32 
       00          
049D25 75 69 2F 62 0307*  F_UI_bj_pistol_04: db "ui/bj/bj_pistol_04.rgba2",0
       6A 2F 62 6A 
       5F 70 69 73 
       74 6F 6C 5F 
       30 34 2E 72 
       67 62 61 32 
       00          
049D3E             0029   	include "src/asm/sprites.asm"
049D3E             0001*  ; ###### SPRITE TABLE FIELD INDICES ######
049D3E             0002*  sprite_id:              equ 00 ; 1 byte  - unique spriteId, zero-based
049D3E             0003*  sprite_obj:             equ 01 ; 1 byte  - type of sprite as defined in polys.asm, 255 is dead
049D3E             0004*  sprite_health:          equ 02 ; 1 byte  - health points, signed binary, zero or negative is dead
049D3E             0005*  sprite_triggers_mask:   equ 03 ; 1 byte  - bitmask for tracking which sprite behaviors have been triggered
049D3E             0006*  sprite_x:               equ 04 ; 1 byte  - map x position
049D3E             0007*  sprite_y:               equ 05 ; 1 byte  - map y position
049D3E             0008*  sprite_orientation:     equ 06 ; 1 byte  - orientation
049D3E             0009*  sprite_animation:       equ 07 ; 1 byte  - current animation index, zero-based
049D3E             0010*  sprite_animation_timer: equ 08 ; 1 byte  - when hits zero, draw next animation frame
049D3E             0011*  sprite_move_timer:      equ 09 ; 1 byte  - when zero, go to next move program, or step
049D3E             0012*  sprite_move_step:       equ 10 ; 1 byte  - stage in a move program sequence, varies
049D3E             0013*  sprite_points:          equ 11 ; 1 byte  - points awarded for killing this sprite type, BCD
049D3E             0014*  sprite_health_modifier:   equ 12 ; 1 byte  - health points deducted per successful attack on player, signed binary (positive gains health)
049D3E             0015*  sprite_unassigned:      equ 13 ; 3 bytes - unassigned can be used for custom properties
049D3E             0016*  sprite_record_size: equ 16 ; 16 bytes per sprite record
049D3E             0017*  
049D3E             0018*  ; sprite_triggers_mask defs
049D3E             0019*  sprite_trigger_see:     equ %00000001 ; player has been seen
049D3E             0020*  sprite_trigger_use:     equ %00000010 ; player has used the sprite
049D3E             0021*  sprite_trigger_hurt:    equ %00000100 ; player has hurt the sprite
049D3E             0022*  sprite_trigger_kill:    equ %00001000 ; player has killed the sprite
049D3E             0023*  sprite_trigger_move:    equ %00010000 ; sprite has moved
049D3E             0024*  sprite_trigger_shoot:   equ %00100000 ; sprite has shot
049D3E             0025*  
049D3E             0026*  ; ###### SPRITE TABLE VARIABLES ######
049D3E             0027*  ; maximum number of sprites
049D3E             0028*  table_max_records:      equ 64 ; at 16 bytes per record = 1024 bytes + 7 KiB for the map is an even 8 KiB
049D3E             0029*  table_total_bytes:      equ table_max_records*sprite_record_size
049D3E             0030*  
049D3E             0031*  ; #### THIS DEFINES THE SPACE ALLOCATED TO THE SPRITE TABLE IN EACH MAP FILE ####
049D3E             0032*  sprite_table_base:       equ 0xB7FC00
049D3E             0033*  sprite_table_limit:      equ sprite_table_base + table_total_bytes + 1 ; in case we ever need to know where it ends
049D3E             0034*  
049D3E             0035*  ; pointer to top address of current record, initialized to sprite_table_base
049D3E 00 FC B7    0036*  sprite_table_pointer: dl sprite_table_base
049D41             0037*  ; how many active sprites
049D41 00          0038*  table_active_sprites: db 0x00
049D42             0039*  ; flag indicating collision with screen edge
049D42             0040*  ; uses orientation codes to specify which edge(s)
049D42 00          0041*  sprite_screen_edge: db #00
049D43             0042*  ; next sprite id to use
049D43 00          0043*  sprite_next_id: db 0
049D44             0044*  
049D44             0045*  ; ######### COLLISION SPRITE PARAMETERS ##########
049D44             0046*  ; integer coordinates are all that are needed for collision calculations
049D44 00          0047*  collision_x: db 0x00
049D45 00          0048*  collision_y: db 0x00
049D46 00          0049*  collision_dim_x: db 0x00
049D47 00          0050*  collision_dim_y: db 0x00
049D48             0051*  
049D48             0052*  ; scratch variables
049D48 00          0053*  x: db 0x00 ; 8-bit signed integer
049D49 00          0054*  y: db 0x00 ; 8-bit signed integer
049D4A 00 00 00    0055*  x0: dl 0x000000 ; 16.8 signed fixed place
049D4D 00 00 00    0056*  y0: dl 0x000000 ; 16.8 signed fixed place
049D50 00 00 00    0057*  incx1: dl 0x000000 ; 16.8 signed fixed place
049D53 00 00 00    0058*  incy1: dl 0x000000 ; 16.8 signed fixed place
049D56 00 00 00    0059*  incx2: dl 0x000000 ; 16.8 signed fixed place
049D59 00 00 00    0060*  incy2: dl 0x000000 ; 16.8 signed fixed place
049D5C             0061*  
049D5C             0062*  ; sprite_heading: dl 0x000000 ; signed fixed 16.8
049D5C 00 00 00    0063*  radius: dl 0x000000 ; signed fixed 16.8 (but should always be positive)
049D5F 00 00 00    0064*  sin_sprite_heading: dl 0x000000 ; signed fixed 16.8
049D62 00 00 00    0065*  cos_sprite_heading: dl 0x000000 ; signed fixed 16.8
049D65             0066*  
049D65             0067*  ; gets the next available sprite id
049D65             0068*  ; inputs; none
049D65             0069*  ; returns: if new sprite available, a = sprite id,
049D65             0070*  ;      ix pointing to new sprite vars, carry set
049D65             0071*  ;      otherwise, a = 0, carry flag reset, ix pointing to highest sprite vars
049D65             0072*  ; destroys: a,b,hl,ix
049D65             0073*  ; affects: bumps table_active_sprites by one
049D65             0074*  table_get_next_id:
049D65 DD 21 00 FC 0075*      ld ix,sprite_table_base
       B7          
049D6A 11 10 00 00 0076*      ld de,sprite_record_size
049D6E 06 40       0077*      ld b,table_max_records
049D70             0078*  @loop:
049D70 DD 7E 01    0079*      ld a,(ix+sprite_obj)
049D73 A7          0080*      and a
049D74 28 06       0081*      jr z,@found
049D76 DD 19       0082*      add ix,de
049D78 10 F6       0083*      djnz @loop
049D7A             0084*  @notfound:
049D7A AF          0085*      xor a ; a = 0 and reset carry flag indicating that we didn't find a free sprite
049D7B C9          0086*      ret
049D7C             0087*  @found:
049D7C             0088*  ; bump number of active sprites
049D7C 21 41 9D 04 0089*      ld hl,table_active_sprites
049D80 34          0090*      inc (hl)
049D81             0091*  ; return sprite id
049D81 3E 40       0092*      ld a,table_max_records
049D83 90          0093*      sub b
049D84 32 43 9D 04 0094*      ld (sprite_next_id),a
049D88 37          0095*      scf ; sets carry flag indicating we found a free sprite
049D89 C9          0096*      ret ; done
049D8A             0097*  
049D8A             0098*  ; deactivate the sprite with the given id
049D8A             0099*  ; inputs: a = sprite id
049D8A             0100*  ; outputs: nothing
049D8A             0101*  ; destroys: a,ix,de
049D8A             0102*  ; affects: decrements table_active_sprites by one
049D8A             0103*  table_deactivate_sprite:
049D8A F5          0104*      push af ; save sprite id bc we need it later
049D8B CD F0 A9 04 0105*      call vdu_sprite_select
049D8F CD 74 AA 04 0106*      call vdu_sprite_hide
049D93 F1          0107*      pop af ; restore sprite id
049D94 11 00 00 00 0108*      ld de,0 ; clear deu
049D98 57          0109*      ld d,a
049D99 1E 10       0110*      ld e,sprite_record_size
049D9B ED 5C       0111*      mlt de
049D9D DD 21 00 FC 0112*      ld ix,sprite_table_base
       B7          
049DA2 DD 19       0113*      add ix,de
049DA4 AF          0114*      xor a
049DA5 DD 77 01    0115*      ld (ix+sprite_obj),a
049DA8 DD 21 41 9D 0116*      ld ix,table_active_sprites
       04          
049DAD DD 35 00    0117*      dec (ix)
049DB0 C9          0118*      ret
049DB1             0119*  
049DB1             0120*  ; sets iy and sprite_table_pointer to the sprite record with the given id
049DB1             0121*  ; inputs: a = sprite id
049DB1             0122*  ; outputs: iy = sprite_table_pointer to the sprite record with the given id
049DB1             0123*  ; destroys: bc
049DB1             0124*  sprite_set_pointer:
049DB1 47          0125*      ld b,a
049DB2 0E 10       0126*      ld c,sprite_record_size
049DB4 ED 4C       0127*      mlt bc
049DB6 FD 21 00 FC 0128*      ld iy,sprite_table_base
       B7          
049DBB FD 09       0129*      add iy,bc
049DBD FD 22 3E 9D 0130*      ld (sprite_table_pointer),iy
       04          
049DC2 C9          0131*      ret
049DC3             0132*  
049DC3             0133*  ; set the active sprite record to no sprite and remove it from the map cell it was in
049DC3             0134*  ; inputs: iy pointed at sprite record to clear
049DC3             0135*  sprite_kill:
049DC3             0136*  ; set sprite table record to no sprite
049DC3 21 FF FF FF 0137*      ld hl,0xFFFFFF ; a string of -1s
049DC7 FD 2F 00    0138*      ld (iy),hl ; populates sprite_id, sprite_obj and sprite_heatlth with -1, all indicating that it is quite dead
049DCA             0139*  
049DCA             0140*  ; set map cell to no sprite and normal floor
049DCA 21 01 FF 1D 0141*      ld hl,0x1DFF01 ; normal floor TODO: we should set these values dyanmically based on the defs in tiles.txt at some point
049DCE DD 2F 00    0142*      ld (ix),hl
049DD1 3E FF       0143*      ld a,0xFF ; no sprite
049DD3 DD 77 03    0144*      ld (ix+map_sprite_id),a ; now sprite is truly dead
049DD6 C9          0145*      ret
049DD7             0146*  
049DD7 00          0147*  sprite_new_x: db 0x00
049DD8 00          0148*  sprite_new_y: db 0x00
049DD9 00          0149*                db 0x00 ; padding
049DDA             0150*  
049DDA             0151*  ; checks if the sprite can move to the new position
049DDA             0152*  ; inputs: iy pointed at sprite record, d,e = new y,x position
049DDA             0153*  sprite_check_move:
049DDA ED 53 D7 9D 0154*      ld (sprite_new_x),de ; save new y,x position
       04          
049DDF CD C7 63 04 0155*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
049DE3             0156*  ; check whether target cell contains a sprite
049DE3 DD 7E 03    0157*      ld a,(ix+map_sprite_id)
049DE6 FE FF       0158*      cp 255 ; value if not sprite
049DE8 C0          0159*      ret nz ; already occupied by another sprite so we can't move there
049DE9             0160*  ; read map type/status mask from target cell
049DE9 DD 7E 00    0161*      ld a,(ix+map_type_status)
049DEC E6 01       0162*      and render_type_floor
049DEE C8          0163*      ret z ; target cell is not a floor so we can't move there
049DEF             0164*  ; we are cleared for movement so fall through to sprite_move
049DEF             0165*  
049DEF             0166*  ; moves the sprite to the given map position
049DEF             0167*  ; inputs: iy pointed at sprite record, sprite_new_x/y populated
049DEF             0168*  sprite_move:
049DEF             0169*  ; update old sprite position to no sprite
049DEF FD 17 04    0170*      ld de,(iy+sprite_x) ; d,e = sprite current y,x position
049DF2 CD C7 63 04 0171*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
049DF6             0172*  ; set map cell to no sprite and normal floor
049DF6 21 01 FF 1D 0173*      ld hl,0x1DFF01 ; normal floor TODO: we should set these values dyanmically based on the defs in tiles.txt at some point
049DFA DD 2F 00    0174*      ld (ix),hl
049DFD 3E FF       0175*      ld a,0xFF ; no sprite
049DFF DD 77 03    0176*      ld (ix+map_sprite_id),a
049E02             0177*  ; update sprite record with new position
049E02 ED 5B D7 9D 0178*      ld de,(sprite_new_x) ; d,e = sprite new y,x position
       04          
049E07 FD 1F 04    0179*      ld (iy+sprite_x),de
049E0A             0180*  ; update new map cell with sprite id
049E0A CD C7 63 04 0181*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
049E0E FD 7E 00    0182*      ld a,(iy+sprite_id)
049E11 DD 77 03    0183*      ld (ix+map_sprite_id),a
049E14 C9          0184*      ret
049E15             0185*  
049E15             0186*  ; move a sprite in a random direction
049E15             0187*  ; inputs: iy pointed at sprite record
049E15             0188*  sprite_move_random:
049E15             0189*  ; point iy at sprite record
049E15 FD 2A 3E 9D 0190*      ld iy,(sprite_table_pointer)
       04          
049E1A             0191*  ; DEBUG:
049E1A             0192*      ; ld bc,(iy+sprite_x)
049E1A             0193*      ; push bc
049E1A             0194*  ; pick a random direction
049E1A CD 22 B5 04 0195*      call rand_8
049E1E E6 03       0196*      and 3 ; direction between 0 and 3
049E20             0197*  ; get dy,dx for moving once cell in the chosen direction
049E20 5F          0198*      ld e,a
049E21 16 01       0199*      ld d,1 ; distance
049E23 CD EC 63 04 0200*      call get_dx_dy ; d,e = dy,dx
049E27             0201*  ; calculate new position
049E27 FD 7E 04    0202*      ld a,(iy+sprite_x)
049E2A 83          0203*      add a,e
049E2B E6 0F       0204*      and 15 ; modulo 16
049E2D 5F          0205*      ld e,a
049E2E FD 7E 05    0206*      ld a,(iy+sprite_y)
049E31 82          0207*      add a,d
049E32 E6 0F       0208*      and 15 ; modulo 16
049E34 57          0209*      ld d,a
049E35             0210*  
049E35             0211*      ; pop bc
049E35             0212*      ; call stepRegistersHex
049E35 C3 DA 9D 04 0213*      jp sprite_check_move
049E39             0214*  
049E39             0215*  ; #### SPRITE BEHAVIOR SUBROUTINES ####
049E39             0216*  sprite_behavior_lookup:
049E39 9C 9E 04    0217*      dl LAMP
049E3C E4 9E 04    0218*      dl BARREL
049E3F 43 9F 04    0219*      dl TABLE
049E42 8B 9F 04    0220*      dl OVERHEAD_LIGHT
049E45 D3 9F 04    0221*      dl RADIOACTIVE_BARREL
049E48 32 A0 04    0222*      dl HEALTH_PACK
049E4B 7F A0 04    0223*      dl GOLD_CHALISE
049E4E D4 A0 04    0224*      dl GOLD_CROSS
049E51 29 A1 04    0225*      dl PLATE_OF_FOOD
049E54 76 A1 04    0226*      dl KEYCARD
049E57 BE A1 04    0227*      dl GOLD_CHEST
049E5A 13 A2 04    0228*      dl MACHINE_GUN
049E5D 5B A2 04    0229*      dl GATLING_GUN
049E60 A3 A2 04    0230*      dl DOG_FOOD
049E63 F0 A2 04    0231*      dl GOLD_KEY
049E66 38 A3 04    0232*      dl DOG
049E69 C7 A3 04    0233*      dl GERMAN_TROOPER
049E6C 6F A4 04    0234*      dl SS_GUARD
049E6F             0235*  
049E6F             0236*  ; initializes sprite data for a particular sprite type and id
049E6F             0237*  ; inputs: iy pointed at sprite record, sprite_obj set for same
049E6F             0238*  sprite_init_data:
049E6F 3E 00       0239*      ld a,sp_init ; index for sprite init routine
049E71 CD 7F 9E 04 0240*      call do_sprite_behavior ; hl points at address to copy from
049E75 ED 13 02    0241*      lea de,iy+sprite_health ; de points at the address for LDIR to copy to
049E78 01 0E 00 00 0242*      ld bc,sprite_record_size-2 ; copy all but the first two bytes
049E7C ED B0       0243*      ldir ; hl came back with the copy from address, so we're ready to copy the data
049E7E C9          0244*      ret ; done
049E7F             0245*  
049E7F             0246*  ; #### SPRITE BEHAVIOR ROUTINES ####
049E7F             0247*  ; sprite behavior indices
049E7F             0248*  sp_init:   equ 0
049E7F             0249*  sp_use:    equ 1
049E7F             0250*  sp_hurt:  equ 2
049E7F             0251*  sp_kill:   equ 3
049E7F             0252*  sp_see:    equ 4
049E7F             0253*  sp_move:  equ 5
049E7F             0254*  sp_shoot:  equ 6
049E7F             0255*  
049E7F             0256*  ; calls the sprite behavior routine for the sprite pointed to by iy
049E7F             0257*  ; inputs: iy pointed at sprite record, sprite_obj set for same
049E7F             0258*  ;         a = type index of routine to call
049E7F             0259*  do_sprite_behavior:
049E7F FD 22 3E 9D 0260*      ld (sprite_table_pointer),iy ; save pointer to sprite record
       04          
049E84 FD 46 01    0261*      ld b,(iy+sprite_obj)
049E87 0E 03       0262*      ld c,3 ; three bytes per lookup record
049E89 ED 4C       0263*      mlt bc ; bc is offset from the base of the lookup table
049E8B 21 39 9E 04 0264*      ld hl,sprite_behavior_lookup
049E8F 09          0265*      add hl,bc
049E90 ED 27       0266*      ld hl,(hl) ; hl points to the base address of the sprite behavior routines
049E92 47          0267*      ld b,a ; b holds the routine index
049E93 0E 03       0268*      ld c,3 ; three bytes per lookup record
049E95 ED 4C       0269*      mlt bc ; bc is offset from the base of the lookup table
049E97 09          0270*      add hl,bc ; hl points to the label of the routine to call
049E98 ED 27       0271*      ld hl,(hl) ; hl points to the routine to call
049E9A E9          0272*      jp (hl) ; call the behavior routine
049E9B             0273*  sprite_behavior_return: ; we always return here from a sprite behavior call
049E9B C9          0274*      ret
049E9C             0275*  
049E9C             0276*  LAMP:
049E9C             0277*  ; behavior routine address lookup
049E9C B1 9E 04    0278*      dl @init
049E9F C7 9E 04    0279*      dl @use
049EA2 CB 9E 04    0280*      dl @hurt
049EA5 D0 9E 04    0281*      dl @kill
049EA8 D8 9E 04    0282*      dl @see
049EAB DC 9E 04    0283*      dl @move
049EAE E0 9E 04    0284*      dl @shoot
049EB1             0285*  @init:
049EB1 21 B9 9E 04 0286*      ld hl,@data ; address for LDIR to copy from
049EB5 C3 9B 9E 04 0287*      jp sprite_behavior_return
049EB9             0288*  @data:
049EB9 64          0289*      db 100 ;sprite_health
049EBA 00          0290*      db 000 ;sprite_triggers_mask
049EBB 00          0291*      db 000 ;sprite_x
049EBC 00          0292*      db 000 ;sprite_y
049EBD 00          0293*      db 000 ;sprite_orientation
049EBE 00          0294*      db 000 ;sprite_animation
049EBF 00          0295*      db 000 ;sprite_animation_timer
049EC0 01          0296*      db 001 ;sprite_move_timer
049EC1 00          0297*      db 000 ;sprite_move_step
049EC2 00          0298*      db 000 ;sprite_points
049EC3 00          0299*      db 000 ;sprite_health_modifier
049EC4 00          0300*      db 000 ;sprite_unassigned_0
049EC5 00          0301*      db 000 ;sprite_unassigned_1
049EC6 00          0302*      db 000 ;sprite_unassigned_2
049EC7             0303*  @use:
049EC7 C3 9B 9E 04 0304*      jp sprite_behavior_return
049ECB             0305*  @hurt:
049ECB AF          0306*      xor a
049ECC C3 9B 9E 04 0307*      jp sprite_behavior_return
049ED0             0308*  @kill:
049ED0 CD C3 9D 04 0309*      call sprite_kill
049ED4 C3 9B 9E 04 0310*      jp sprite_behavior_return
049ED8             0311*  @see:
049ED8 C3 9B 9E 04 0312*      jp sprite_behavior_return
049EDC             0313*  @move:
049EDC C3 9B 9E 04 0314*      jp sprite_behavior_return
049EE0             0315*  @shoot:
049EE0 C3 9B 9E 04 0316*      jp sprite_behavior_return
049EE4             0317*  
049EE4             0318*  BARREL:
049EE4             0319*  ; behavior routine address lookup
049EE4 F9 9E 04    0320*      dl @init
049EE7 0F 9F 04    0321*      dl @use
049EEA 13 9F 04    0322*      dl @hurt
049EED 27 9F 04    0323*      dl @kill
049EF0 37 9F 04    0324*      dl @see
049EF3 3B 9F 04    0325*      dl @move
049EF6 3F 9F 04    0326*      dl @shoot
049EF9             0327*  @init:
049EF9 21 01 9F 04 0328*      ld hl,@data ; address for LDIR to copy from
049EFD C3 9B 9E 04 0329*      jp sprite_behavior_return
049F01             0330*  @data:
049F01 12          0331*      db 018 ;sprite_health
049F02 00          0332*      db 000 ;sprite_triggers_mask
049F03 00          0333*      db 000 ;sprite_x
049F04 00          0334*      db 000 ;sprite_y
049F05 00          0335*      db 000 ;sprite_orientation
049F06 00          0336*      db 000 ;sprite_animation
049F07 00          0337*      db 000 ;sprite_animation_timer
049F08 01          0338*      db 001 ;sprite_move_timer
049F09 00          0339*      db 000 ;sprite_move_step
049F0A 00          0340*      db 000 ;sprite_points
049F0B CE          0341*      db -50 ;sprite_health_modifier
049F0C 00          0342*      db 000 ;sprite_unassigned_0
049F0D 00          0343*      db 000 ;sprite_unassigned_1
049F0E 00          0344*      db 000 ;sprite_unassigned_2
049F0F             0345*  @use:
049F0F C3 9B 9E 04 0346*      jp sprite_behavior_return
049F13             0347*  @hurt:
049F13 3E FF       0348*      ld a,255 ; kill player's shot
049F15 32 8A B0 04 0349*      ld (player_shot_status),a
049F19 3A 8E B0 04 0350*      ld a,(player_shot_damage) ; damage done by player's shot set by player_shoot
049F1D FD 86 02    0351*      add a,(iy+sprite_health)
049F20 FD 77 02    0352*      ld (iy+sprite_health),a
049F23 F2 9B 9E 04 0353*      jp p,sprite_behavior_return ; if health is positive, return
049F27             0354*      ; otherwise fall through to kill sprite
049F27             0355*  @kill:
049F27 FD E5       0356*      push iy
049F29 CD 41 B7 04 0357*      call sfx_play_explode
049F2D FD E1       0358*      pop iy
049F2F CD C3 9D 04 0359*      call sprite_kill
049F33 C3 9B 9E 04 0360*      jp sprite_behavior_return
049F37             0361*  @see:
049F37 C3 9B 9E 04 0362*      jp sprite_behavior_return
049F3B             0363*  @move:
049F3B C3 9B 9E 04 0364*      jp sprite_behavior_return
049F3F             0365*  @shoot:
049F3F C3 9B 9E 04 0366*      jp sprite_behavior_return
049F43             0367*  
049F43             0368*  TABLE:
049F43             0369*  ; behavior routine address lookup
049F43 58 9F 04    0370*      dl @init
049F46 6E 9F 04    0371*      dl @use
049F49 72 9F 04    0372*      dl @hurt
049F4C 77 9F 04    0373*      dl @kill
049F4F 7F 9F 04    0374*      dl @see
049F52 83 9F 04    0375*      dl @move
049F55 87 9F 04    0376*      dl @shoot
049F58             0377*  @init:
049F58 21 60 9F 04 0378*      ld hl,@data ; address for LDIR to copy from
049F5C C3 9B 9E 04 0379*      jp sprite_behavior_return
049F60             0380*  @data:
049F60 64          0381*      db 100 ;sprite_health
049F61 00          0382*      db 000 ;sprite_triggers_mask
049F62 00          0383*      db 000 ;sprite_x
049F63 00          0384*      db 000 ;sprite_y
049F64 00          0385*      db 000 ;sprite_orientation
049F65 00          0386*      db 000 ;sprite_animation
049F66 00          0387*      db 000 ;sprite_animation_timer
049F67 01          0388*      db 001 ;sprite_move_timer
049F68 00          0389*      db 000 ;sprite_move_step
049F69 00          0390*      db 000 ;sprite_points
049F6A 00          0391*      db 000 ;sprite_health_modifier
049F6B 00          0392*      db 000 ;sprite_unassigned_0
049F6C 00          0393*      db 000 ;sprite_unassigned_1
049F6D 00          0394*      db 000 ;sprite_unassigned_2
049F6E             0395*  @use:
049F6E C3 9B 9E 04 0396*      jp sprite_behavior_return
049F72             0397*  @hurt:
049F72 AF          0398*      xor a
049F73 C3 9B 9E 04 0399*      jp sprite_behavior_return
049F77             0400*  @kill:
049F77 CD C3 9D 04 0401*      call sprite_kill
049F7B C3 9B 9E 04 0402*      jp sprite_behavior_return
049F7F             0403*  @see:
049F7F C3 9B 9E 04 0404*      jp sprite_behavior_return
049F83             0405*  @move:
049F83 C3 9B 9E 04 0406*      jp sprite_behavior_return
049F87             0407*  @shoot:
049F87 C3 9B 9E 04 0408*      jp sprite_behavior_return
049F8B             0409*  
049F8B             0410*  OVERHEAD_LIGHT:
049F8B             0411*  ; behavior routine address lookup
049F8B A0 9F 04    0412*      dl @init
049F8E B6 9F 04    0413*      dl @use
049F91 BA 9F 04    0414*      dl @hurt
049F94 BF 9F 04    0415*      dl @kill
049F97 C7 9F 04    0416*      dl @see
049F9A CB 9F 04    0417*      dl @move
049F9D CF 9F 04    0418*      dl @shoot
049FA0             0419*  @init:
049FA0 21 A8 9F 04 0420*      ld hl,@data ; address for LDIR to copy from
049FA4 C3 9B 9E 04 0421*      jp sprite_behavior_return
049FA8             0422*  @data:
049FA8 64          0423*      db 100 ;sprite_health
049FA9 00          0424*      db 000 ;sprite_triggers_mask
049FAA 00          0425*      db 000 ;sprite_x
049FAB 00          0426*      db 000 ;sprite_y
049FAC 00          0427*      db 000 ;sprite_orientation
049FAD 00          0428*      db 000 ;sprite_animation
049FAE 00          0429*      db 000 ;sprite_animation_timer
049FAF 01          0430*      db 001 ;sprite_move_timer
049FB0 00          0431*      db 000 ;sprite_move_step
049FB1 00          0432*      db 000 ;sprite_points
049FB2 00          0433*      db 000 ;sprite_health_modifier
049FB3 00          0434*      db 000 ;sprite_unassigned_0
049FB4 00          0435*      db 000 ;sprite_unassigned_1
049FB5 00          0436*      db 000 ;sprite_unassigned_2
049FB6             0437*  @use:
049FB6 C3 9B 9E 04 0438*      jp sprite_behavior_return
049FBA             0439*  @hurt:
049FBA AF          0440*      xor a
049FBB C3 9B 9E 04 0441*      jp sprite_behavior_return
049FBF             0442*  @kill:
049FBF CD C3 9D 04 0443*      call sprite_kill
049FC3 C3 9B 9E 04 0444*      jp sprite_behavior_return
049FC7             0445*  @see:
049FC7 C3 9B 9E 04 0446*      jp sprite_behavior_return
049FCB             0447*  @move:
049FCB C3 9B 9E 04 0448*      jp sprite_behavior_return
049FCF             0449*  @shoot:
049FCF C3 9B 9E 04 0450*      jp sprite_behavior_return
049FD3             0451*  
049FD3             0452*  RADIOACTIVE_BARREL:
049FD3             0453*  ; behavior routine address lookup
049FD3 E8 9F 04    0454*      dl @init
049FD6 FE 9F 04    0455*      dl @use
049FD9 02 A0 04    0456*      dl @hurt
049FDC 16 A0 04    0457*      dl @kill
049FDF 26 A0 04    0458*      dl @see
049FE2 2A A0 04    0459*      dl @move
049FE5 2E A0 04    0460*      dl @shoot
049FE8             0461*  @init:
049FE8 21 F0 9F 04 0462*      ld hl,@data ; address for LDIR to copy from
049FEC C3 9B 9E 04 0463*      jp sprite_behavior_return
049FF0             0464*  @data:
049FF0 18          0465*      db 024 ;sprite_health
049FF1 00          0466*      db 000 ;sprite_triggers_mask
049FF2 00          0467*      db 000 ;sprite_x
049FF3 00          0468*      db 000 ;sprite_y
049FF4 00          0469*      db 000 ;sprite_orientation
049FF5 00          0470*      db 000 ;sprite_animation
049FF6 00          0471*      db 000 ;sprite_animation_timer
049FF7 01          0472*      db 001 ;sprite_move_timer
049FF8 00          0473*      db 000 ;sprite_move_step
049FF9 00          0474*      db 000 ;sprite_points
049FFA B5          0475*      db -75 ;sprite_health_modifier
049FFB 00          0476*      db 000 ;sprite_unassigned_0
049FFC 00          0477*      db 000 ;sprite_unassigned_1
049FFD 00          0478*      db 000 ;sprite_unassigned_2
049FFE             0479*  @use:
049FFE C3 9B 9E 04 0480*      jp sprite_behavior_return
04A002             0481*  @hurt:
04A002 3E FF       0482*      ld a,255 ; kill player's shot
04A004 32 8A B0 04 0483*      ld (player_shot_status),a
04A008 3A 8E B0 04 0484*      ld a,(player_shot_damage) ; damage done by player's shot set by player_shoot
04A00C FD 86 02    0485*      add a,(iy+sprite_health)
04A00F FD 77 02    0486*      ld (iy+sprite_health),a
04A012 F2 9B 9E 04 0487*      jp p,sprite_behavior_return ; if health is positive, return
04A016             0488*      ; otherwise fall through to kill sprite
04A016             0489*  @kill:
04A016 FD E5       0490*      push iy
04A018 CD 41 B7 04 0491*      call sfx_play_explode
04A01C FD E1       0492*      pop iy
04A01E CD C3 9D 04 0493*      call sprite_kill
04A022 C3 9B 9E 04 0494*      jp sprite_behavior_return
04A026             0495*  @see:
04A026 C3 9B 9E 04 0496*      jp sprite_behavior_return
04A02A             0497*  @move:
04A02A C3 9B 9E 04 0498*      jp sprite_behavior_return
04A02E             0499*  @shoot:
04A02E C3 9B 9E 04 0500*      jp sprite_behavior_return
04A032             0501*  
04A032             0502*  HEALTH_PACK:
04A032             0503*  ; behavior routine address lookup
04A032 47 A0 04    0504*      dl @init
04A035 5D A0 04    0505*      dl @use
04A038 66 A0 04    0506*      dl @hurt
04A03B 6B A0 04    0507*      dl @kill
04A03E 73 A0 04    0508*      dl @see
04A041 77 A0 04    0509*      dl @move
04A044 7B A0 04    0510*      dl @shoot
04A047             0511*  @init:
04A047 21 4F A0 04 0512*      ld hl,@data ; address for LDIR to copy from
04A04B C3 9B 9E 04 0513*      jp sprite_behavior_return
04A04F             0514*  @data:
04A04F 64          0515*      db 100 ;sprite_health
04A050 00          0516*      db 000 ;sprite_triggers_mask
04A051 00          0517*      db 000 ;sprite_x
04A052 00          0518*      db 000 ;sprite_y
04A053 00          0519*      db 000 ;sprite_orientation
04A054 00          0520*      db 000 ;sprite_animation
04A055 00          0521*      db 000 ;sprite_animation_timer
04A056 01          0522*      db 001 ;sprite_move_timer
04A057 00          0523*      db 000 ;sprite_move_step
04A058 00          0524*      db 000 ;sprite_points
04A059 14          0525*      db 020 ;sprite_health_modifier
04A05A 00          0526*      db 000 ;sprite_unassigned_0
04A05B 00          0527*      db 000 ;sprite_unassigned_1
04A05C 00          0528*      db 000 ;sprite_unassigned_2
04A05D             0529*  @use:
04A05D FD 7E 0C    0530*      ld a,(iy+sprite_health_modifier)
04A060 CD 35 B2 04 0531*      call player_mod_health
04A064 18 05       0532*      jr @kill
04A066             0533*  @hurt:
04A066 AF          0534*      xor a
04A067 C3 9B 9E 04 0535*      jp sprite_behavior_return
04A06B             0536*  @kill:
04A06B CD C3 9D 04 0537*      call sprite_kill
04A06F C3 9B 9E 04 0538*      jp sprite_behavior_return
04A073             0539*  @see:
04A073 C3 9B 9E 04 0540*      jp sprite_behavior_return
04A077             0541*  @move:
04A077 C3 9B 9E 04 0542*      jp sprite_behavior_return
04A07B             0543*  @shoot:
04A07B C3 9B 9E 04 0544*      jp sprite_behavior_return
04A07F             0545*  
04A07F             0546*  GOLD_CHALISE:
04A07F             0547*  ; behavior routine address lookup
04A07F 94 A0 04    0548*      dl @init
04A082 AA A0 04    0549*      dl @use
04A085 BB A0 04    0550*      dl @hurt
04A088 C0 A0 04    0551*      dl @kill
04A08B C8 A0 04    0552*      dl @see
04A08E CC A0 04    0553*      dl @move
04A091 D0 A0 04    0554*      dl @shoot
04A094             0555*  @init:
04A094 21 9C A0 04 0556*      ld hl,@data ; address for LDIR to copy from
04A098 C3 9B 9E 04 0557*      jp sprite_behavior_return
04A09C             0558*  @data:
04A09C 64          0559*      db 100 ;sprite_health
04A09D 00          0560*      db 000 ;sprite_triggers_mask
04A09E 00          0561*      db 000 ;sprite_x
04A09F 00          0562*      db 000 ;sprite_y
04A0A0 00          0563*      db 000 ;sprite_orientation
04A0A1 00          0564*      db 000 ;sprite_animation
04A0A2 00          0565*      db 000 ;sprite_animation_timer
04A0A3 01          0566*      db 001 ;sprite_move_timer
04A0A4 00          0567*      db 000 ;sprite_move_step
04A0A5 64          0568*      db 100 ;sprite_points
04A0A6 00          0569*      db 000 ;sprite_health_modifier
04A0A7 00          0570*      db 000 ;sprite_unassigned_0
04A0A8 00          0571*      db 000 ;sprite_unassigned_1
04A0A9 00          0572*      db 000 ;sprite_unassigned_2
04A0AA             0573*  @use:
04A0AA FD E5       0574*      push iy
04A0AC CD E1 B6 04 0575*      call sfx_play_got_treasure
04A0B0 FD E1       0576*      pop iy
04A0B2 FD 7E 0B    0577*      ld a,(iy+sprite_points)
04A0B5 CD 3C B2 04 0578*      call player_mod_score
04A0B9 18 05       0579*      jr @kill
04A0BB             0580*  @hurt:
04A0BB AF          0581*      xor a
04A0BC C3 9B 9E 04 0582*      jp sprite_behavior_return
04A0C0             0583*  @kill:
04A0C0 CD C3 9D 04 0584*      call sprite_kill
04A0C4 C3 9B 9E 04 0585*      jp sprite_behavior_return
04A0C8             0586*  @see:
04A0C8 C3 9B 9E 04 0587*      jp sprite_behavior_return
04A0CC             0588*  @move:
04A0CC C3 9B 9E 04 0589*      jp sprite_behavior_return
04A0D0             0590*  @shoot:
04A0D0 C3 9B 9E 04 0591*      jp sprite_behavior_return
04A0D4             0592*  
04A0D4             0593*  GOLD_CROSS:
04A0D4             0594*  ; behavior routine address lookup
04A0D4 E9 A0 04    0595*      dl @init
04A0D7 FF A0 04    0596*      dl @use
04A0DA 10 A1 04    0597*      dl @hurt
04A0DD 15 A1 04    0598*      dl @kill
04A0E0 1D A1 04    0599*      dl @see
04A0E3 21 A1 04    0600*      dl @move
04A0E6 25 A1 04    0601*      dl @shoot
04A0E9             0602*  @init:
04A0E9 21 F1 A0 04 0603*      ld hl,@data ; address for LDIR to copy from
04A0ED C3 9B 9E 04 0604*      jp sprite_behavior_return
04A0F1             0605*  @data:
04A0F1 64          0606*      db 100 ;sprite_health
04A0F2 00          0607*      db 000 ;sprite_triggers_mask
04A0F3 00          0608*      db 000 ;sprite_x
04A0F4 00          0609*      db 000 ;sprite_y
04A0F5 00          0610*      db 000 ;sprite_orientation
04A0F6 00          0611*      db 000 ;sprite_animation
04A0F7 00          0612*      db 000 ;sprite_animation_timer
04A0F8 01          0613*      db 001 ;sprite_move_timer
04A0F9 00          0614*      db 000 ;sprite_move_step
04A0FA 32          0615*      db 050 ;sprite_points
04A0FB 00          0616*      db 000 ;sprite_health_modifier
04A0FC 00          0617*      db 000 ;sprite_unassigned_0
04A0FD 00          0618*      db 000 ;sprite_unassigned_1
04A0FE 00          0619*      db 000 ;sprite_unassigned_2
04A0FF             0620*  @use:
04A0FF FD E5       0621*      push iy
04A101 CD E1 B6 04 0622*      call sfx_play_got_treasure
04A105 FD E1       0623*      pop iy
04A107 FD 7E 0B    0624*      ld a,(iy+sprite_points)
04A10A CD 3C B2 04 0625*      call player_mod_score
04A10E 18 05       0626*      jr @kill
04A110             0627*  @hurt:
04A110 AF          0628*      xor a
04A111 C3 9B 9E 04 0629*      jp sprite_behavior_return
04A115             0630*  @kill:
04A115 CD C3 9D 04 0631*      call sprite_kill
04A119 C3 9B 9E 04 0632*      jp sprite_behavior_return
04A11D             0633*  @see:
04A11D C3 9B 9E 04 0634*      jp sprite_behavior_return
04A121             0635*  @move:
04A121 C3 9B 9E 04 0636*      jp sprite_behavior_return
04A125             0637*  @shoot:
04A125 C3 9B 9E 04 0638*      jp sprite_behavior_return
04A129             0639*  
04A129             0640*  PLATE_OF_FOOD:
04A129             0641*  ; behavior routine address lookup
04A129 3E A1 04    0642*      dl @init
04A12C 54 A1 04    0643*      dl @use
04A12F 5D A1 04    0644*      dl @hurt
04A132 62 A1 04    0645*      dl @kill
04A135 6A A1 04    0646*      dl @see
04A138 6E A1 04    0647*      dl @move
04A13B 72 A1 04    0648*      dl @shoot
04A13E             0649*  @init:
04A13E 21 46 A1 04 0650*      ld hl,@data ; address for LDIR to copy from
04A142 C3 9B 9E 04 0651*      jp sprite_behavior_return
04A146             0652*  @data:
04A146 64          0653*      db 100 ;sprite_health
04A147 00          0654*      db 000 ;sprite_triggers_mask
04A148 00          0655*      db 000 ;sprite_x
04A149 00          0656*      db 000 ;sprite_y
04A14A 00          0657*      db 000 ;sprite_orientation
04A14B 00          0658*      db 000 ;sprite_animation
04A14C 00          0659*      db 000 ;sprite_animation_timer
04A14D 01          0660*      db 001 ;sprite_move_timer
04A14E 00          0661*      db 000 ;sprite_move_step
04A14F 00          0662*      db 000 ;sprite_points
04A150 0A          0663*      db 010 ;sprite_health_modifier
04A151 00          0664*      db 000 ;sprite_unassigned_0
04A152 00          0665*      db 000 ;sprite_unassigned_1
04A153 00          0666*      db 000 ;sprite_unassigned_2
04A154             0667*  @use:
04A154 FD 7E 0C    0668*      ld a,(iy+sprite_health_modifier)
04A157 CD 35 B2 04 0669*      call player_mod_health
04A15B 18 05       0670*      jr @kill
04A15D             0671*  @hurt:
04A15D AF          0672*      xor a
04A15E C3 9B 9E 04 0673*      jp sprite_behavior_return
04A162             0674*  @kill:
04A162 CD C3 9D 04 0675*      call sprite_kill
04A166 C3 9B 9E 04 0676*      jp sprite_behavior_return
04A16A             0677*  @see:
04A16A C3 9B 9E 04 0678*      jp sprite_behavior_return
04A16E             0679*  @move:
04A16E C3 9B 9E 04 0680*      jp sprite_behavior_return
04A172             0681*  @shoot:
04A172 C3 9B 9E 04 0682*      jp sprite_behavior_return
04A176             0683*  
04A176             0684*  KEYCARD:
04A176             0685*  ; behavior routine address lookup
04A176 8B A1 04    0686*      dl @init
04A179 A1 A1 04    0687*      dl @use
04A17C A5 A1 04    0688*      dl @hurt
04A17F AA A1 04    0689*      dl @kill
04A182 B2 A1 04    0690*      dl @see
04A185 B6 A1 04    0691*      dl @move
04A188 BA A1 04    0692*      dl @shoot
04A18B             0693*  @init:
04A18B 21 93 A1 04 0694*      ld hl,@data ; address for LDIR to copy from
04A18F C3 9B 9E 04 0695*      jp sprite_behavior_return
04A193             0696*  @data:
04A193 64          0697*      db 100 ;sprite_health
04A194 00          0698*      db 000 ;sprite_triggers_mask
04A195 00          0699*      db 000 ;sprite_x
04A196 00          0700*      db 000 ;sprite_y
04A197 00          0701*      db 000 ;sprite_orientation
04A198 00          0702*      db 000 ;sprite_animation
04A199 00          0703*      db 000 ;sprite_animation_timer
04A19A 01          0704*      db 001 ;sprite_move_timer
04A19B 00          0705*      db 000 ;sprite_move_step
04A19C 00          0706*      db 000 ;sprite_points
04A19D 00          0707*      db 000 ;sprite_health_modifier
04A19E 00          0708*      db 000 ;sprite_unassigned_0
04A19F 00          0709*      db 000 ;sprite_unassigned_1
04A1A0 00          0710*      db 000 ;sprite_unassigned_2
04A1A1             0711*  @use:
04A1A1 C3 9B 9E 04 0712*      jp sprite_behavior_return
04A1A5             0713*  @hurt:
04A1A5 AF          0714*      xor a
04A1A6 C3 9B 9E 04 0715*      jp sprite_behavior_return
04A1AA             0716*  @kill:
04A1AA CD C3 9D 04 0717*      call sprite_kill
04A1AE C3 9B 9E 04 0718*      jp sprite_behavior_return
04A1B2             0719*  @see:
04A1B2 C3 9B 9E 04 0720*      jp sprite_behavior_return
04A1B6             0721*  @move:
04A1B6 C3 9B 9E 04 0722*      jp sprite_behavior_return
04A1BA             0723*  @shoot:
04A1BA C3 9B 9E 04 0724*      jp sprite_behavior_return
04A1BE             0725*  
04A1BE             0726*  GOLD_CHEST:
04A1BE             0727*  ; behavior routine address lookup
04A1BE D3 A1 04    0728*      dl @init
04A1C1 E9 A1 04    0729*      dl @use
04A1C4 FA A1 04    0730*      dl @hurt
04A1C7 FF A1 04    0731*      dl @kill
04A1CA 07 A2 04    0732*      dl @see
04A1CD 0B A2 04    0733*      dl @move
04A1D0 0F A2 04    0734*      dl @shoot
04A1D3             0735*  @init:
04A1D3 21 DB A1 04 0736*      ld hl,@data ; address for LDIR to copy from
04A1D7 C3 9B 9E 04 0737*      jp sprite_behavior_return
04A1DB             0738*  @data:
04A1DB 64          0739*      db 100 ;sprite_health
04A1DC 00          0740*      db 000 ;sprite_triggers_mask
04A1DD 00          0741*      db 000 ;sprite_x
04A1DE 00          0742*      db 000 ;sprite_y
04A1DF 00          0743*      db 000 ;sprite_orientation
04A1E0 00          0744*      db 000 ;sprite_animation
04A1E1 00          0745*      db 000 ;sprite_animation_timer
04A1E2 01          0746*      db 001 ;sprite_move_timer
04A1E3 00          0747*      db 000 ;sprite_move_step
04A1E4 FA          0748*      db 250 ;sprite_points
04A1E5 00          0749*      db 000 ;sprite_health_modifier
04A1E6 00          0750*      db 000 ;sprite_unassigned_0
04A1E7 00          0751*      db 000 ;sprite_unassigned_1
04A1E8 00          0752*      db 000 ;sprite_unassigned_2
04A1E9             0753*  @use:
04A1E9 FD E5       0754*      push iy
04A1EB CD E1 B6 04 0755*      call sfx_play_got_treasure
04A1EF FD E1       0756*      pop iy
04A1F1 FD 7E 0B    0757*      ld a,(iy+sprite_points)
04A1F4 CD 3C B2 04 0758*      call player_mod_score
04A1F8 18 05       0759*      jr @kill
04A1FA             0760*  @hurt:
04A1FA AF          0761*      xor a
04A1FB C3 9B 9E 04 0762*      jp sprite_behavior_return
04A1FF             0763*  @kill:
04A1FF CD C3 9D 04 0764*      call sprite_kill
04A203 C3 9B 9E 04 0765*      jp sprite_behavior_return
04A207             0766*  @see:
04A207 C3 9B 9E 04 0767*      jp sprite_behavior_return
04A20B             0768*  @move:
04A20B C3 9B 9E 04 0769*      jp sprite_behavior_return
04A20F             0770*  @shoot:
04A20F C3 9B 9E 04 0771*      jp sprite_behavior_return
04A213             0772*  
04A213             0773*  MACHINE_GUN:
04A213             0774*  ; behavior routine address lookup
04A213 28 A2 04    0775*      dl @init
04A216 3E A2 04    0776*      dl @use
04A219 42 A2 04    0777*      dl @hurt
04A21C 47 A2 04    0778*      dl @kill
04A21F 4F A2 04    0779*      dl @see
04A222 53 A2 04    0780*      dl @move
04A225 57 A2 04    0781*      dl @shoot
04A228             0782*  @init:
04A228 21 30 A2 04 0783*      ld hl,@data ; address for LDIR to copy from
04A22C C3 9B 9E 04 0784*      jp sprite_behavior_return
04A230             0785*  @data:
04A230 64          0786*      db 100 ;sprite_health
04A231 00          0787*      db 000 ;sprite_triggers_mask
04A232 00          0788*      db 000 ;sprite_x
04A233 00          0789*      db 000 ;sprite_y
04A234 00          0790*      db 000 ;sprite_orientation
04A235 00          0791*      db 000 ;sprite_animation
04A236 00          0792*      db 000 ;sprite_animation_timer
04A237 01          0793*      db 001 ;sprite_move_timer
04A238 00          0794*      db 000 ;sprite_move_step
04A239 00          0795*      db 000 ;sprite_points
04A23A 00          0796*      db 000 ;sprite_health_modifier
04A23B 00          0797*      db 000 ;sprite_unassigned_0
04A23C 00          0798*      db 000 ;sprite_unassigned_1
04A23D 00          0799*      db 000 ;sprite_unassigned_2
04A23E             0800*  @use:
04A23E C3 9B 9E 04 0801*      jp sprite_behavior_return
04A242             0802*  @hurt:
04A242 AF          0803*      xor a
04A243 C3 9B 9E 04 0804*      jp sprite_behavior_return
04A247             0805*  @kill:
04A247 CD C3 9D 04 0806*      call sprite_kill
04A24B C3 9B 9E 04 0807*      jp sprite_behavior_return
04A24F             0808*  @see:
04A24F C3 9B 9E 04 0809*      jp sprite_behavior_return
04A253             0810*  @move:
04A253 C3 9B 9E 04 0811*      jp sprite_behavior_return
04A257             0812*  @shoot:
04A257 C3 9B 9E 04 0813*      jp sprite_behavior_return
04A25B             0814*  
04A25B             0815*  GATLING_GUN:
04A25B             0816*  ; behavior routine address lookup
04A25B 70 A2 04    0817*      dl @init
04A25E 86 A2 04    0818*      dl @use
04A261 8A A2 04    0819*      dl @hurt
04A264 8F A2 04    0820*      dl @kill
04A267 97 A2 04    0821*      dl @see
04A26A 9B A2 04    0822*      dl @move
04A26D 9F A2 04    0823*      dl @shoot
04A270             0824*  @init:
04A270 21 78 A2 04 0825*      ld hl,@data ; address for LDIR to copy from
04A274 C3 9B 9E 04 0826*      jp sprite_behavior_return
04A278             0827*  @data:
04A278 64          0828*      db 100 ;sprite_health
04A279 00          0829*      db 000 ;sprite_triggers_mask
04A27A 00          0830*      db 000 ;sprite_x
04A27B 00          0831*      db 000 ;sprite_y
04A27C 00          0832*      db 000 ;sprite_orientation
04A27D 00          0833*      db 000 ;sprite_animation
04A27E 00          0834*      db 000 ;sprite_animation_timer
04A27F 01          0835*      db 001 ;sprite_move_timer
04A280 00          0836*      db 000 ;sprite_move_step
04A281 00          0837*      db 000 ;sprite_points
04A282 00          0838*      db 000 ;sprite_health_modifier
04A283 00          0839*      db 000 ;sprite_unassigned_0
04A284 00          0840*      db 000 ;sprite_unassigned_1
04A285 00          0841*      db 000 ;sprite_unassigned_2
04A286             0842*  @use:
04A286 C3 9B 9E 04 0843*      jp sprite_behavior_return
04A28A             0844*  @hurt:
04A28A AF          0845*      xor a
04A28B C3 9B 9E 04 0846*      jp sprite_behavior_return
04A28F             0847*  @kill:
04A28F CD C3 9D 04 0848*      call sprite_kill
04A293 C3 9B 9E 04 0849*      jp sprite_behavior_return
04A297             0850*  @see:
04A297 C3 9B 9E 04 0851*      jp sprite_behavior_return
04A29B             0852*  @move:
04A29B C3 9B 9E 04 0853*      jp sprite_behavior_return
04A29F             0854*  @shoot:
04A29F C3 9B 9E 04 0855*      jp sprite_behavior_return
04A2A3             0856*  
04A2A3             0857*  DOG_FOOD:
04A2A3             0858*  ; behavior routine address lookup
04A2A3 B8 A2 04    0859*      dl @init
04A2A6 CE A2 04    0860*      dl @use
04A2A9 D7 A2 04    0861*      dl @hurt
04A2AC DC A2 04    0862*      dl @kill
04A2AF E4 A2 04    0863*      dl @see
04A2B2 E8 A2 04    0864*      dl @move
04A2B5 EC A2 04    0865*      dl @shoot
04A2B8             0866*  @init:
04A2B8 21 C0 A2 04 0867*      ld hl,@data ; address for LDIR to copy from
04A2BC C3 9B 9E 04 0868*      jp sprite_behavior_return
04A2C0             0869*  @data:
04A2C0 64          0870*      db 100 ;sprite_health
04A2C1 00          0871*      db 000 ;sprite_triggers_mask
04A2C2 00          0872*      db 000 ;sprite_x
04A2C3 00          0873*      db 000 ;sprite_y
04A2C4 00          0874*      db 000 ;sprite_orientation
04A2C5 00          0875*      db 000 ;sprite_animation
04A2C6 00          0876*      db 000 ;sprite_animation_timer
04A2C7 01          0877*      db 001 ;sprite_move_timer
04A2C8 00          0878*      db 000 ;sprite_move_step
04A2C9 00          0879*      db 000 ;sprite_points
04A2CA 05          0880*      db 005 ;sprite_health_modifier
04A2CB 00          0881*      db 000 ;sprite_unassigned_0
04A2CC 00          0882*      db 000 ;sprite_unassigned_1
04A2CD 00          0883*      db 000 ;sprite_unassigned_2
04A2CE             0884*  @use:
04A2CE FD 7E 0C    0885*      ld a,(iy+sprite_health_modifier)
04A2D1 CD 35 B2 04 0886*      call player_mod_health
04A2D5 18 05       0887*      jr @kill
04A2D7             0888*  @hurt:
04A2D7 AF          0889*      xor a
04A2D8 C3 9B 9E 04 0890*      jp sprite_behavior_return
04A2DC             0891*  @kill:
04A2DC CD C3 9D 04 0892*      call sprite_kill
04A2E0 C3 9B 9E 04 0893*      jp sprite_behavior_return
04A2E4             0894*  @see:
04A2E4 C3 9B 9E 04 0895*      jp sprite_behavior_return
04A2E8             0896*  @move:
04A2E8 C3 9B 9E 04 0897*      jp sprite_behavior_return
04A2EC             0898*  @shoot:
04A2EC C3 9B 9E 04 0899*      jp sprite_behavior_return
04A2F0             0900*  
04A2F0             0901*  GOLD_KEY:
04A2F0             0902*  ; behavior routine address lookup
04A2F0 05 A3 04    0903*      dl @init
04A2F3 1B A3 04    0904*      dl @use
04A2F6 1F A3 04    0905*      dl @hurt
04A2F9 24 A3 04    0906*      dl @kill
04A2FC 2C A3 04    0907*      dl @see
04A2FF 30 A3 04    0908*      dl @move
04A302 34 A3 04    0909*      dl @shoot
04A305             0910*  @init:
04A305 21 0D A3 04 0911*      ld hl,@data ; address for LDIR to copy from
04A309 C3 9B 9E 04 0912*      jp sprite_behavior_return
04A30D             0913*  @data:
04A30D 64          0914*      db 100 ;sprite_health
04A30E 00          0915*      db 000 ;sprite_triggers_mask
04A30F 00          0916*      db 000 ;sprite_x
04A310 00          0917*      db 000 ;sprite_y
04A311 00          0918*      db 000 ;sprite_orientation
04A312 00          0919*      db 000 ;sprite_animation
04A313 00          0920*      db 000 ;sprite_animation_timer
04A314 01          0921*      db 001 ;sprite_move_timer
04A315 00          0922*      db 000 ;sprite_move_step
04A316 00          0923*      db 000 ;sprite_points
04A317 00          0924*      db 000 ;sprite_health_modifier
04A318 00          0925*      db 000 ;sprite_unassigned_0
04A319 00          0926*      db 000 ;sprite_unassigned_1
04A31A 00          0927*      db 000 ;sprite_unassigned_2
04A31B             0928*  @use:
04A31B C3 9B 9E 04 0929*      jp sprite_behavior_return
04A31F             0930*  @hurt:
04A31F AF          0931*      xor a
04A320 C3 9B 9E 04 0932*      jp sprite_behavior_return
04A324             0933*  @kill:
04A324 CD C3 9D 04 0934*      call sprite_kill
04A328 C3 9B 9E 04 0935*      jp sprite_behavior_return
04A32C             0936*  @see:
04A32C C3 9B 9E 04 0937*      jp sprite_behavior_return
04A330             0938*  @move:
04A330 C3 9B 9E 04 0939*      jp sprite_behavior_return
04A334             0940*  @shoot:
04A334 C3 9B 9E 04 0941*      jp sprite_behavior_return
04A338             0942*  
04A338             0943*  DOG:
04A338             0944*  ; behavior routine address lookup
04A338 4D A3 04    0945*      dl @init
04A33B 63 A3 04    0946*      dl @use
04A33E 6F A3 04    0947*      dl @hurt
04A341 93 A3 04    0948*      dl @kill
04A344 A3 A3 04    0949*      dl @see
04A347 A3 A3 04    0950*      dl @move
04A34A C3 A3 04    0951*      dl @shoot
04A34D             0952*  @init:
04A34D 21 55 A3 04 0953*      ld hl,@data ; address for LDIR to copy from
04A351 C3 9B 9E 04 0954*      jp sprite_behavior_return
04A355             0955*  @data:
04A355 32          0956*      db 050 ;sprite_health
04A356 00          0957*      db 000 ;sprite_triggers_mask
04A357 00          0958*      db 000 ;sprite_x
04A358 00          0959*      db 000 ;sprite_y
04A359 00          0960*      db 000 ;sprite_orientation
04A35A 00          0961*      db 000 ;sprite_animation
04A35B 00          0962*      db 000 ;sprite_animation_timer
04A35C 01          0963*      db 001 ;sprite_move_timer
04A35D 00          0964*      db 000 ;sprite_move_step
04A35E 0A          0965*      db 010 ;sprite_points
04A35F F6          0966*      db -10 ;sprite_health_modifier
04A360 00          0967*      db 000 ;sprite_unassigned_0
04A361 00          0968*      db 000 ;sprite_unassigned_1
04A362 00          0969*      db 000 ;sprite_unassigned_2
04A363             0970*  @use:
04A363 FD E5       0971*      push iy
04A365 CD F9 B6 04 0972*      call sfx_play_dog_woof
04A369 FD E1       0973*      pop iy
04A36B C3 9B 9E 04 0974*      jp sprite_behavior_return
04A36F             0975*  @hurt:
04A36F CD 22 B5 04 0976*      call rand_8
04A373 E6 01       0977*      and %00000001
04A375 20 08       0978*      jr nz,@nosound
04A377 FD E5       0979*      push iy
04A379 CD 01 B7 04 0980*      call sfx_play_dog_yelp
04A37D FD E1       0981*      pop iy
04A37F             0982*  @nosound:
04A37F 3E FF       0983*      ld a,255 ; kill player's shot
04A381 32 8A B0 04 0984*      ld (player_shot_status),a
04A385 3A 8E B0 04 0985*      ld a,(player_shot_damage) ; damage done by player's shot set by player_shoot
04A389 FD 86 02    0986*      add a,(iy+sprite_health)
04A38C FD 77 02    0987*      ld (iy+sprite_health),a
04A38F             0988*      ; jp p,sprite_behavior_return ; if health is positive, return
04A38F F2 AC A3 04 0989*      jp p,@do_move
04A393             0990*      ; otherwise fall through to kill sprite
04A393             0991*  @kill:
04A393 FD E5       0992*      push iy
04A395 CD 01 B7 04 0993*      call sfx_play_dog_yelp
04A399 FD E1       0994*      pop iy
04A39B CD C3 9D 04 0995*      call sprite_kill
04A39F C3 9B 9E 04 0996*      jp sprite_behavior_return
04A3A3             0997*  @see:
04A3A3             0998*      ; fall through to @move
04A3A3             0999*  @move:
04A3A3 FD 35 09    1000*      dec (iy+sprite_move_timer)
04A3A6 28 04       1001*      jr z,@do_move
04A3A8 C3 9B 9E 04 1002*      jp sprite_behavior_return
04A3AC             1003*  @do_move:
04A3AC CD 22 B5 04 1004*      call rand_8
04A3B0 E6 3F       1005*      and %00111111 ; between 0 and 63
04A3B2             1006*      ; or %00100000  ; at least 32
04A3B2 F6 10       1007*      or %00010000  ; at least 16
04A3B4 FD 77 09    1008*      ld (iy+sprite_move_timer),a
04A3B7 CD 15 9E 04 1009*      call sprite_move_random
04A3BB CD F9 B6 04 1010*      call sfx_play_dog_woof
04A3BF C3 9B 9E 04 1011*      jp sprite_behavior_return
04A3C3             1012*  @shoot:
04A3C3 C3 9B 9E 04 1013*      jp sprite_behavior_return
04A3C7             1014*  
04A3C7             1015*  GERMAN_TROOPER:
04A3C7             1016*  ; behavior routine address lookup
04A3C7 DC A3 04    1017*      dl @init
04A3CA F2 A3 04    1018*      dl @use
04A3CD FE A3 04    1019*      dl @hurt
04A3D0 22 A4 04    1020*      dl @kill
04A3D3 32 A4 04    1021*      dl @see
04A3D6 4F A4 04    1022*      dl @move
04A3D9 6B A4 04    1023*      dl @shoot
04A3DC             1024*  @init:
04A3DC 21 E4 A3 04 1025*      ld hl,@data ; address for LDIR to copy from
04A3E0 C3 9B 9E 04 1026*      jp sprite_behavior_return
04A3E4             1027*  @data:
04A3E4 4B          1028*      db 075 ;sprite_health
04A3E5 00          1029*      db 000 ;sprite_triggers_mask
04A3E6 00          1030*      db 000 ;sprite_x
04A3E7 00          1031*      db 000 ;sprite_y
04A3E8 00          1032*      db 000 ;sprite_orientation
04A3E9 00          1033*      db 000 ;sprite_animation
04A3EA 00          1034*      db 000 ;sprite_animation_timer
04A3EB 01          1035*      db 001 ;sprite_move_timer
04A3EC 00          1036*      db 000 ;sprite_move_step
04A3ED 14          1037*      db 020 ;sprite_points
04A3EE EC          1038*      db -20 ;sprite_health_modifier
04A3EF 00          1039*      db 000 ;sprite_unassigned_0
04A3F0 00          1040*      db 000 ;sprite_unassigned_1
04A3F1 00          1041*      db 000 ;sprite_unassigned_2
04A3F2             1042*  @use:
04A3F2 FD E5       1043*      push iy
04A3F4 CD E9 B6 04 1044*      call sfx_play_achtung
04A3F8 FD E1       1045*      pop iy
04A3FA C3 9B 9E 04 1046*      jp sprite_behavior_return
04A3FE             1047*  @hurt:
04A3FE CD 22 B5 04 1048*      call rand_8
04A402 E6 01       1049*      and %00000001
04A404 20 08       1050*      jr nz,@nosound
04A406 FD E5       1051*      push iy
04A408 CD 51 B7 04 1052*      call sfx_play_random_hurt
04A40C FD E1       1053*      pop iy
04A40E             1054*  @nosound:
04A40E 3E FF       1055*      ld a,255 ; kill player's shot
04A410 32 8A B0 04 1056*      ld (player_shot_status),a
04A414 3A 8E B0 04 1057*      ld a,(player_shot_damage) ; damage done by player's shot set by player_shoot
04A418 FD 86 02    1058*      add a,(iy+sprite_health)
04A41B FD 77 02    1059*      ld (iy+sprite_health),a
04A41E             1060*      ; jp p,sprite_behavior_return ; if health is positive, return
04A41E F2 58 A4 04 1061*      jp p,@do_move
04A422             1062*      ; otherwise fall through to kill sprite
04A422             1063*  @kill:
04A422 FD E5       1064*      push iy
04A424 CD 11 B7 04 1065*      call sfx_play_wilhelm
04A428 FD E1       1066*      pop iy
04A42A CD C3 9D 04 1067*      call sprite_kill
04A42E C3 9B 9E 04 1068*      jp sprite_behavior_return
04A432             1069*  @see:
04A432 FD 7E 03    1070*      ld a,(iy+sprite_triggers_mask)
04A435 E6 01       1071*      and sprite_trigger_see
04A437 C2 4F A4 04 1072*      jp nz,@move
04A43B 3E 01       1073*      ld a,sprite_trigger_see
04A43D FD B6 03    1074*      or a,(iy+sprite_triggers_mask)
04A440 FD 77 03    1075*      ld (iy+sprite_triggers_mask),a
04A443 FD E5       1076*      push iy
04A445 CD E9 B6 04 1077*      call sfx_play_achtung
04A449 FD E1       1078*      pop iy
04A44B C3 9B 9E 04 1079*      jp sprite_behavior_return
04A44F             1080*  @move:
04A44F FD 35 09    1081*      dec (iy+sprite_move_timer)
04A452 28 04       1082*      jr z,@do_move
04A454 C3 9B 9E 04 1083*      jp sprite_behavior_return
04A458             1084*  @do_move:
04A458 CD 22 B5 04 1085*      call rand_8
04A45C E6 3F       1086*      and %00111111 ; between 0 and 63
04A45E             1087*      ; or %00100000  ; at least 32
04A45E F6 10       1088*      or %00010000  ; at least 16
04A460 FD 77 09    1089*      ld (iy+sprite_move_timer),a
04A463 CD 15 9E 04 1090*      call sprite_move_random
04A467 C3 9B 9E 04 1091*      jp sprite_behavior_return
04A46B             1092*  @shoot:
04A46B C3 9B 9E 04 1093*      jp sprite_behavior_return
04A46F             1094*  
04A46F             1095*  SS_GUARD:
04A46F             1096*  ; behavior routine address lookup
04A46F 84 A4 04    1097*      dl @init
04A472 9A A4 04    1098*      dl @use
04A475 A6 A4 04    1099*      dl @hurt
04A478 CA A4 04    1100*      dl @kill
04A47B DA A4 04    1101*      dl @see
04A47E F7 A4 04    1102*      dl @move
04A481 13 A5 04    1103*      dl @shoot
04A484             1104*  @init:
04A484 21 8C A4 04 1105*      ld hl,@data ; address for LDIR to copy from
04A488 C3 9B 9E 04 1106*      jp sprite_behavior_return
04A48C             1107*  @data:
04A48C 64          1108*      db 100 ;sprite_health
04A48D 00          1109*      db 000 ;sprite_triggers_mask
04A48E 00          1110*      db 000 ;sprite_x
04A48F 00          1111*      db 000 ;sprite_y
04A490 00          1112*      db 000 ;sprite_orientation
04A491 00          1113*      db 000 ;sprite_animation
04A492 00          1114*      db 000 ;sprite_animation_timer
04A493 01          1115*      db 001 ;sprite_move_timer
04A494 00          1116*      db 000 ;sprite_move_step
04A495 1E          1117*      db 030 ;sprite_points
04A496 E2          1118*      db -30 ;sprite_health_modifier
04A497 00          1119*      db 000 ;sprite_unassigned_0
04A498 00          1120*      db 000 ;sprite_unassigned_1
04A499 00          1121*      db 000 ;sprite_unassigned_2
04A49A             1122*  @use:
04A49A FD E5       1123*      push iy
04A49C CD F1 B6 04 1124*      call sfx_play_schusstaffel
04A4A0 FD E1       1125*      pop iy
04A4A2 C3 9B 9E 04 1126*      jp sprite_behavior_return
04A4A6             1127*  @hurt:
04A4A6 CD 22 B5 04 1128*      call rand_8
04A4AA E6 01       1129*      and %00000001
04A4AC 20 08       1130*      jr nz,@nosound
04A4AE FD E5       1131*      push iy
04A4B0 CD 51 B7 04 1132*      call sfx_play_random_hurt
04A4B4 FD E1       1133*      pop iy
04A4B6             1134*  @nosound:
04A4B6 3E FF       1135*      ld a,255 ; kill player's shot
04A4B8 32 8A B0 04 1136*      ld (player_shot_status),a
04A4BC 3A 8E B0 04 1137*      ld a,(player_shot_damage) ; damage done by player's shot set by player_shoot
04A4C0 FD 86 02    1138*      add a,(iy+sprite_health)
04A4C3 FD 77 02    1139*      ld (iy+sprite_health),a
04A4C6             1140*      ; jp p,sprite_behavior_return ; if health is positive, return
04A4C6 F2 00 A5 04 1141*      jp p,@do_move
04A4CA             1142*      ; otherwise fall through to kill sprite
04A4CA             1143*  @kill:
04A4CA FD E5       1144*      push iy
04A4CC CD 09 B7 04 1145*      call sfx_play_mein_leben
04A4D0 FD E1       1146*      pop iy
04A4D2 CD C3 9D 04 1147*      call sprite_kill
04A4D6 C3 9B 9E 04 1148*      jp sprite_behavior_return
04A4DA             1149*  @see:
04A4DA FD 7E 03    1150*      ld a,(iy+sprite_triggers_mask)
04A4DD E6 01       1151*      and sprite_trigger_see
04A4DF C2 F7 A4 04 1152*      jp nz,@move
04A4E3 3E 01       1153*      ld a,sprite_trigger_see
04A4E5 FD B6 03    1154*      or a,(iy+sprite_triggers_mask)
04A4E8 FD 77 03    1155*      ld (iy+sprite_triggers_mask),a
04A4EB FD E5       1156*      push iy
04A4ED CD F1 B6 04 1157*      call sfx_play_schusstaffel
04A4F1 FD E1       1158*      pop iy
04A4F3 C3 9B 9E 04 1159*      jp sprite_behavior_return
04A4F7             1160*  @move:
04A4F7 FD 35 09    1161*      dec (iy+sprite_move_timer)
04A4FA 28 04       1162*      jr z,@do_move
04A4FC C3 9B 9E 04 1163*      jp sprite_behavior_return
04A500             1164*  @do_move:
04A500 CD 22 B5 04 1165*      call rand_8
04A504 E6 3F       1166*      and %00111111 ; between 0 and 63
04A506             1167*      ; or %00100000  ; at least 32
04A506 F6 10       1168*      or %00010000  ; at least 16
04A508 FD 77 09    1169*      ld (iy+sprite_move_timer),a
04A50B CD 15 9E 04 1170*      call sprite_move_random
04A50F C3 9B 9E 04 1171*      jp sprite_behavior_return
04A513             1172*  @shoot:
04A513 C3 9B 9E 04 1173*      jp sprite_behavior_return
04A517             1174*  
04A517 00          1175*  see_orientation: db 0x00
04A518             1176*  ; cycle through all cells visible to the player from the current position
04A518             1177*  ; and all orientations, and trigger the @see behavior for any sprites in those cells
04A518             1178*  ; inputs: cur_x, cur_y,
04A518             1179*  ; outputs: player-aware enemies
04A518             1180*  ; destroys: everything
04A518             1181*  sprites_see_player:
04A518             1182*  ; intialize orientation
04A518 AF          1183*      xor a
04A519 32 17 A5 04 1184*      ld (see_orientation),a
04A51D             1185*  @loop_orientation:
04A51D             1186*  ; get current map position and camera orientation
04A51D ED 5B 7A B0 1187*      ld de,(cur_x) ; d,e = cur_y,x
       04          
04A522 CD C7 63 04 1188*      call get_cell_from_coords ; ix=cell_status lut; a=obj_id, bc = cell_id
04A526             1189*  ; get cell_views address for this cell and orientation
04A526 3A 17 A5 04 1190*      ld a,(see_orientation)
04A52A 5F          1191*      ld e,a
04A52B 16 06       1192*      ld d,6 ; 6 bytes per orientation
04A52D ED 5C       1193*      mlt de ; de = orientation offset
04A52F EB          1194*      ex de,hl ; hl = orientation offset
04A530 06 18       1195*      ld b,24 ; 24 bytes per cell in cell_views lut
04A532 ED 4C       1196*      mlt bc ; bc = offset from base address of cell_views lut
04A534 09          1197*      add hl,bc ; hl = total offset from cell_views base address
04A535 EB          1198*      ex de,hl ; becaue we can't add iy to hl
04A536 FD 21 00 E4 1199*      ld iy,cell_views ; base address of cell_views lut
       B7          
04A53B FD 19       1200*      add iy,de ; iy = cell_views address
04A53D FD 22 53 65 1201*      ld (cur_cell_views),iy
       04          
04A542             1202*  ; cycle through the cell views masks and trigger the @see behavior for any sprites in those cells
04A542 01 00 46 28 1203*      ld bc,0x284600 ; bcu = jr z,nnn opcode, c = bit operand, b = displacement operand
04A546 AF          1204*      xor a ; poly_id
04A547 32 4F 65 04 1205*      ld (to_poly_id),a
04A54B             1206*  @loop:
04A54B ED 43 57 A5 1207*      ld (@bit_iy+2),bc
       04          
04A550 FD 2A 53 65 1208*      ld iy,(cur_cell_views)
       04          
04A555             1209*  @bit_iy:
04A555 FD CB 00 46 1210*      bit 0,(iy+0) ; the bit tested and offset will be self-modified through the loop
04A559 28 2E       1211*      jr z,@next_poly ; the first byte of this instruction is 0x28, and will be re-written as such each loop
04A55B             1212*  ; get_polys_deltas inputs: a is the orientation, c is the poly_id
04A55B 3A 4F 65 04 1213*      ld a,(to_poly_id)
04A55F 4F          1214*      ld c,a ; poly_id
04A560 3A 17 A5 04 1215*      ld a,(see_orientation)
04A564 CD 74 67 04 1216*      call get_polys_deltas ; d,e = y,x deltas
04A568 3A 7A B0 04 1217*      ld a,(cur_x)
04A56C 83          1218*      add a,e
04A56D 5F          1219*      ld e,a
04A56E 3A 7B B0 04 1220*      ld a,(cur_y)
04A572 82          1221*      add a,d
04A573 57          1222*      ld d,a
04A574 CD C7 63 04 1223*      call get_cell_from_coords
04A578 DD 7E 03    1224*      ld a,(ix+map_sprite_id)
04A57B FE FF       1225*      cp 0xFF ; no sprite
04A57D 28 0A       1226*      jr z,@next_poly
04A57F CD B1 9D 04 1227*      call sprite_set_pointer
04A583 3E 04       1228*      ld a,sp_see
04A585 CD 7F 9E 04 1229*      call do_sprite_behavior
04A589             1230*  @next_poly:
04A589 ED 4B 57 A5 1231*      ld bc,(@bit_iy+2)
       04          
04A58E 3A 4F 65 04 1232*      ld a,(to_poly_id)
04A592 3C          1233*      inc a ; a is next poly_id
04A593 32 4F 65 04 1234*      ld (to_poly_id),a
04A597 FE 2D       1235*      cp num_polys
04A599 28 0D       1236*      jr z,@next_orientation
04A59B 3E 08       1237*      ld a,8
04A59D 80          1238*      add a,b
04A59E 47          1239*      ld b,a ; bit tested codes to 0x46 + b/8
04A59F FE 86       1240*      cp 0x86 ; = 0x7E + 8 where 0x7E is the highest bit possible (7)
04A5A1 20 A8       1241*      jr nz,@loop
04A5A3 06 46       1242*      ld b,0x46
04A5A5 0C          1243*      inc c ; iy address offset
04A5A6 18 A3       1244*      jr @loop
04A5A8             1245*  @next_orientation:
04A5A8 3A 17 A5 04 1246*      ld a,(see_orientation)
04A5AC 3C          1247*      inc a
04A5AD 32 17 A5 04 1248*      ld (see_orientation),a
04A5B1 C2 1D A5 04 1249*      jp nz,@loop_orientation
04A5B5 C9          1250*      ret
04A5B6             0030       include "src/asm/mos_api.asm"
04A5B6             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/mos_api.asm
04A5B6             0002*  ; Title:	AGON MOS - API for user projects
04A5B6             0003*  ; Author:	Dean Belfield
04A5B6             0004*  ;			Adapted for agon-ez80asm by Jeroen Venema
04A5B6             0005*  ;			Added MOS error codes for return in HL
04A5B6             0006*  ; Created:	03/08/2022
04A5B6             0007*  ; Last Updated:	10/08/2023
04A5B6             0008*  ;
04A5B6             0009*  ; Modinfo:
04A5B6             0010*  ; 05/08/2022:	Added mos_feof
04A5B6             0011*  ; 09/08/2022:	Added system variables: cursorX, cursorY
04A5B6             0012*  ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
04A5B6             0013*  ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
04A5B6             0014*  ; 24/09/2022:	Added mos_getError, mos_mkdir
04A5B6             0015*  ; 13/10/2022:	Added mos_oscli
04A5B6             0016*  ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
04A5B6             0017*  ; 04/03/2023:	Added sysvar_scrpixelIndex
04A5B6             0018*  ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
04A5B6             0019*  ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
04A5B6             0020*  ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
04A5B6             0021*  ; 22/03/2023:	The VDP commands are now indexed from 0x80
04A5B6             0022*  ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
04A5B6             0023*  ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
04A5B6             0024*  ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
04A5B6             0025*  ; 19/05/2023:	Added sysvar_scrMode
04A5B6             0026*  ; 05/06/2023:	Added sysvar_rtcEnable
04A5B6             0027*  ; 03/08/2023:	Added mos_setkbvector
04A5B6             0028*  ; 10/08/2023:	Added mos_getkbmap
04A5B6             0029*  
04A5B6             0030*  ; VDP control (VDU 23, 0, n)
04A5B6             0031*  ;
04A5B6             0032*  vdp_gp:				EQU 80h
04A5B6             0033*  vdp_keycode:		EQU 81h
04A5B6             0034*  vdp_cursor:			EQU	82h
04A5B6             0035*  vdp_scrchar:		EQU	83h
04A5B6             0036*  vdp_scrpixel:		EQU	84h
04A5B6             0037*  vdp_audio:			EQU	85h
04A5B6             0038*  vdp_mode:			EQU	86h
04A5B6             0039*  vdp_rtc:			EQU	87h
04A5B6             0040*  vdp_keystate:		EQU	88h
04A5B6             0041*  vdp_logicalcoords:	EQU	C0h
04A5B6             0042*  vdp_terminalmode:	EQU	FFh
04A5B6             0043*  
04A5B6             0044*  ; MOS high level functions
04A5B6             0045*  ;
04A5B6             0046*  mos_getkey:			EQU	00h
04A5B6             0047*  mos_load:			EQU	01h
04A5B6             0048*  mos_save:			EQU	02h
04A5B6             0049*  mos_cd:				EQU	03h
04A5B6             0050*  mos_dir:			EQU	04h
04A5B6             0051*  mos_del:			EQU	05h
04A5B6             0052*  mos_ren:			EQU	06h
04A5B6             0053*  mos_mkdir:			EQU	07h
04A5B6             0054*  mos_sysvars:		EQU	08h
04A5B6             0055*  mos_editline:		EQU	09h
04A5B6             0056*  mos_fopen:			EQU	0Ah
04A5B6             0057*  mos_fclose:			EQU	0Bh
04A5B6             0058*  mos_fgetc:			EQU	0Ch
04A5B6             0059*  mos_fputc:			EQU	0Dh
04A5B6             0060*  mos_feof:			EQU	0Eh
04A5B6             0061*  mos_getError:		EQU	0Fh
04A5B6             0062*  mos_oscli:			EQU	10h
04A5B6             0063*  mos_copy:			EQU	11h
04A5B6             0064*  mos_getrtc:			EQU	12h
04A5B6             0065*  mos_setrtc:			EQU	13h
04A5B6             0066*  mos_setintvector:	EQU	14h
04A5B6             0067*  mos_uopen:			EQU	15h
04A5B6             0068*  mos_uclose:			EQU	16h
04A5B6             0069*  mos_ugetc:			EQU	17h
04A5B6             0070*  mos_uputc:			EQU	18h
04A5B6             0071*  mos_getfil:			EQU	19h
04A5B6             0072*  mos_fread:			EQU	1Ah
04A5B6             0073*  mos_fwrite:			EQU	1Bh
04A5B6             0074*  mos_flseek:			EQU	1Ch
04A5B6             0075*  mos_setkbvector:	EQU	1Dh
04A5B6             0076*  mos_getkbmap:		EQU	1Eh
04A5B6             0077*  
04A5B6             0078*  ; MOS program exit codes
04A5B6             0079*  ;
04A5B6             0080*  EXIT_OK:				EQU  0;	"OK",
04A5B6             0081*  EXIT_ERROR_SD_ACCESS:	EQU	 1;	"Error accessing SD card",
04A5B6             0082*  EXIT_ERROR_ASSERTION:	EQU  2;	"Assertion failed",
04A5B6             0083*  EXIT_SD_CARDFAILURE:	EQU  3;	"SD card failure",
04A5B6             0084*  EXIT_FILENOTFOUND:		EQU  4;	"Could not find file",
04A5B6             0085*  EXIT_PATHNOTFOUND:		EQU  5;	"Could not find path",
04A5B6             0086*  EXIT_INVALIDPATHNAME:	EQU  6;	"Invalid path name",
04A5B6             0087*  EXIT_ACCESSDENIED_FULL:	EQU  7;	"Access denied or directory full",
04A5B6             0088*  EXIT_ACCESSDENIED:		EQU  8;	"Access denied",
04A5B6             0089*  EXIT_INVALIDOBJECT:		EQU  9;	"Invalid file/directory object",
04A5B6             0090*  EXIT_SD_WRITEPROTECTED:	EQU 10;	"SD card is write protected",
04A5B6             0091*  EXIT_INVALIDDRIVENUMBER:EQU 11;	"Logical drive number is invalid",
04A5B6             0092*  EXIT_NOVOLUMEWORKAREA:	EQU 12;	"Volume has no work area",
04A5B6             0093*  EXIT_NOVALIDFATVOLUME:	EQU 13;	"No valid FAT volume",
04A5B6             0094*  EXIT_ERRORMKFS:			EQU 14;	"Error occurred during mkfs",
04A5B6             0095*  EXIT_VOLUMETIMEOUT:		EQU 15;	"Volume timeout",
04A5B6             0096*  EXIT_VOLUMELOCKED:		EQU 16;	"Volume locked",
04A5B6             0097*  EXIT_LFNALLOCATION:		EQU 17;	"LFN working buffer could not be allocated",
04A5B6             0098*  EXIT_MAXOPENFILES:		EQU 18;	"Too many open files",
04A5B6             0099*  EXIT_INVALIDPARAMETER:	EQU 19;	"Invalid parameter",
04A5B6             0100*  EXIT_INVALIDCOMMAND:	EQU 20;	"Invalid command",
04A5B6             0101*  EXIT_INVALIDEXECUTABLE:	EQU 21;	"Invalid executable",
04A5B6             0102*  ; FatFS file access functions
04A5B6             0103*  ;
04A5B6             0104*  ffs_fopen:			EQU	80h
04A5B6             0105*  ffs_fclose:			EQU	81h
04A5B6             0106*  ffs_fread:			EQU	82h
04A5B6             0107*  ffs_fwrite:			EQU	83h
04A5B6             0108*  ffs_flseek:			EQU	84h
04A5B6             0109*  ffs_ftruncate:		EQU	85h
04A5B6             0110*  ffs_fsync:			EQU	86h
04A5B6             0111*  ffs_fforward:		EQU	87h
04A5B6             0112*  ffs_fexpand:		EQU	88h
04A5B6             0113*  ffs_fgets:			EQU	89h
04A5B6             0114*  ffs_fputc:			EQU	8Ah
04A5B6             0115*  ffs_fputs:			EQU	8Bh
04A5B6             0116*  ffs_fprintf:		EQU	8Ch
04A5B6             0117*  ffs_ftell:			EQU	8Dh
04A5B6             0118*  ffs_feof:			EQU	8Eh
04A5B6             0119*  ffs_fsize:			EQU	8Fh
04A5B6             0120*  ffs_ferror:			EQU	90h
04A5B6             0121*  
04A5B6             0122*  ; FatFS directory access functions
04A5B6             0123*  ;
04A5B6             0124*  ffs_dopen:			EQU	91h
04A5B6             0125*  ffs_dclose:			EQU	92h
04A5B6             0126*  ffs_dread:			EQU	93h
04A5B6             0127*  ffs_dfindfirst:		EQU	94h
04A5B6             0128*  ffs_dfindnext:		EQU	95h
04A5B6             0129*  
04A5B6             0130*  ; FatFS file and directory management functions
04A5B6             0131*  ;
04A5B6             0132*  ffs_stat:			EQU	96h
04A5B6             0133*  ffs_unlink:			EQU	97h
04A5B6             0134*  ffs_rename:			EQU	98h
04A5B6             0135*  ffs_chmod:			EQU	99h
04A5B6             0136*  ffs_utime:			EQU	9Ah
04A5B6             0137*  ffs_mkdir:			EQU	9Bh
04A5B6             0138*  ffs_chdir:			EQU	9Ch
04A5B6             0139*  ffs_chdrive:		EQU	9Dh
04A5B6             0140*  ffs_getcwd:			EQU	9Eh
04A5B6             0141*  
04A5B6             0142*  ; FatFS volume management and system configuration functions
04A5B6             0143*  ;
04A5B6             0144*  ffs_mount:			EQU	9Fh
04A5B6             0145*  ffs_mkfs:			EQU	A0h
04A5B6             0146*  ffs_fdisk:			EQU	A1h
04A5B6             0147*  ffs_getfree:		EQU	A2h
04A5B6             0148*  ffs_getlabel:		EQU	A3h
04A5B6             0149*  ffs_setlabel:		EQU	A4h
04A5B6             0150*  ffs_setcp:			EQU	A5h
04A5B6             0151*  
04A5B6             0152*  ; File access modes
04A5B6             0153*  ;
04A5B6             0154*  fa_read:			EQU	01h
04A5B6             0155*  fa_write:			EQU	02h
04A5B6             0156*  fa_open_existing:	EQU	00h
04A5B6             0157*  fa_create_new:		EQU	04h
04A5B6             0158*  fa_create_always:	EQU	08h
04A5B6             0159*  fa_open_always:		EQU	10h
04A5B6             0160*  fa_open_append:		EQU	30h
04A5B6             0161*  
04A5B6             0162*  ; System variable indexes for api_sysvars
04A5B6             0163*  ; Index into _sysvars in globals.asm
04A5B6             0164*  ;
04A5B6             0165*  sysvar_time:			EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
04A5B6             0166*  sysvar_vpd_pflags:		EQU	04h	; 1: Flags to indicate completion of VDP commands
04A5B6             0167*  sysvar_keyascii:		EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
04A5B6             0168*  sysvar_keymods:			EQU	06h	; 1: Keycode modifiers
04A5B6             0169*  sysvar_cursorX:			EQU	07h	; 1: Cursor X position
04A5B6             0170*  sysvar_cursorY:			EQU	08h	; 1: Cursor Y position
04A5B6             0171*  sysvar_scrchar:			EQU	09h	; 1: Character read from screen
04A5B6             0172*  sysvar_scrpixel:		EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
04A5B6             0173*  sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
04A5B6             0174*  sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
04A5B6             0175*  sysvar_scrWidth:		EQU	0Fh	; 2: Screen width in pixels
04A5B6             0176*  sysvar_scrHeight:		EQU	11h	; 2: Screen height in pixels
04A5B6             0177*  sysvar_scrCols:			EQU	13h	; 1: Screen columns in characters
04A5B6             0178*  sysvar_scrRows:			EQU	14h	; 1: Screen rows in characters
04A5B6             0179*  sysvar_scrColours:		EQU	15h	; 1: Number of colours displayed
04A5B6             0180*  sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
04A5B6             0181*  sysvar_vkeycode:		EQU	17h	; 1: Virtual key code from FabGL
04A5B6             0182*  sysvar_vkeydown:		EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
04A5B6             0183*  sysvar_vkeycount:		EQU	19h	; 1: Incremented every time a key packet is received
04A5B6             0184*  sysvar_rtc:				EQU	1Ah	; 6: Real time clock data
04A5B6             0185*  sysvar_spare:			EQU	20h	; 2: Spare, previously used by rtc
04A5B6             0186*  sysvar_keydelay:		EQU	22h	; 2: Keyboard repeat delay
04A5B6             0187*  sysvar_keyrate:			EQU	24h	; 2: Keyboard repeat reat
04A5B6             0188*  sysvar_keyled:			EQU	26h	; 1: Keyboard LED status
04A5B6             0189*  sysvar_scrMode:			EQU	27h	; 1: Screen mode
04A5B6             0190*  sysvar_rtcEnable:		EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
04A5B6             0191*  
04A5B6             0192*  ; Flags for the VPD protocol
04A5B6             0193*  ;
04A5B6             0194*  vdp_pflag_cursor:		EQU	00000001b
04A5B6             0195*  vdp_pflag_scrchar:		EQU	00000010b
04A5B6             0196*  vdp_pflag_point:		EQU	00000100b
04A5B6             0197*  vdp_pflag_audio:		EQU	00001000b
04A5B6             0198*  vdp_pflag_mode:			EQU	00010000b
04A5B6             0199*  vdp_pflag_rtc:			EQU	00100000b
04A5B6             0200*  
04A5B6             0201*  ;
04A5B6             0202*  ; FatFS structures
04A5B6             0203*  ; These mirror the structures contained in src_fatfs/ff.h in the MOS project
04A5B6             0204*  ;
04A5B6             0205*  ; Object ID and allocation information (FFOBJID)
04A5B6             0206*  ;
04A5B6             0207*  ; Indexes into FFOBJID structure
04A5B6             0208*  ffobjid_fs:			EQU	0	; 3: Pointer to the hosting volume of this object
04A5B6             0209*  ffobjid_id:			EQU	3	; 2: Hosting volume mount ID
04A5B6             0210*  ffobjid_attr:		EQU	5	; 1: Object attribute
04A5B6             0211*  ffobjid_stat:		EQU	6	; 1: Object chain status (b1-0: =0:not contiguous, =2:contiguous, =3:fragmented in this session, b2:sub-directory stretched)
04A5B6             0212*  ffobjid_sclust:		EQU	7	; 4: Object data start cluster (0:no cluster or root directory)
04A5B6             0213*  ffobjid_objsize:	EQU	11	; 4: Object size (valid when sclust != 0)
04A5B6             0214*  ;
04A5B6             0215*  ; File object structure (FIL)
04A5B6             0216*  ;
04A5B6             0217*  ; Indexes into FIL structure
04A5B6             0218*  fil_obj:		EQU 0	; 15: Object identifier
04A5B6             0219*  fil_flag:		EQU	15 	;  1: File status flags
04A5B6             0220*  fil_err:		EQU	16	;  1: Abort flag (error code)
04A5B6             0221*  fil_fptr:		EQU	17	;  4: File read/write pointer (Zeroed on file open)
04A5B6             0222*  fil_clust:		EQU	21	;  4: Current cluster of fpter (invalid when fptr is 0)
04A5B6             0223*  fil_sect:		EQU	25	;  4: Sector number appearing in buf[] (0:invalid)
04A5B6             0224*  fil_dir_sect:	EQU	29	;  4: Sector number containing the directory entry
04A5B6             0225*  fil_dir_ptr:	EQU	33	;  3: Pointer to the directory entry in the win[]
04A5B6             0226*  ;
04A5B6             0227*  ; Directory object structure (DIR)
04A5B6             0228*  ; Indexes into DIR structure
04A5B6             0229*  dir_obj:		EQU  0	; 15: Object identifier
04A5B6             0230*  dir_dptr:		EQU	15	;  4: Current read/write offset
04A5B6             0231*  dir_clust:		EQU	19	;  4: Current cluster
04A5B6             0232*  dir_sect:		EQU	23	;  4: Current sector (0:Read operation has terminated)
04A5B6             0233*  dir_dir:		EQU	27	;  3: Pointer to the directory item in the win[]
04A5B6             0234*  dir_fn:			EQU	30	; 12: SFN (in/out) {body[8],ext[3],status[1]}
04A5B6             0235*  dir_blk_ofs:	EQU	42	;  4: Offset of current entry block being processed (0xFFFFFFFF:Invalid)
04A5B6             0236*  ;
04A5B6             0237*  ; File information structure (FILINFO)
04A5B6             0238*  ;
04A5B6             0239*  ; Indexes into FILINFO structure
04A5B6             0240*  filinfo_fsize:		EQU 0	;   4: File size
04A5B6             0241*  filinfo_fdate:		EQU	4	;   2: Modified date
04A5B6             0242*  filinfo_ftime:		EQU	6	;   2: Modified time
04A5B6             0243*  filinfo_fattrib:	EQU	8	;   1: File attribute
04A5B6             0244*  filinfo_altname:	EQU	9	;  13: Alternative file name
04A5B6             0245*  filinfo_fname:		EQU	22	; 256: Primary file name
04A5B6             0246*  ;
04A5B6             0247*  ; Macro for calling the API
04A5B6             0248*  ; Parameters:
04A5B6             0249*  ; - function: One of the function numbers listed above
04A5B6             0250*  ;
04A5B6             0251*  	MACRO	MOSCALL	function
04A5B6             0252*  			LD	A, function
04A5B6             0253*  			RST.LIL	08h
04A5B6             0254*  	ENDMACRO
04A5B6             0031   	include "src/asm/vdu.asm"
04A5B6             0001*  ; The following is a high-level list of the VDU sequences that are supported:
04A5B6             0002*  ; VDU 0: Null (no operation)
04A5B6             0003*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
04A5B6             0004*  ; VDU 2: Enable “printer” §§
04A5B6             0005*  ; VDU 3: Disable “printer” §§
04A5B6             0006*  ; VDU 4: Write text at text cursor
04A5B6             0007*  ; VDU 5: Write text at graphics cursor
04A5B6             0008*  ; VDU 6: Enable screen (opposite of VDU 21) §§
04A5B6             0009*  ; VDU 7: Make a short beep (BEL)
04A5B6             0010*  ; VDU 8: Move cursor back one character
04A5B6             0011*  ; VDU 9: Move cursor forward one character
04A5B6             0012*  ; VDU 10: Move cursor down one line
04A5B6             0013*  ; VDU 11: Move cursor up one line
04A5B6             0014*  ; VDU 12: Clear text area (CLS)
04A5B6             0015*  ; VDU 13: Carriage return
04A5B6             0016*  ; VDU 14: Page mode On *
04A5B6             0017*  ; VDU 15: Page mode Off *
04A5B6             0018*  ; VDU 16: Clear graphics area (CLG)
04A5B6             0019*  ; VDU 17, colour: Define text colour (COLOUR)
04A5B6             0020*  ; VDU 18, mode, colour: Define graphics colour (GCOL mode, colour)
04A5B6             0021*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
04A5B6             0022*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
04A5B6             0023*  ; VDU 21: Disable screen (turns of VDU command processing, except for VDU 1 and VDU 6) §§
04A5B6             0024*  ; VDU 22, n: Select screen mode (MODE n)
04A5B6             0025*  ; VDU 23, n: Re-program display character / System Commands
04A5B6             0026*  ; VDU 24, left; bottom; right; top;: Set graphics viewport **
04A5B6             0027*  ; VDU 25, mode, x; y;: PLOT command
04A5B6             0028*  ; VDU 26: Reset graphics and text viewports **
04A5B6             0029*  ; VDU 27, char: Output character to screen §
04A5B6             0030*  ; VDU 28, left, bottom, right, top: Set text viewport **
04A5B6             0031*  ; VDU 29, x; y;: Set graphics origin
04A5B6             0032*  ; VDU 30: Home cursor
04A5B6             0033*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
04A5B6             0034*  ; VDU 127: Backspace
04A5B6             0035*  
04A5B6             0036*  ; VDU 0: Null (no operation)
04A5B6             0037*  ;     On encountering a VDU 0 command, the VDP will do nothing.
04A5B6             0038*  ;     This may be useful for padding out a VDU command sequence,
04A5B6             0039*  ;     or for inserting a placeholder for a command that will be added later.
04A5B6             0040*  ; inputs: none
04A5B6             0041*  ; outputs: an empty byte somewhere in VDU
04A5B6             0042*  ; destroys: a
04A5B6             0043*  vdu_null:
04A5B6 AF          0044*      xor a
04A5B7 5B D7       0045*  	rst.lil $10
04A5B9 C9          0046*  	ret
04A5BA             0047*  
04A5BA             0048*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
04A5BA             0049*  ;     Ensures that the next character received by the VDP is sent through to
04A5BA             0050*  ;     the “printer”, and not to the screen. This is useful for sending control
04A5BA             0051*  ;     codes to the “printer”, or for sending data to the “printer” that is not
04A5BA             0052*  ;     intended to be displayed on the screen. It allows characters that would
04A5BA             0053*  ;     not otherwise normally be sent through to the “printer” to be sent.
04A5BA             0054*  ;     If the “printer” has not been enabled then this command will just discard
04A5BA             0055*  ;     the next byte sent to the VDP.
04A5BA             0056*  ; inputs: a is the ascii code of the character to send
04A5BA             0057*  ; prerequisites: "printer" must first be activated with VDU 2 (see below)
04A5BA             0058*  ; outputs: a character on the serial terminal connected to the USB port
04A5BA             0059*  ;           and the same character on the screen at the current text cursor location
04A5BA             0060*  ; QUESTION: does it also advance the text cursor?
04A5BA             0061*  ; destroys: hl, bc
04A5BA             0062*  vdu_char_to_printer:
04A5BA 32 CA A5 04 0063*  	ld (@arg),a
04A5BE 21 C9 A5 04 0064*  	ld hl,@cmd
04A5C2 01 02 00 00 0065*  	ld bc,@end-@cmd
04A5C6 5B DF       0066*  	rst.lil $18
04A5C8 C9          0067*  	ret
04A5C9 01          0068*  @cmd: db 1
04A5CA 00          0069*  @arg: db 0
04A5CB             0070*  @end:
04A5CB             0071*  
04A5CB             0072*  ; VDU 2: Enable “printer” §§
04A5CB             0073*  ;     Enables the “printer”.
04A5CB             0074*  ;     In the context of the Agon platform, the “printer” is a serial
04A5CB             0075*  ;     terminal that is connected to the VDP’s USB port. Typically
04A5CB             0076*  ;     this port is used for power, but it can also be used to send and
04A5CB             0077*  ;     receive data to and from the VDP.
04A5CB             0078*  ;     When the “printer” is enabled, the VDP will send characters it receives
04A5CB             0079*  ;     to the “printer” as well as to the screen. It will additionally send
04A5CB             0080*  ;     through control codes 8-13. To send other control codes to the “printer”,
04A5CB             0081*  ;     use the VDU 1 command.
04A5CB             0082*  ;     The VDP will not send through other control codes to the printer,
04A5CB             0083*  ;     and will will not send through data it receives as part of other commands.
04A5CB             0084*  vdu_enable_printer:
04A5CB 3E 02       0085*      ld a,2
04A5CD 5B D7       0086*  	rst.lil $10
04A5CF C9          0087*  	ret
04A5D0             0088*  
04A5D0             0089*  ; VDU 3: Disable “printer” §§
04A5D0             0090*  ; inputs: none
04A5D0             0091*  ; outputs: a USB port bereft of communication with the VDP
04A5D0             0092*  ; destroys: a
04A5D0             0093*  vdu_disable_printer:
04A5D0 3E 03       0094*      ld a,3
04A5D2 5B D7       0095*  	rst.lil $10
04A5D4 C9          0096*  	ret
04A5D5             0097*  
04A5D5             0098*  ; VDU 4: Write text at text cursor
04A5D5             0099*  ;     This causes text to be written at the current text cursor position.
04A5D5             0100*  ;     This is the default mode for text display.
04A5D5             0101*  ;     Text is written using the current text foreground and background colours.
04A5D5             0102*  ; inputs: a is the character to write to the screen
04A5D5             0103*  ; prerequisites: the text cursor at the intended position on screen
04A5D5             0104*  ; outputs: prints the character and moves text cursor right one position
04A5D5             0105*  ; destroys: a, hl, bc
04A5D5             0106*  vdu_char_to_text_cursor:
04A5D5 32 E5 A5 04 0107*  	ld (@arg),a
04A5D9 21 E4 A5 04 0108*  	ld hl,@cmd
04A5DD 01 02 00 00 0109*  	ld bc,@end-@cmd
04A5E1 5B DF       0110*  	rst.lil $18
04A5E3 C9          0111*  	ret
04A5E4 04          0112*  @cmd: db 4
04A5E5 00          0113*  @arg: db 0
04A5E6             0114*  @end:
04A5E6             0115*  
04A5E6             0116*  ; VDU 5: Write text at graphics cursor
04A5E6             0117*  ;     This causes text to be written at the current graphics cursor position.
04A5E6             0118*  ;     Using this, characters may be positioned at any graphics coordinate within
04A5E6             0119*  ;     the graphics viewport. This is useful for positioning text over graphics,
04A5E6             0120*  ;     or for positioning text at a specific location on the screen.
04A5E6             0121*  ;     Characters are plotted using the current graphics foreground colour,
04A5E6             0122*  ;     using the current graphics foreground plotting mode (see VDU 18).
04A5E6             0123*  ;     The character background is transparent, and will not overwrite any
04A5E6             0124*  ;     graphics that are already present at the character’s location.
04A5E6             0125*  ;     The exception to this is VDU 27, the “delete” character, which backspaces
04A5E6             0126*  ;     and deletes as per its usual behaviour, but will erase using the current
04A5E6             0127*  ;     graphics background colour.
04A5E6             0128*  ; inputs: a is the character to write to the screen
04A5E6             0129*  ; prerequisites: the graphics cursor at the intended position on screen
04A5E6             0130*  ; outputs: see the name of the function
04A5E6             0131*  ; destroys: a, hl, bc
04A5E6             0132*  vdu_char_to_gfx_cursor:
04A5E6 32 F6 A5 04 0133*  	ld (@arg),a
04A5EA 21 F5 A5 04 0134*  	ld hl,@cmd
04A5EE 01 02 00 00 0135*  	ld bc,@end-@cmd
04A5F2 5B DF       0136*  	rst.lil $18
04A5F4 C9          0137*  	ret
04A5F5 05          0138*  @cmd: db 5
04A5F6 00          0139*  @arg: db 0
04A5F7             0140*  @end:
04A5F7             0141*  
04A5F7             0142*  ; VDU 6: Enable screen (opposite of VDU 21) §§
04A5F7             0143*  ;     This enables the screen, and re-enables VDU command processing,
04A5F7             0144*  ;     reversing the effect of VDU 21.
04A5F7             0145*  ; inputs: none
04A5F7             0146*  ; outputs: a functioning screen and VDU
04A5F7             0147*  ; destroys: a
04A5F7             0148*  vdu_enable_screen:
04A5F7 3E 06       0149*      ld a,6
04A5F9 5B D7       0150*  	rst.lil $10
04A5FB C9          0151*  	ret
04A5FC             0152*  
04A5FC             0153*  ; PASSES
04A5FC             0154*  ; VDU 7: Make a short beep (BEL)
04A5FC             0155*  ;     Plays a short beep sound on audio channel 0. If the audio channel
04A5FC             0156*  ;     is already in use, or has been disabled, then this command will have no effect.
04A5FC             0157*  ; inputs: none
04A5FC             0158*  ; outputs: an unpleasant but thankfully short-lived audio tone
04A5FC             0159*  ; destroys: a
04A5FC             0160*  vdu_beep:
04A5FC 3E 07       0161*      ld a,7
04A5FE 5B D7       0162*  	rst.lil $10
04A600 C9          0163*  	ret
04A601             0164*  
04A601             0165*  ; VDU 8: Move cursor back one character
04A601             0166*  ;     Moves the text cursor one character in the negative “X” direction.
04A601             0167*  ;     By default, when at the start of a line it will move to the end of
04A601             0168*  ;     the previous line (as defined by the current text viewport).
04A601             0169*  ;     If the cursor is also at the top of the screen then the viewport will scroll down.
04A601             0170*  ;     The cursor remains constrained to the current text viewport.
04A601             0171*  ;     When in VDU 5 mode and the graphics cursor is active, the viewport will not scroll.
04A601             0172*  ;     The cursor is just moved left by one character width.
04A601             0173*  ;     Further behaviour of the cursor can be controlled using the VDU 23,16 command.
04A601             0174*  ;     It should be noted that as of Console8 VDP 2.5.0, the cursor system does not
04A601             0175*  ;     support adjusting the direction of the cursor’s X axis, so this command
04A601             0176*  ;     will move the cursor to the left. This is likely to change in the future.
04A601             0177*  vdu_cursor_back:
04A601 3E 08       0178*      ld a,8
04A603 5B D7       0179*  	rst.lil $10
04A605 C9          0180*  	ret
04A606             0181*  
04A606             0182*  ; VDU 9: Move cursor forward one character
04A606             0183*  vdu_cursor_forward:
04A606 3E 09       0184*      ld a,9
04A608 5B D7       0185*  	rst.lil $10
04A60A C9          0186*  	ret
04A60B             0187*  
04A60B             0188*  ; VDU 10: Move cursor down one line
04A60B             0189*  vdu_cursor_down:
04A60B 3E 0A       0190*      ld a,10
04A60D 5B D7       0191*  	rst.lil $10
04A60F C9          0192*  	ret
04A610             0193*  
04A610             0194*  ; VDU 11: Move cursor up one line
04A610             0195*  vdu_cursor_up:
04A610 3E 0B       0196*      ld a,11
04A612 5B D7       0197*  	rst.lil $10
04A614 C9          0198*  	ret
04A615             0199*  
04A615             0200*  ; VDU 12: Clear text area (CLS)
04A615             0201*  vdu_cls:
04A615 3E 0C       0202*      ld a,12
04A617 5B D7       0203*  	rst.lil $10
04A619 C9          0204*  	ret
04A61A             0205*  
04A61A             0206*  ; VDU 13: Carriage return
04A61A             0207*  vdu_cr:
04A61A 3E 0D       0208*      ld a,13
04A61C 5B D7       0209*  	rst.lil $10
04A61E C9          0210*  	ret
04A61F             0211*  
04A61F             0212*  ; VDU 14: Page mode On *
04A61F             0213*  vdu_page_on:
04A61F 3E 0E       0214*      ld a,14
04A621 5B D7       0215*  	rst.lil $10
04A623 C9          0216*  	ret
04A624             0217*  
04A624             0218*  ; VDU 15: Page mode Off *
04A624             0219*  vdu_page_off:
04A624 3E 0F       0220*      ld a,15
04A626 5B D7       0221*  	rst.lil $10
04A628 C9          0222*  	ret
04A629             0223*  
04A629             0224*  ; VDU 16: Clear graphics area (CLG)
04A629             0225*  vdu_clg:
04A629 3E 10       0226*      ld a,16
04A62B 5B D7       0227*  	rst.lil $10
04A62D C9          0228*  	ret
04A62E             0229*  
04A62E             0230*  ; VDU 17, colour: Define text colour (COLOUR)
04A62E             0231*  vdu_colour_text:
04A62E 32 3E A6 04 0232*  	ld (@arg),a
04A632 21 3D A6 04 0233*  	ld hl,@cmd
04A636 01 02 00 00 0234*  	ld bc,@end-@cmd
04A63A 5B DF       0235*  	rst.lil $18
04A63C C9          0236*  	ret
04A63D 11          0237*  @cmd: db 17
04A63E 00          0238*  @arg: db 0
04A63F             0239*  @end:
04A63F             0240*  
04A63F             0241*  ; VDU 18, mode, colour: Set graphics colour (GCOL mode, colour)
04A63F             0242*  ; inputs: a is the plotting mode, c is the colour
04A63F             0243*  ; outputs: a VDU set to put pixels on the screen with the selected mode/colour
04A63F             0244*  vdu_gcol_fg:
04A63F             0245*  ; This command will set both the current graphics colour,
04A63F             0246*  ; and the current graphics plotting mode.
04A63F             0247*  ; As with VDU 17 the colour number will set the foreground colour
04A63F             0248*  ; if it is in the range 0-127, or the background colour if it is
04A63F             0249*  ; in the range 128-255, and will be interpreted in the same manner.
04A63F             0250*  ; Support for different plotting modes on Agon is currently very limited.
04A63F             0251*  ; The only fully supported mode is mode 0, which is the default mode.
04A63F             0252*  ; This mode will plot the given colour at the given graphics coordinate,
04A63F             0253*  ; and will overwrite any existing graphics at that coordinate. There is
04A63F             0254*  ; very limited support for mode 4, which will invert the colour of any
04A63F             0255*  ; existing graphics at the given coordinate, but this is not fully supported
04A63F             0256*  ; and may not work as expected.
04A63F             0257*  ; Support for other plotting modes, matching those provided by Acorn’s
04A63F             0258*  ; original VDU system, may be added in the future.
04A63F             0259*  ; This command is identical to the BASIC GCOL keyword.
04A63F 32 54 A6 04 0260*  	ld (@mode),a
04A643 79          0261*      ld a,c
04A644 32 55 A6 04 0262*      ld (@col),a
04A648 21 53 A6 04 0263*  	ld hl,@cmd
04A64C 01 03 00 00 0264*  	ld bc,@end-@cmd
04A650 5B DF       0265*  	rst.lil $18
04A652 C9          0266*  	ret
04A653 12          0267*  @cmd: db 18
04A654 00          0268*  @mode: db 0
04A655 00          0269*  @col: db 0
04A656             0270*  @end:
04A656             0271*  
04A656             0272*  vdu_gcol_bg:
04A656 32 6D A6 04 0273*  	ld (@mode),a
04A65A 79          0274*      ld a,c
04A65B C6 80       0275*      add a,128
04A65D 32 6E A6 04 0276*      ld (@col),a
04A661 21 6C A6 04 0277*  	ld hl,@cmd
04A665 01 03 00 00 0278*  	ld bc,@end-@cmd
04A669 5B DF       0279*  	rst.lil $18
04A66B C9          0280*  	ret
04A66C 12          0281*  @cmd:  db 18
04A66D 00          0282*  @mode: db 0
04A66E 00          0283*  @col:  db 0
04A66F             0284*  @end:
04A66F             0285*  
04A66F             0286*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
04A66F             0287*  ;     This command sets the colour palette, by mapping a logical colour
04A66F             0288*  ;     to a physical colour. This is useful for defining custom colours,
04A66F             0289*  ;     or for redefining the default colours.
04A66F             0290*  ;     If the physical colour number is given as 255 then the colour will
04A66F             0291*  ;     be defined using the red, green, and blue values given. If the physical
04A66F             0292*  ;     colour number is given as any other value then the colour will be defined
04A66F             0293*  ;     using the colour palette entry given by that number, up to colour number 63.
04A66F             0294*  ;     If the physical colour is not 255 then the red, green, and blue values
04A66F             0295*  ;     must still be provided, but will be ignored.
04A66F             0296*  ;     The values for red, green and blue must be given in the range 0-255.
04A66F             0297*  ;     You should note that the physical Agon hardware only supports 64 colours,
04A66F             0298*  ;     so the actual colour displayed may not be exactly the same as the colour
04A66F             0299*  ;     requested. The nearest colour will be chosen.
04A66F             0300*  ;     This command is equivalent to the BASIC COLOUR keyword.
04A66F             0301*  ; inputs: a=physcial colour, b=logical colour, chl=r,g,b
04A66F             0302*  vdu_def_log_colour:
04A66F 32 94 A6 04 0303*  	ld (@physical),a
04A673 47          0304*      ld b,a
04A674 32 93 A6 04 0305*      ld (@logical),a
04A678 79          0306*      ld a,c
04A679 32 95 A6 04 0307*      ld (@red),a
04A67D 7C          0308*      ld a,h
04A67E 32 96 A6 04 0309*      ld (@green),a
04A682 7D          0310*      ld a,l
04A683 32 97 A6 04 0311*      ld (@blue),a
04A687 21 92 A6 04 0312*  	ld hl,@cmd
04A68B 01 06 00 00 0313*  	ld bc,@end-@cmd
04A68F 5B DF       0314*  	rst.lil $18
04A691 C9          0315*  	ret
04A692 13          0316*  @cmd: db 19
04A693 00          0317*  @logical: db 0
04A694 00          0318*  @physical: db 0
04A695 00          0319*  @red: db 0
04A696 00          0320*  @green: db 0
04A697 00          0321*  @blue: db 0
04A698             0322*  @end:
04A698             0323*  
04A698             0324*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
04A698             0325*  vdu_reset_gfx:
04A698 3E 14       0326*      ld a,20
04A69A 5B D7       0327*  	rst.lil $10
04A69C C9          0328*  	ret
04A69D             0329*  
04A69D             0330*  ; VDU 21: Disable screen (turns off VDU command processing,
04A69D             0331*  ; except for VDU 1 and VDU 6) §§
04A69D             0332*  vdu_disable_screen:
04A69D 3E 15       0333*      ld a,21
04A69F 5B D7       0334*  	rst.lil $10
04A6A1 C9          0335*  	ret
04A6A2             0336*  
04A6A2             0337*  ; VDU 22, n: Select screen mode (MODE n)
04A6A2             0338*  ; Inputs: a, screen mode (8-bit unsigned integer), in the following list:
04A6A2             0339*  ; https://agonconsole8.github.io/agon-docs/VDP---Screen-Modes.html
04A6A2             0340*  ; Screen modes
04A6A2             0341*  ; Modes over 128 are double-buffered
04A6A2             0342*  ; From Version 1.04 or greater
04A6A2             0343*  ; Mode 	Horz 	Vert 	Cols 	Refresh
04A6A2             0344*  ; 0 	640 	480 	16 	    60hz
04A6A2             0345*  ; * 1 	640 	480 	4 	    60hz
04A6A2             0346*  ; 2 	640 	480 	2 	    60hz
04A6A2             0347*  ; 3 	640 	240 	64 	    60hz
04A6A2             0348*  ; 4 	640 	240 	16 	    60hz
04A6A2             0349*  ; 5 	640 	240 	4 	    60hz
04A6A2             0350*  ; 6 	640 	240 	2 	    60hz
04A6A2             0351*  ; ** 7 	n/a 	n/a 	16 	    60hz
04A6A2             0352*  ; 8 	320 	240 	64 	    60hz
04A6A2             0353*  ; 9 	320 	240 	16 	    60hz
04A6A2             0354*  ; 10 	320 	240 	4 	    60hz
04A6A2             0355*  ; 11 	320 	240 	2 	    60hz
04A6A2             0356*  ; 12 	320 	200 	64 	    70hz
04A6A2             0357*  ; 13 	320 	200 	16 	    70hz
04A6A2             0358*  ; 14 	320 	200 	4 	    70hz
04A6A2             0359*  ; 15 	320 	200 	2 	    70hz
04A6A2             0360*  ; 16 	800 	600 	4 	    60hz
04A6A2             0361*  ; 17 	800 	600 	2 	    60hz
04A6A2             0362*  ; 18 	1024 	768 	2 	    60hz
04A6A2             0363*  ; 129 	640 	480 	4 	    60hz
04A6A2             0364*  ; 130 	640 	480 	2 	    60hz
04A6A2             0365*  ; 132 	640 	240 	16 	    60hz
04A6A2             0366*  ; 133 	640 	240 	4 	    60hz
04A6A2             0367*  ; 134 	640 	240 	2 	    60hz
04A6A2             0368*  ; 136 	320 	240 	64 	    60hz
04A6A2             0369*  ; 137 	320 	240 	16 	    60hz
04A6A2             0370*  ; 138 	320 	240 	4 	    60hz
04A6A2             0371*  ; 139 	320 	240 	2 	    60hz
04A6A2             0372*  ; 140 	320 	200 	64 	    70hz
04A6A2             0373*  ; 141 	320 	200 	16 	    70hz
04A6A2             0374*  ; 142 	320 	200 	4 	    70hz
04A6A2             0375*  ; 143 	320 	200 	2 	    70hz
04A6A2             0376*  ; * Mode 1 is the “default” mode, and is the mode that the system will use on startup.
04A6A2             0377*  ; It is also the mode that the system will fall back to use if it was not possible to
04A6A2             0378*  ; change to the requested mode.
04A6A2             0379*  ; ** Mode 7 is the “Teletext” mode, and essentially works in a very similar manner to
04A6A2             0380*  ; the BBC Micro’s Teletext mode, which was also mode 7.
04A6A2             0381*  vdu_set_screen_mode:
04A6A2 32 B2 A6 04 0382*  	ld (@arg),a
04A6A6 21 B1 A6 04 0383*  	ld hl,@cmd
04A6AA 01 02 00 00 0384*  	ld bc,@end-@cmd
04A6AE 5B DF       0385*  	rst.lil $18
04A6B0 C9          0386*  	ret
04A6B1 16          0387*  @cmd: db 22 ; set screen mode
04A6B2 00          0388*  @arg: db 0  ; screen mode parameter
04A6B3             0389*  @end:
04A6B3             0390*  
04A6B3             0391*  ; VDU 23, n: Re-program display character / System Commands
04A6B3             0392*  ; inputs: a, ascii code; hl, pointer to bitmask data
04A6B3             0393*  vdu_define_character:
04A6B3 32 CF A6 04 0394*  	ld (@ascii),a
04A6B7 11 D0 A6 04 0395*  	ld de,@data
04A6BB 06 08       0396*  	ld b,8 ; loop counter for 8 bytes of data
04A6BD             0397*  @loop:
04A6BD 7E          0398*  	ld a,(hl)
04A6BE 12          0399*  	ld (de),a
04A6BF 23          0400*  	inc hl
04A6C0 13          0401*  	inc de
04A6C1 10 FA       0402*  	djnz @loop
04A6C3 21 CE A6 04 0403*  	ld hl,@cmd
04A6C7 01 0A 00 00 0404*  	ld bc,@end-@cmd
04A6CB 5B DF       0405*  	rst.lil $18
04A6CD C9          0406*  	ret
04A6CE 17          0407*  @cmd:   db 23
04A6CF 00          0408*  @ascii: db 0
04A6D0             0409*  @data:  ds 8
04A6D8             0410*  @end:
04A6D8             0411*  
04A6D8             0412*  ; VDU 24, left; bottom; right; top;: Set graphics viewport
04A6D8             0413*  ; NOTE: the order of the y-coordinate parameters are inverted
04A6D8             0414*  ; 	because we have turned off logical screen scaling
04A6D8             0415*  ; inputs: bc=x0,de=y0,ix=x1,iy=y1
04A6D8             0416*  ; outputs; nothing
04A6D8             0417*  ; destroys: a might make it out alive
04A6D8             0418*  vdu_set_gfx_viewport:
04A6D8 ED 43 F8 A6 0419*      ld (@x0),bc
       04          
04A6DD FD 22 FA A6 0420*      ld (@y1),iy
       04          
04A6E2 DD 22 FC A6 0421*  	ld (@x1),ix
       04          
04A6E7 ED 53 FE A6 0422*  	ld (@y0),de
       04          
04A6EC 21 F7 A6 04 0423*  	ld hl,@cmd
04A6F0 01 09 00 00 0424*  	ld bc,@end-@cmd
04A6F4 5B DF       0425*  	rst.lil $18
04A6F6 C9          0426*  	ret
04A6F7 18          0427*  @cmd:   db 24 ; set graphics viewport command
04A6F8 00 00       0428*  @x0: 	dw 0x0000 ; set by bc
04A6FA 00 00       0429*  @y1: 	dw 0x0000 ; set by iy
04A6FC 00 00       0430*  @x1: 	dw 0x0000 ; set by ix
04A6FE 00 00       0431*  @y0: 	dw 0x0000 ; set by de
04A700 00          0432*  @end:   db 0x00	  ; padding
04A701             0433*  
04A701             0434*  ; VDU 25, mode, x; y;: PLOT command
04A701             0435*  ; Implemented in vdu_plot.asm
04A701             0436*  
04A701             0437*  ; VDU 26: Reset graphics and text viewports **
04A701             0438*  vdu_reset_txt_gfx_view:
04A701 3E 1A       0439*      ld a,26
04A703 5B D7       0440*  	rst.lil $10
04A705 C9          0441*  	ret
04A706             0442*  
04A706             0443*  ; PASSES
04A706             0444*  ; VDU 27, char: Output character to screen §
04A706             0445*  ; inputs: a is the ascii code of the character to draw
04A706             0446*  vdu_draw_char:
04A706 32 16 A7 04 0447*  	ld (@arg),a
04A70A 21 15 A7 04 0448*  	ld hl,@cmd
04A70E 01 02 00 00 0449*  	ld bc,@end-@cmd
04A712 5B DF       0450*  	rst.lil $18
04A714 C9          0451*  	ret
04A715 1B          0452*  @cmd: db 27
04A716 00          0453*  @arg: db 0  ; ascii code of character to draw
04A717             0454*  @end:
04A717             0455*  
04A717             0456*  ; VDU 28, left, bottom, right, top: Set text viewport **
04A717             0457*  ; MIND THE LITTLE-ENDIANESS
04A717             0458*  ; inputs: c=left,b=bottom,e=right,d=top
04A717             0459*  ; outputs; nothing
04A717             0460*  ; destroys: a might make it out alive
04A717             0461*  vdu_set_txt_viewport:
04A717 ED 43 2D A7 0462*      ld (@lb),bc
       04          
04A71C ED 53 2F A7 0463*  	ld (@rt),de
       04          
04A721 21 2C A7 04 0464*  	ld hl,@cmd
04A725 01 05 00 00 0465*  	ld bc,@end-@cmd
04A729 5B DF       0466*  	rst.lil $18
04A72B C9          0467*  	ret
04A72C 1C          0468*  @cmd:   db 28 ; set text viewport command
04A72D 00 00       0469*  @lb: 	dw 0x0000 ; set by bc
04A72F 00 00       0470*  @rt: 	dw 0x0000 ; set by de
04A731 00          0471*  @end:   db 0x00	  ; padding
04A732             0472*  
04A732             0473*  ; PASSES
04A732             0474*  ; VDU 29, x; y;: Set graphics origin
04A732             0475*  ; inputs: bc,de x,y coordinates
04A732             0476*  vdu_set_gfx_origin:
04A732 ED 43 48 A7 0477*      ld (@x0),bc
       04          
04A737 ED 53 4A A7 0478*      ld (@y0),de
       04          
04A73C 21 47 A7 04 0479*  	ld hl,@cmd
04A740 01 05 00 00 0480*  	ld bc,@end-@cmd
04A744 5B DF       0481*  	rst.lil $18
04A746 C9          0482*  	ret
04A747 1D          0483*  @cmd:	db 29
04A748 00 00       0484*  @x0: 	dw 0
04A74A 00 00       0485*  @y0: 	dw 0
04A74C 00          0486*  @end: 	db 0 ; padding
04A74D             0487*  
04A74D             0488*  ; PASSES
04A74D             0489*  ; VDU 30: Home cursor
04A74D             0490*  vdu_home_cursor:
04A74D 3E 1E       0491*      ld a,30
04A74F 5B D7       0492*  	rst.lil $10
04A751 C9          0493*  	ret
04A752             0494*  
04A752             0495*  ; PASSES
04A752             0496*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
04A752             0497*  ; inputs: c=x, b=y 8-bit unsigned integers
04A752             0498*  vdu_move_cursor:
04A752 ED 43 63 A7 0499*      ld (@x0),bc
       04          
04A757 21 62 A7 04 0500*  	ld hl,@cmd
04A75B 01 03 00 00 0501*  	ld bc,@end-@cmd
04A75F 5B DF       0502*  	rst.lil $18
04A761 C9          0503*  	ret
04A762 1F          0504*  @cmd: 	db 31
04A763 00          0505*  @x0:	db 0
04A764 00          0506*  @y0: 	db 0
04A765 00          0507*  @end: 	db 0 ; padding
04A766             0508*  
04A766             0509*  
04A766             0510*  ; VDU 127: Backspace
04A766             0511*  vdu_bksp:
04A766 3E 7F       0512*      ld a,127
04A768 5B D7       0513*  	rst.lil $10
04A76A C9          0514*  	ret
04A76B             0515*  
04A76B             0516*  ; activate a bitmap in preparation to draw it
04A76B             0517*  ; inputs: a holding the bitmap index
04A76B             0518*  vdu_bmp_select:
04A76B 32 7D A7 04 0519*  	ld (@bmp),a
04A76F 21 7A A7 04 0520*  	ld hl,@cmd
04A773 01 04 00 00 0521*  	ld bc,@end-@cmd
04A777 5B DF       0522*  	rst.lil $18
04A779 C9          0523*  	ret
04A77A 17 1B 00    0524*  @cmd: db 23,27,0
04A77D 00          0525*  @bmp: db 0
04A77E             0526*  @end:
04A77E             0527*  
04A77E             0528*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04A77E             0529*  ; inputs: hl=bufferId
04A77E             0530*  vdu_buff_select:
04A77E 22 90 A7 04 0531*  	ld (@bufferId),hl
04A782 21 8D A7 04 0532*  	ld hl,@cmd
04A786 01 05 00 00 0533*  	ld bc,@end-@cmd
04A78A 5B DF       0534*  	rst.lil $18
04A78C C9          0535*  	ret
04A78D 17 1B 20    0536*  @cmd: db 23,27,0x20
04A790 00 00       0537*  @bufferId: dw 0x0000
04A792 00          0538*  @end: db 0x00 ; padding
04A793             0539*  
04A793             0540*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer
04A793             0541*  ; inputs: a=format; bc=width; de=height
04A793             0542*  ; prerequisites: buffer selected by vdu_bmp_select or vdu_buff_select
04A793             0543*  ; formats: https://agonconsole8.github.io/agon-docs/VDP---Bitmaps-API.html
04A793             0544*  ; 0 	RGBA8888 (4-bytes per pixel)
04A793             0545*  ; 1 	RGBA2222 (1-bytes per pixel)
04A793             0546*  ; 2 	Mono/Mask (1-bit per pixel)
04A793             0547*  ; 3 	Reserved for internal use by VDP (“native” format)
04A793             0548*  vdu_bmp_create:
04A793 ED 43 AF A7 0549*      ld (@width),bc
       04          
04A798 ED 53 B1 A7 0550*      ld (@height),de
       04          
04A79D 32 B3 A7 04 0551*      ld (@fmt),a
04A7A1 21 AC A7 04 0552*  	ld hl,@cmd
04A7A5 01 08 00 00 0553*  	ld bc,@end-@cmd
04A7A9 5B DF       0554*  	rst.lil $18
04A7AB C9          0555*  	ret
04A7AC 17 1B 21    0556*  @cmd:       db 23,27,0x21
04A7AF 00 00       0557*  @width:     dw 0x0000
04A7B1 00 00       0558*  @height:    dw 0x0000
04A7B3 00          0559*  @fmt:       db 0x00
04A7B4             0560*  @end:
04A7B4             0561*  
04A7B4             0562*  ; Draw a bitmap on the screen
04A7B4             0563*  ; inputs: bc, x-coordinate; de, y-coordinate
04A7B4             0564*  ; prerequisite: bitmap index set by e.g. vdu_bmp_select
04A7B4             0565*  vdu_bmp_draw:
04A7B4 ED 43 CC A7 0566*      ld (@x0),bc
       04          
04A7B9 ED 53 CE A7 0567*      ld (@y0),de
       04          
04A7BE 21 C9 A7 04 0568*  	ld hl,@cmd
04A7C2 01 07 00 00 0569*  	ld bc,@end-@cmd
04A7C6 5B DF       0570*  	rst.lil $18
04A7C8 C9          0571*  	ret
04A7C9 17 1B 03    0572*  @cmd: db 23,27,3
04A7CC 00 00       0573*  @x0:  dw 0x0000
04A7CE 00 00       0574*  @y0:  dw 0x0000
04A7D0 00          0575*  @end: db 0x00 ; padding
04A7D1             0576*  
04A7D1             0577*  ; VDU 23, 0, &C0, n: Turn logical screen scaling on and off *
04A7D1             0578*  ; inputs: a is scaling mode, 1=on, 0=off
04A7D1             0579*  ; note: default setting on boot is scaling ON
04A7D1             0580*  vdu_set_scaling:
04A7D1 32 E3 A7 04 0581*  	ld (@arg),a
04A7D5 21 E0 A7 04 0582*  	ld hl,@cmd
04A7D9 01 04 00 00 0583*  	ld bc,@end-@cmd
04A7DD 5B DF       0584*  	rst.lil $18
04A7DF C9          0585*  	ret
04A7E0 17 00 C0    0586*  @cmd: db 23,0,0xC0
04A7E3 00          0587*  @arg: db 0  ; scaling on/off
04A7E4             0588*  @end:
04A7E4             0589*  
04A7E4             0590*  ; VDU 23, 0, &C3: Swap the screen buffer and/or wait for VSYNC **
04A7E4             0591*  ; 	Swap the screen buffer (double-buffered modes only) or wait for VSYNC
04A7E4             0592*  ; 	(all modes).
04A7E4             0593*  
04A7E4             0594*  ; 	This command will swap the screen buffer, if the current screen mode
04A7E4             0595*  ; 	is double-buffered, doing so at the next VSYNC. If the current screen
04A7E4             0596*  ; 	mode is not double-buffered then this command will wait for the next
04A7E4             0597*  ; 	VSYNC signal before returning. This can be used to synchronise the
04A7E4             0598*  ; 	screen with the vertical refresh rate of the monitor.
04A7E4             0599*  
04A7E4             0600*  ; 	Waiting for VSYNC can be useful for ensuring smooth graphical animation,
04A7E4             0601*  ; 	as it will prevent tearing of the screen.
04A7E4             0602*  ; inputs: none
04A7E4             0603*  ; outputs: none
04A7E4             0604*  ; destroys: hl, bc
04A7E4             0605*  vdu_flip:
04A7E4 21 EF A7 04 0606*  	ld hl,@cmd
04A7E8 01 03 00 00 0607*  	ld bc,@end-@cmd
04A7EC 5B DF       0608*  	rst.lil $18
04A7EE C9          0609*  	ret
04A7EF 17 00 C3    0610*  @cmd: db 23,0,0xC3
04A7F2             0611*  @end:
04A7F2             0612*  
04A7F2             0613*  ; Command 64: Compress a buffer
04A7F2             0614*  ; VDU 23, 0, &A0, targetBufferId; 64, sourceBufferId;
04A7F2             0615*  ; This command will compress the contents of a buffer, replacing the target buffer with the compressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04A7F2             0616*  
04A7F2             0617*  
04A7F2             0618*  ; Command 65: Decompress a buffer
04A7F2             0619*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
04A7F2             0620*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04A7F2             0621*  ; inputs: hl=sourceBufferId/targetBufferId
04A7F2             0622*  vdu_decompress_buffer:
04A7F2 22 0E A8 04 0623*  	ld (@targetBufferId),hl
04A7F6 22 11 A8 04 0624*  	ld (@sourceBufferId),hl
04A7FA 3E 41       0625*  	ld a,65
04A7FC 32 10 A8 04 0626*  	ld (@cmd1),a ; restore the part of command that got stomped on
04A800 21 0B A8 04 0627*  	ld hl,@cmd
04A804 01 08 00 00 0628*  	ld bc,@end-@cmd
04A808 5B DF       0629*  	rst.lil $18
04A80A C9          0630*  	ret
04A80B 17 00 A0    0631*  @cmd: 	db 23,0,0xA0
04A80E 00 00       0632*  @targetBufferId: dw 0x0000
04A810 41          0633*  @cmd1:	db 65
04A811 00 00       0634*  @sourceBufferId: dw 0x0000
04A813 00          0635*  @end: 	db 0x00 ; padding
04A814             0636*  
04A814             0637*  ; Command 65: Decompress a buffer
04A814             0638*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
04A814             0639*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04A814             0640*  ; inputs: hl=sourceBufferId/targetBufferId
04A814             0641*  ; 0x7FFF for the source buffer is just an easy-to remember aribtrary value
04A814             0642*  vdu_decompress_buffer_different:
04A814 22 34 A8 04 0643*  	ld (@targetBufferId),hl
04A818 21 FF 7F 00 0644*      ld hl,0x7FFF
04A81C 22 37 A8 04 0645*  	ld (@sourceBufferId),hl
04A820 3E 41       0646*  	ld a,65
04A822 32 36 A8 04 0647*  	ld (@cmd1),a ; restore the part of command that got stomped on
04A826 21 31 A8 04 0648*  	ld hl,@cmd
04A82A 01 08 00 00 0649*  	ld bc,@end-@cmd
04A82E 5B DF       0650*  	rst.lil $18
04A830 C9          0651*  	ret
04A831 17 00 A0    0652*  @cmd: 	db 23,0,0xA0
04A834 00 00       0653*  @targetBufferId: dw 0x0000
04A836 41          0654*  @cmd1:	db 65
04A837 00 00       0655*  @sourceBufferId: dw 0x0000
04A839 00          0656*  @end: 	db 0x00 ; padding
04A83A             0657*  
04A83A             0658*  ; #### from vdp.asm ####
04A83A             0659*  
04A83A             0660*  ; https://github.com/breakintoprogram/agon-docs/wiki/VDP
04A83A             0661*  ; VDU 23, 7: Scrolling
04A83A             0662*  ;     VDU 23, 7, extent, direction, speed: Scroll the screen
04A83A             0663*  ; inputs: a, extent; l, direction; h; speed
04A83A             0664*  vdu_scroll_down:
04A83A 32 4F A8 04 0665*  	ld (@extent),a
04A83E 22 50 A8 04 0666*  	ld (@dir),hl ; implicitly populates @speed
04A842 21 4D A8 04 0667*  	ld hl,@cmd
04A846 01 05 00 00 0668*  	ld bc,@end-@cmd
04A84A 5B DF       0669*  	rst.lil $18     ;; Sending command to VDP
04A84C C9          0670*  	ret
04A84D 17 07       0671*  @cmd:       db 23,7
04A84F 00          0672*  @extent:    db 0x00 ; 0 current text window, 1 entire screen, 2 curr gfx viewport
04A850 00          0673*  @dir:       db 0x00 ; 0 right, 1 left, 2 down, 3 up
04A851 00          0674*  @speed:     db 0x00 ; pixels
04A852 00          0675*  @end:		db 0x00 ; padding
04A853             0676*  
04A853             0677*  cursor_on:
04A853 21 5E A8 04 0678*  	ld hl,@cmd
04A857 01 03 00 00 0679*  	ld bc,@end-@cmd
04A85B 5B DF       0680*  	rst.lil $18
04A85D C9          0681*  	ret
04A85E             0682*  @cmd:
04A85E 17 01 01    0683*  	db 23,1,1
04A861             0684*  @end:
04A861             0685*  
04A861             0686*  cursor_off:
04A861 21 6C A8 04 0687*  	ld hl,@cmd
04A865 01 03 00 00 0688*  	ld bc,@end-@cmd
04A869 5B DF       0689*  	rst.lil $18
04A86B C9          0690*  	ret
04A86C             0691*  @cmd:
04A86C 17 01 00    0692*  	db 23,1,0
04A86F             0693*  @end:
04A86F             0694*  
04A86F DD E5       0695*  vdu_vblank:		PUSH 	IX			; Wait for VBLANK interrupt
04A871             0696*  			MOSCALL	mos_sysvars		; Fetch pointer to system variables
04A871 3E 08       0001*M 			LD	A, function
04A873 5B CF       0002*M 			RST.LIL	08h
04A875 DD 7E 00    0697*  			LD	A, (IX + sysvar_time + 0)
04A878 DD BE 00    0698*  @wait:			CP 	A, (IX + sysvar_time + 0)
04A87B 28 FB       0699*  			JR	Z, @wait
04A87D DD E1       0700*  			POP	IX
04A87F C9          0701*  			RET
04A880             0702*  
04A880             0703*  ; #### from vdu_bmp.asm ####
04A880             0704*  ; =========================================================================
04A880             0705*  ; Bitmaps
04A880             0706*  ; -------------------------------------------------------------------------
04A880             0707*  ; VDU 23, 27, 0, n: Select bitmap n
04A880             0708*  ; VDU 23, 27, &20, bufferId;: Select bitmap using a 16-bit buffer ID *
04A880             0709*  ; VDU 23, 27, 1, w; h; b1, b2 ... bn: Load colour bitmap data into current bitmap
04A880             0710*  
04A880             0711*  ; VDU 23, 27, 1, n, 0, 0;: Capture screen data into bitmap n *
04A880             0712*  ; VDU 23, 27, &21, bitmapId; 0; : same, but to 16-bit buffer ID *
04A880             0713*  ; Any PLOT, or VDU 25, style command will push the graphics cursor position -
04A880             0714*  ; typically "move" style plot commands are used to define the rectangle.
04A880             0715*  ; To be clear, this command should be performed after two "move" style PLOT commands.
04A880             0716*  ; inputs: hl; target bufferId
04A880             0717*  ; all the following are in 16.8 fixed point format
04A880             0718*  ;   ub.c; top-left x coordinate
04A880             0719*  ;   ud.e; top-left y coordinate
04A880             0720*  ;   ui.x; width
04A880             0721*  ;   ui.y; height
04A880             0722*  vdu_buff_screen_capture168:
04A880 ED 53 B7 A8 0723*          ld (@y0-1),de
       04          
04A885 ED 43 B5 A8 0724*          ld (@x0-1),bc
       04          
04A88A 3E 44       0725*          ld a,0x44 ; plot_pt+mv_abs
04A88C 32 B5 A8 04 0726*          ld (@x0-1),a
04A890             0727*  
04A890 DD 22 BC A8 0728*          ld (@x1),ix
       04          
04A895 FD 22 BE A8 0729*          ld (@y1),iy
       04          
04A89A 3E 17       0730*          ld a,23
04A89C 32 C0 A8 04 0731*          ld (@y1+2),a
04A8A0             0732*  
04A8A0 22 C3 A8 04 0733*          ld (@bufId),hl
04A8A4 AF          0734*          xor a
04A8A5 32 C5 A8 04 0735*          ld (@bufId+2),a
04A8A9             0736*  
04A8A9 21 B4 A8 04 0737*          ld hl,@begin
04A8AD 01 13 00 00 0738*          ld bc,@end-@begin
04A8B1 5B DF       0739*          rst.lil $18
04A8B3 C9          0740*          ret
04A8B4             0741*  @begin:
04A8B4             0742*  ; absolute move gfx cursor to top-left screen coordinate
04A8B4             0743*  ; VDU 25, mode, x; y;: PLOT command
04A8B4 19 44       0744*          db 25,0x44 ; plot_pt+mv_abs
04A8B6 40 00       0745*  @x0: 	dw 64
04A8B8 40 00       0746*  @y0: 	dw 64
04A8BA             0747*  ; relative move gfx cursor to bottom-right screen coordinate
04A8BA             0748*  ; VDU 25, mode, x; y;: PLOT command
04A8BA 19 40       0749*          db 25,0x40 ; plot_pt+mv_rel
04A8BC 0F 00       0750*  @x1: 	dw 15
04A8BE 0F 00       0751*  @y1: 	dw 15
04A8C0             0752*  ; now the main event
04A8C0             0753*  ; VDU 23, 27, &21, bitmapId; 0;
04A8C0 17 1B 21    0754*          db 23,27,0x21
04A8C3 00 20 00 00 0755*  @bufId: dw 0x2000,0x0000
04A8C7             0756*  @end: ; no padding required
04A8C7             0757*  
04A8C7             0758*  vdu_buff_screen_capture_full:
04A8C7 21 D2 A8 04 0759*          ld hl,@begin
04A8CB 01 13 00 00 0760*          ld bc,@end-@begin
04A8CF 5B DF       0761*          rst.lil $18
04A8D1 C9          0762*          ret
04A8D2             0763*  @begin:
04A8D2             0764*  ; absolute move gfx cursor to top-left screen coordinate
04A8D2             0765*  ; VDU 25, mode, x; y;: PLOT command
04A8D2 19 44       0766*          db 25,0x44 ; plot_pt+mv_abs
04A8D4 00 00       0767*  @x0: 	dw 0
04A8D6 00 00       0768*  @y0: 	dw 0
04A8D8             0769*  ; relative move gfx cursor to bottom-right screen coordinate
04A8D8             0770*  ; VDU 25, mode, x; y;: PLOT command
04A8D8 19 40       0771*          db 25,0x40 ; plot_pt+mv_rel
04A8DA 3F 01       0772*  @x1: 	dw 319
04A8DC EF 00       0773*  @y1: 	dw 239
04A8DE             0774*  ; now the main event
04A8DE             0775*  ; VDU 23, 27, &21, bitmapId; 0;
04A8DE 17 1B 21    0776*          db 23,27,0x21
04A8E1 00 20 00 00 0777*  @bufId: dw 0x2000,0x0000
04A8E5             0778*  @end: ; no padding required
04A8E5             0779*  
04A8E5             0780*  vdu_buff_screen_paste_full:
04A8E5 21 F0 A8 04 0781*          ld hl,@begin
04A8E9 01 0B 00 00 0782*          ld bc,@end-@begin
04A8ED 5B DF       0783*          rst.lil $18
04A8EF C9          0784*          ret
04A8F0             0785*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04A8F0 17 1B 20    0786*  @begin:    db 23,27,0x20
04A8F3 00 20       0787*  @bufferId: dw 0x2000
04A8F5             0788*  ; VDU 25, mode, x; y;: PLOT command
04A8F5 19 ED       0789*             db 25,0xED ; plot_bmp+dr_abs_fg
04A8F7 00 00 00 00 0790*             dw 0x0000,0x0000
04A8FB             0791*  @end: ; no padding required
04A8FB             0792*  
04A8FB             0793*  vdu_buff_screen_capture_tiles:
04A8FB 21 06 A9 04 0794*          ld hl,@begin
04A8FF 01 13 00 00 0795*          ld bc,@end-@begin
04A903 5B DF       0796*          rst.lil $18
04A905 C9          0797*          ret
04A906             0798*  @begin:
04A906             0799*  ; absolute move gfx cursor to top-left screen coordinate
04A906             0800*  ; VDU 25, mode, x; y;: PLOT command
04A906 19 44       0801*          db 25,0x44 ; plot_pt+mv_abs
04A908 00 00       0802*  @x0: 	dw 0
04A90A 00 00       0803*  @y0: 	dw 0
04A90C             0804*  ; relative move gfx cursor to bottom-right screen coordinate
04A90C             0805*  ; VDU 25, mode, x; y;: PLOT command
04A90C 19 40       0806*          db 25,0x40 ; plot_pt+mv_rel
04A90E FF 00       0807*  @x1: 	dw 319-64
04A910 EF 00       0808*  @y1: 	dw 239
04A912             0809*  ; now the main event
04A912             0810*  ; VDU 23, 27, &21, bitmapId; 0;
04A912 17 1B 21    0811*          db 23,27,0x21
04A915 00 20 00 00 0812*  @bufId: dw 0x2000,0x0000
04A919             0813*  @end: ; no padding required
04A919             0814*  
04A919             0815*  vdu_buff_screen_paste_tiles:
04A919 21 24 A9 04 0816*          ld hl,@begin
04A91D 01 0B 00 00 0817*          ld bc,@end-@begin
04A921 5B DF       0818*          rst.lil $18
04A923 C9          0819*          ret
04A924             0820*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04A924 17 1B 20    0821*  @begin:    db 23,27,0x20
04A927 00 20       0822*  @bufferId: dw 0x2000
04A929             0823*  ; VDU 25, mode, x; y;: PLOT command
04A929 19 ED       0824*             db 25,0xED ; plot_bmp+dr_abs_fg
04A92B 00 00 01 00 0825*             dw 0x0000,0x0001
04A92F             0826*  @end: ; no padding required
04A92F             0827*  
04A92F             0828*  ; VDU 23, 27, 2, w; h; col1; col2;: Create a solid colour rectangular bitmap
04A92F             0829*  ; VDU 23, 27, 3, x; y;: Draw current bitmap on screen at pixel position x, y
04A92F             0830*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer *
04A92F             0831*  ; Value	Meaning
04A92F             0832*  ; 0	RGBA8888 (4-bytes per pixel)
04A92F             0833*  ; 1	RGBA2222 (1-bytes per pixel)
04A92F             0834*  ; 2	Mono/Mask (1-bit per pixel)
04A92F             0835*  ; 3	Reserved for internal use by VDP ("native" format)VDP.
04A92F             0836*  ;     They have some significant limitations, and are not intended for general use.
04A92F             0837*  
04A92F             0838*  ; =========================================================================
04A92F             0839*  ; Sprites
04A92F             0840*  ; -------------------------------------------------------------------------
04A92F             0841*  ; VDU 23, 27, 4, n: Select sprite n
04A92F             0842*  ; VDU 23, 27, 5: Clear frames in current sprite
04A92F             0843*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04A92F             0844*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
04A92F             0845*  ; VDU 23, 27, 7, n: Activate n sprites
04A92F             0846*  ; VDU 23, 27, 8: Select next frame of current sprite
04A92F             0847*  ; VDU 23, 27, 9: Select previous frame of current sprite
04A92F             0848*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04A92F             0849*  ; VDU 23, 27, 11: Show current sprite
04A92F             0850*  ; VDU 23, 27, 12: Hide current sprite
04A92F             0851*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04A92F             0852*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04A92F             0853*  ; VDU 23, 27, 15: Update the sprites in the GPU
04A92F             0854*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04A92F             0855*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04A92F             0856*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04A92F             0857*  
04A92F             0858*  ; =========================================================================
04A92F             0859*  ; Mouse cursor
04A92F             0860*  ; -------------------------------------------------------------------------
04A92F             0861*  ; VDU 23, 27, &40, hotX, hotY: Setup a mouse cursor with a hot spot at hotX, hotY
04A92F             0862*  
04A92F             0863*  ; #### from vdu_plot.asm ####
04A92F             0864*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04A92F             0865*  ; PLOT code 	(Decimal) 	Effect
04A92F             0866*  ; &00-&07 	0-7 	Solid line, includes both ends
04A92F             0867*  plot_sl_both: equ 0x00
04A92F             0868*  
04A92F             0869*  ; &08-&0F 	8-15 	Solid line, final point omitted
04A92F             0870*  plot_sl_first: equ 0x08
04A92F             0871*  
04A92F             0872*  ; &10-&17 	16-23 	Not supported (Dot-dash line, includes both ends, pattern restarted)
04A92F             0873*  ; &18-&1F 	24-31 	Not supported (Dot-dash line, first point omitted, pattern restarted)
04A92F             0874*  
04A92F             0875*  ; &20-&27 	32-39 	Solid line, first point omitted
04A92F             0876*  plot_sl_last: equ 0x20
04A92F             0877*  
04A92F             0878*  ; &28-&2F 	40-47 	Solid line, both points omitted
04A92F             0879*  plot_sl_none: equ 0x28
04A92F             0880*  
04A92F             0881*  ; &30-&37 	48-55 	Not supported (Dot-dash line, first point omitted, pattern continued)
04A92F             0882*  ; &38-&3F 	56-63 	Not supported (Dot-dash line, both points omitted, pattern continued)
04A92F             0883*  
04A92F             0884*  ; &40-&47 	64-71 	Point plot
04A92F             0885*  plot_pt: equ 0x40
04A92F             0886*  
04A92F             0887*  ; &48-&4F 	72-79 	Line fill left and right to non-background §§
04A92F             0888*  plot_lf_lr_non_bg: equ 0x48
04A92F             0889*  
04A92F             0890*  ; &50-&57 	80-87 	Triangle fill
04A92F             0891*  plot_tf: equ 0x50
04A92F             0892*  
04A92F             0893*  ; &58-&5F 	88-95 	Line fill right to background §§
04A92F             0894*  plot_lf_r_bg: equ 0x58
04A92F             0895*  
04A92F             0896*  ; &60-&67 	96-103 	Rectangle fill
04A92F             0897*  plot_rf: equ 0x60
04A92F             0898*  
04A92F             0899*  ; &68-&6F 	104-111 	Line fill left and right to foreground §§
04A92F             0900*  plot_lf_lr_fg: equ 0x60
04A92F             0901*  
04A92F             0902*  ; &70-&77 	112-119 	Parallelogram fill
04A92F             0903*  plot_pf: equ 0x70
04A92F             0904*  
04A92F             0905*  ; &78-&7F 	120-127 	Line fill right to non-foreground §§
04A92F             0906*  plot_lf_r_non_fg: equ 0x78
04A92F             0907*  
04A92F             0908*  ; &80-&87 	128-135 	Not supported (Flood until non-background)
04A92F             0909*  ; &88-&8F 	136-143 	Not supported (Flood until foreground)
04A92F             0910*  
04A92F             0911*  ; &90-&97 	144-151 	Circle outline
04A92F             0912*  plot_co: equ 0x90
04A92F             0913*  
04A92F             0914*  ; &98-&9F 	152-159 	Circle fill
04A92F             0915*  plot_cf: equ 0x98
04A92F             0916*  
04A92F             0917*  ; &A0-&A7 	160-167 	Not supported (Circular arc)
04A92F             0918*  ; &A8-&AF 	168-175 	Not supported (Circular segment)
04A92F             0919*  ; &B0-&B7 	176-183 	Not supported (Circular sector)
04A92F             0920*  
04A92F             0921*  ; &B8-&BF 	184-191 	Rectangle copy/move
04A92F             0922*  plot_rcm: equ 0xB8
04A92F             0923*  
04A92F             0924*  ; &C0-&C7 	192-199 	Not supported (Ellipse outline)
04A92F             0925*  ; &C8-&CF 	200-207 	Not supported (Ellipse fill)
04A92F             0926*  ; &D0-&D7 	208-215 	Not defined
04A92F             0927*  ; &D8-&DF 	216-223 	Not defined
04A92F             0928*  ; &E0-&E7 	224-231 	Not defined
04A92F             0929*  
04A92F             0930*  ; &E8-&EF 	232-239 	Bitmap plot §
04A92F             0931*  plot_bmp: equ 0xE8
04A92F             0932*  
04A92F             0933*  ; &F0-&F7 	240-247 	Not defined
04A92F             0934*  ; &F8-&FF 	248-255 	Not defined
04A92F             0935*  
04A92F             0936*  ; § Support added in Agon Console8 VDP 2.1.0 §§ Support added in
04A92F             0937*  ; Agon Console8 VDP 2.2.0
04A92F             0938*  
04A92F             0939*  ; Within each group of eight plot codes, the effects are as follows:
04A92F             0940*  ; Plot code 	Effect
04A92F             0941*  ; 0 	Move relative
04A92F             0942*  mv_rel: equ 0
04A92F             0943*  
04A92F             0944*  ; 1 	Plot relative in current foreground colour
04A92F             0945*  dr_rel_fg: equ 1
04A92F             0946*  
04A92F             0947*  ; 2 	Not supported (Plot relative in logical inverse colour)
04A92F             0948*  ; 3 	Plot relative in current background colour
04A92F             0949*  dr_rel_bg: equ 3
04A92F             0950*  
04A92F             0951*  ; 4 	Move absolute
04A92F             0952*  mv_abs: equ 4
04A92F             0953*  
04A92F             0954*  ; 5 	Plot absolute in current foreground colour
04A92F             0955*  dr_abs_fg: equ 5
04A92F             0956*  
04A92F             0957*  ; 6 	Not supported (Plot absolute in logical inverse colour)
04A92F             0958*  ; 7 	Plot absolute in current background colour
04A92F             0959*  dr_abs_bg: equ 7
04A92F             0960*  
04A92F             0961*  ; Codes 0-3 use the position data provided as part of the command
04A92F             0962*  ; as a relative position, adding the position given to the current
04A92F             0963*  ; graphical cursor position. Codes 4-7 use the position data provided
04A92F             0964*  ; as part of the command as an absolute position, setting the current
04A92F             0965*  ; graphical cursor position to the position given.
04A92F             0966*  
04A92F             0967*  ; Codes 2 and 6 on Acorn systems plot using a logical inverse of the
04A92F             0968*  ; current pixel colour. These operations cannot currently be supported
04A92F             0969*  ; by the graphics system the Agon VDP uses, so these codes are not
04A92F             0970*  ; supported. Support for these codes may be added in a future version
04A92F             0971*  ; of the VDP firmware.
04A92F             0972*  
04A92F             0973*  ; 16 colour palette constants
04A92F             0974*  c_black: equ 0
04A92F             0975*  c_red_dk: equ 1
04A92F             0976*  c_green_dk: equ 2
04A92F             0977*  c_yellow_dk: equ 3
04A92F             0978*  c_blue_dk: equ 4
04A92F             0979*  c_magenta_dk: equ 5
04A92F             0980*  c_cyan_dk: equ 6
04A92F             0981*  c_grey: equ 7
04A92F             0982*  c_grey_dk: equ 8
04A92F             0983*  c_red: equ 9
04A92F             0984*  c_green: equ 10
04A92F             0985*  c_yellow: equ 11
04A92F             0986*  c_blue: equ 12
04A92F             0987*  c_magenta: equ 13
04A92F             0988*  c_cyan: equ 14
04A92F             0989*  c_white: equ 15
04A92F             0990*  
04A92F             0991*  ; VDU 25, mode, x; y;: PLOT command
04A92F             0992*  ; inputs: a=mode, bc=x0, de=y0
04A92F             0993*  vdu_plot:
04A92F 32 49 A9 04 0994*      ld (@mode),a
04A933 ED 43 4A A9 0995*      ld (@x0),bc
       04          
04A938 ED 53 4C A9 0996*      ld (@y0),de
       04          
04A93D 21 48 A9 04 0997*  	ld hl,@cmd
04A941 01 06 00 00 0998*  	ld bc,@end-@cmd
04A945 5B DF       0999*  	rst.lil $18
04A947 C9          1000*  	ret
04A948 19          1001*  @cmd:   db 25
04A949 00          1002*  @mode:  db 0
04A94A 00 00       1003*  @x0: 	dw 0
04A94C 00 00       1004*  @y0: 	dw 0
04A94E 00          1005*  @end:   db 0 ; extra byte to soak up deu
04A94F             1006*  
04A94F             1007*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04A94F             1008*  ; &E8-&EF 	232-239 	Bitmap plot §
04A94F             1009*  ; VDU 25, mode, x; y;: PLOT command
04A94F             1010*  ; inputs: bc=x0, de=y0
04A94F             1011*  ; prerequisites: vdu_buff_select
04A94F             1012*  vdu_plot_bmp:
04A94F ED 43 66 A9 1013*      ld (@x0),bc
       04          
04A954 ED 53 68 A9 1014*      ld (@y0),de
       04          
04A959 21 64 A9 04 1015*  	ld hl,@cmd
04A95D 01 06 00 00 1016*  	ld bc,@end-@cmd
04A961 5B DF       1017*  	rst.lil $18
04A963 C9          1018*  	ret
04A964 19          1019*  @cmd:   db 25
04A965 ED          1020*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04A966 00 00       1021*  @x0: 	dw 0x0000
04A968 00 00       1022*  @y0: 	dw 0x0000
04A96A 00          1023*  @end:   db 0x00 ; padding
04A96B             1024*  
04A96B             1025*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04A96B             1026*  ; &E8-&EF 	232-239 	Bitmap plot §
04A96B             1027*  ; VDU 25, mode, x; y;: PLOT command
04A96B             1028*  ; inputs: bc=x0, de=y0
04A96B             1029*  ; USING 16.8 FIXED POINT COORDINATES
04A96B             1030*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04A96B             1031*  ;   the fractional portiion of the inputs are truncated
04A96B             1032*  ;   leaving only the 16-bit integer portion
04A96B             1033*  ; prerequisites: vdu_buff_select
04A96B             1034*  vdu_plot_bmp168:
04A96B             1035*  ; populate in the reverse of normal to keep the
04A96B             1036*  ; inputs from stomping on each other
04A96B ED 53 89 A9 1037*      ld (@y0-1),de
       04          
04A970 ED 43 87 A9 1038*      ld (@x0-1),bc
       04          
04A975 3E ED       1039*      ld a,plot_bmp+dr_abs_fg ; 0xED
04A977 32 87 A9 04 1040*      ld (@mode),a ; restore the mode byte that got stomped on by bcu
04A97B 21 86 A9 04 1041*  	ld hl,@cmd
04A97F 01 06 00 00 1042*  	ld bc,@end-@cmd
04A983 5B DF       1043*  	rst.lil $18
04A985 C9          1044*  	ret
04A986 19          1045*  @cmd:   db 25
04A987 ED          1046*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04A988 00 00       1047*  @x0: 	dw 0x0000
04A98A 00 00       1048*  @y0: 	dw 0x0000
04A98C             1049*  @end:  ; no padding required b/c we shifted de right
04A98C             1050*  
04A98C             1051*  ; draw a filled rectangle
04A98C             1052*  vdu_plot_rf:
04A98C ED 43 B3 A9 1053*      ld (@x0),bc
       04          
04A991 ED 53 B5 A9 1054*      ld (@y0),de
       04          
04A996 DD 22 B9 A9 1055*      ld (@x1),ix
       04          
04A99B FD 22 BB A9 1056*      ld (@y1),iy
       04          
04A9A0 3E 19       1057*      ld a,25 ; we have to reload the 2nd plot command
04A9A2 32 B7 A9 04 1058*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
04A9A6 21 B1 A9 04 1059*  	ld hl,@cmd0
04A9AA 01 0C 00 00 1060*  	ld bc,@end-@cmd0
04A9AE 5B DF       1061*  	rst.lil $18
04A9B0 C9          1062*      ret
04A9B1 19          1063*  @cmd0:  db 25 ; plot
04A9B2 04          1064*  @arg0:  db plot_sl_both+mv_abs
04A9B3 00 00       1065*  @x0:    dw 0x0000
04A9B5 00 00       1066*  @y0:    dw 0x0000
04A9B7 19          1067*  @cmd1:  db 25 ; plot
04A9B8 65          1068*  @arg1:  db plot_rf+dr_abs_fg
04A9B9 00 00       1069*  @x1:    dw 0x0000
04A9BB 00 00       1070*  @y1:    dw 0x0000
04A9BD 00          1071*  @end:   db 0x00 ; padding
04A9BE             1072*  
04A9BE             1073*  ; draw a filled circle
04A9BE             1074*  vdu_plot_cf:
04A9BE ED 43 E5 A9 1075*      ld (@x0),bc
       04          
04A9C3 ED 53 E7 A9 1076*      ld (@y0),de
       04          
04A9C8 DD 22 EB A9 1077*      ld (@x1),ix
       04          
04A9CD FD 22 ED A9 1078*      ld (@y1),iy
       04          
04A9D2 3E 19       1079*      ld a,25 ; we have to reload the 2nd plot command
04A9D4 32 E9 A9 04 1080*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
04A9D8 21 E3 A9 04 1081*  	ld hl,@cmd0
04A9DC 01 0C 00 00 1082*  	ld bc,@end-@cmd0
04A9E0 5B DF       1083*  	rst.lil $18
04A9E2 C9          1084*      ret
04A9E3 19          1085*  @cmd0:  db 25 ; plot
04A9E4 04          1086*  @arg0:  db plot_sl_both+mv_abs
04A9E5 00 00       1087*  @x0:    dw 0x0000
04A9E7 00 00       1088*  @y0:    dw 0x0000
04A9E9 19          1089*  @cmd1:  db 25 ; plot
04A9EA 9D          1090*  @arg1:  db plot_cf+dr_abs_fg
04A9EB 00 00       1091*  @x1:    dw 0x0000
04A9ED 00 00       1092*  @y1:    dw 0x0000
04A9EF 00          1093*  @end:   db 0x00 ; padding
04A9F0             1094*  
04A9F0             1095*  ; #### from vdu_sprites.asm ####
04A9F0             1096*  ; ; https://github.com/AgonConsole8/agon-docs/blob/main/VDP---Bitmaps-API.md
04A9F0             1097*  ; the VDP can support up to 256 sprites. They must be defined
04A9F0             1098*  ; contiguously, and so the first sprite is sprite 0.
04A9F0             1099*  ; (In contrast, bitmaps can have any ID from 0 to 65534.)
04A9F0             1100*  ; Once a selection of sprites have been defined, you can activate
04A9F0             1101*  ; them using the VDU 23, 27, 7, n command, where n is the number
04A9F0             1102*  ; of sprites to activate. This will activate the first n sprites,
04A9F0             1103*  ; starting with sprite 0. All sprites from 0 to n-1 must be defined.
04A9F0             1104*  
04A9F0             1105*  ; A single sprite can have multiple "frames", referring to
04A9F0             1106*  ; different bitmaps.
04A9F0             1107*  ; (These bitmaps do not need to be the same size.)
04A9F0             1108*  ; This allows a sprite to include an animation sequence,
04A9F0             1109*  ; which can be stepped through one frame at a time, or picked
04A9F0             1110*  ; in any order.
04A9F0             1111*  
04A9F0             1112*  ; Any format of bitmap can be used as a sprite frame. It should
04A9F0             1113*  ; be noted however that "native" format bitmaps are not
04A9F0             1114*  ; recommended for use as sprite frames, as they cannot get
04A9F0             1115*  ; erased from the screen. (As noted above, the "native" bitmap
04A9F0             1116*  ; format is not really intended for general use.) This is part
04A9F0             1117*  ; of why from Agon Console8 VDP 2.6.0 bitmaps captured from the
04A9F0             1118*  ; screen are now stored in RGBA2222 format.
04A9F0             1119*  
04A9F0             1120*  ; An "active" sprite can be hidden, so it will stop being drawn,
04A9F0             1121*  ; and then later shown again.
04A9F0             1122*  
04A9F0             1123*  ; Moving sprites around the screen is done by changing the
04A9F0             1124*  ; position of the sprite. This can be done either by setting
04A9F0             1125*  ; the absolute position of the sprite, or by moving the sprite
04A9F0             1126*  ; by a given number of pixels. (Sprites are positioned using
04A9F0             1127*  ; pixel coordinates, and not by the logical OS coordinate system.)
04A9F0             1128*  ; In the current sprite system, sprites will not update their
04A9F0             1129*  ; position on-screen until either another drawing operation is
04A9F0             1130*  ; performed or an explicit VDU 23, 27, 15 command is performed.
04A9F0             1131*  
04A9F0             1132*  ; Here are the sprite commands:
04A9F0             1133*  ;
04A9F0             1134*  ; VDU 23, 27, 4,  n: Select sprite n
04A9F0             1135*  ; inputs: a is the 8-bit sprite id
04A9F0             1136*  ; vdu_sprite_select:
04A9F0             1137*  
04A9F0             1138*  ; VDU 23, 27, 5:  Clear frames in current sprite
04A9F0             1139*  ; inputs: none
04A9F0             1140*  ; prerequisites: vdu_sprite_select
04A9F0             1141*  ; vdu_sprite_clear_frames:
04A9F0             1142*  
04A9F0             1143*  ; VDU 23, 27, 6,  n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04A9F0             1144*  ; inputs: a is the 8-bit bitmap number
04A9F0             1145*  ; prerequisites: vdu_sprite_select
04A9F0             1146*  ; vdu_sprite_add_bmp:
04A9F0             1147*  
04A9F0             1148*  ; VDU 23, 27, 7,  n: Activate n sprites
04A9F0             1149*  ; inputs: a is the number of sprites to activate
04A9F0             1150*  ; vdu_sprite_activate:
04A9F0             1151*  
04A9F0             1152*  ; VDU 23, 27, 8:  Select next frame of current sprite
04A9F0             1153*  ; inputs: none
04A9F0             1154*  ; prerequisites: vdu_sprite_select
04A9F0             1155*  ; vdu_sprite_next_frame:
04A9F0             1156*  
04A9F0             1157*  ; VDU 23, 27, 9:  Select previous frame of current sprite
04A9F0             1158*  ; inputs: none
04A9F0             1159*  ; prerequisites: vdu_sprite_select
04A9F0             1160*  ; vdu_sprite_prev_frame:
04A9F0             1161*  
04A9F0             1162*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04A9F0             1163*  ; inputs: a is frame number to select
04A9F0             1164*  ; prerequisites: vdu_sprite_select
04A9F0             1165*  ; vdu_sprite_select_frame:
04A9F0             1166*  
04A9F0             1167*  ; VDU 23, 27, 11: Show current sprite
04A9F0             1168*  ; inputs: none
04A9F0             1169*  ; prerequisites: vdu_sprite_select
04A9F0             1170*  ; vdu_sprite_show:
04A9F0             1171*  
04A9F0             1172*  ; VDU 23, 27, 12: Hide current sprite
04A9F0             1173*  ; inputs: none
04A9F0             1174*  ; prerequisites: vdu_sprite_select
04A9F0             1175*  ; vdu_sprite_hide:
04A9F0             1176*  
04A9F0             1177*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04A9F0             1178*  ; inputs: bc is x coordinate, de is y coordinate
04A9F0             1179*  ; prerequisites: vdu_sprite_select
04A9F0             1180*  ; vdu_sprite_move_abs:
04A9F0             1181*  ;
04A9F0             1182*  ; USING 16.8 FIXED POINT COORDINATES
04A9F0             1183*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04A9F0             1184*  ;   the fractional portiion of the inputs are truncated
04A9F0             1185*  ;   leaving only the 16-bit integer portion
04A9F0             1186*  ; prerequisites: vdu_sprite_select
04A9F0             1187*  ; vdu_sprite_move_abs168:
04A9F0             1188*  
04A9F0             1189*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04A9F0             1190*  ; inputs: bc is x coordinate, de is y coordinate
04A9F0             1191*  ; prerequisites: vdu_sprite_select
04A9F0             1192*  ; vdu_sprite_move_rel:
04A9F0             1193*  ;
04A9F0             1194*  ; USING 16.8 FIXED POINT COORDINATES
04A9F0             1195*  ; inputs: ub.c is dx, ud.e is dy
04A9F0             1196*  ;   the fractional portiion of the inputs are truncated
04A9F0             1197*  ;   leaving only the 16-bit integer portion
04A9F0             1198*  ; prerequisites: vdu_sprite_select
04A9F0             1199*  ; vdu_sprite_move_rel168:
04A9F0             1200*  
04A9F0             1201*  ; VDU 23, 27, 15: Update the sprites in the GPU
04A9F0             1202*  ; inputs: none
04A9F0             1203*  ; vdu_sprite_update:
04A9F0             1204*  
04A9F0             1205*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04A9F0             1206*  ; inputs: none
04A9F0             1207*  ; vdu_sprite_bmp_reset:
04A9F0             1208*  
04A9F0             1209*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04A9F0             1210*  ; inputs: none
04A9F0             1211*  ; vdu_sprite_reset:
04A9F0             1212*  
04A9F0             1213*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04A9F0             1214*  ; inputs: a is the GCOL paint mode
04A9F0             1215*  ; prerequisites: vdu_sprite_select
04A9F0             1216*  ; vdu_sprite_set_gcol:
04A9F0             1217*  
04A9F0             1218*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
04A9F0             1219*  ; inputs: hl=bufferId
04A9F0             1220*  ; prerequisites: vdu_sprite_select
04A9F0             1221*  ; vdu_sprite_add_buff:
04A9F0             1222*  
04A9F0             1223*  @dummy_label: ; dummy label to serve as a break from the above comments and the below code
04A9F0             1224*  
04A9F0             1225*  ; VDU 23, 27, 4, n: Select sprite n
04A9F0             1226*  ; inputs: a is the 8-bit sprite id
04A9F0             1227*  vdu_sprite_select:
04A9F0 32 02 AA 04 1228*      ld (@sprite),a
04A9F4 21 FF A9 04 1229*      ld hl,@cmd
04A9F8 01 04 00 00 1230*      ld bc,@end-@cmd
04A9FC 5B DF       1231*      rst.lil $18
04A9FE C9          1232*      ret
04A9FF 17 1B 04    1233*  @cmd:    db 23,27,4
04AA02 00          1234*  @sprite: db 0x00
04AA03             1235*  @end:
04AA03             1236*  
04AA03             1237*  ; VDU 23, 27, 5: Clear frames in current sprite
04AA03             1238*  ; inputs: none
04AA03             1239*  ; prerequisites: vdu_sprite_select
04AA03             1240*  vdu_sprite_clear_frames:
04AA03 21 0E AA 04 1241*      ld hl,@cmd
04AA07 01 03 00 00 1242*      ld bc,@end-@cmd
04AA0B 5B DF       1243*      rst.lil $18
04AA0D C9          1244*      ret
04AA0E 17 1B 05    1245*  @cmd: db 23,27,5
04AA11             1246*  @end:
04AA11             1247*  
04AA11             1248*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04AA11             1249*  ; inputs: a is the 8-bit bitmap number
04AA11             1250*  ; prerequisites: vdu_sprite_select
04AA11             1251*  vdu_sprite_add_bmp:
04AA11 32 23 AA 04 1252*      ld (@bmp),a
04AA15 21 20 AA 04 1253*      ld hl,@cmd
04AA19 01 04 00 00 1254*      ld bc,@end-@cmd
04AA1D 5B DF       1255*      rst.lil $18
04AA1F C9          1256*      ret
04AA20 17 1B 06    1257*  @cmd: db 23,27,6
04AA23 00          1258*  @bmp: db 0x00
04AA24             1259*  @end:
04AA24             1260*  
04AA24             1261*  ; VDU 23, 27, 7, n: Activate n sprites
04AA24             1262*  ; inputs: a is the number of sprites to activate
04AA24             1263*  vdu_sprite_activate:
04AA24 32 36 AA 04 1264*      ld (@num),a
04AA28 21 33 AA 04 1265*      ld hl,@cmd
04AA2C 01 04 00 00 1266*      ld bc,@end-@cmd
04AA30 5B DF       1267*      rst.lil $18
04AA32 C9          1268*      ret
04AA33 17 1B 07    1269*  @cmd: db 23,27,7
04AA36 00          1270*  @num: db 0x00
04AA37             1271*  @end:
04AA37             1272*  
04AA37             1273*  ; VDU 23, 27, 8: Select next frame of current sprite
04AA37             1274*  ; inputs: none
04AA37             1275*  ; prerequisites: vdu_sprite_select
04AA37             1276*  vdu_sprite_next_frame:
04AA37 21 42 AA 04 1277*      ld hl,@cmd
04AA3B 01 03 00 00 1278*      ld bc,@end-@cmd
04AA3F 5B DF       1279*      rst.lil $18
04AA41 C9          1280*      ret
04AA42 17 1B 08    1281*  @cmd: db 23,27,8
04AA45             1282*  @end:
04AA45             1283*  
04AA45             1284*  ; VDU 23, 27, 9: Select previous frame of current sprite
04AA45             1285*  ; inputs: none
04AA45             1286*  ; prerequisites: vdu_sprite_select
04AA45             1287*  vdu_sprite_prev_frame:
04AA45 21 50 AA 04 1288*      ld hl,@cmd
04AA49 01 03 00 00 1289*      ld bc,@end-@cmd
04AA4D 5B DF       1290*      rst.lil $18
04AA4F C9          1291*      ret
04AA50 17 1B 09    1292*  @cmd: db 23,27,9
04AA53             1293*  @end:
04AA53             1294*  
04AA53             1295*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04AA53             1296*  ; inputs: a is frame number to select
04AA53             1297*  ; prerequisites: vdu_sprite_select
04AA53             1298*  vdu_sprite_select_frame:
04AA53 32 65 AA 04 1299*      ld (@frame),a
04AA57 21 62 AA 04 1300*      ld hl,@cmd
04AA5B 01 04 00 00 1301*      ld bc,@end-@cmd
04AA5F 5B DF       1302*      rst.lil $18
04AA61 C9          1303*      ret
04AA62 17 1B 0A    1304*  @cmd:    db 23,27,10
04AA65 00          1305*  @frame:  db 0x00
04AA66             1306*  @end:
04AA66             1307*  
04AA66             1308*  ; VDU 23, 27, 11: Show current sprite
04AA66             1309*  ; inputs: none
04AA66             1310*  ; prerequisites: vdu_sprite_select
04AA66             1311*  vdu_sprite_show:
04AA66 21 71 AA 04 1312*      ld hl,@cmd
04AA6A 01 03 00 00 1313*      ld bc,@end-@cmd
04AA6E 5B DF       1314*      rst.lil $18
04AA70 C9          1315*      ret
04AA71 17 1B 0B    1316*  @cmd: db 23,27,11
04AA74             1317*  @end:
04AA74             1318*  
04AA74             1319*  ; VDU 23, 27, 12: Hide current sprite
04AA74             1320*  ; inputs: none
04AA74             1321*  ; prerequisites: vdu_sprite_select
04AA74             1322*  vdu_sprite_hide:
04AA74 21 7F AA 04 1323*      ld hl,@cmd
04AA78 01 03 00 00 1324*      ld bc,@end-@cmd
04AA7C 5B DF       1325*      rst.lil $18
04AA7E C9          1326*      ret
04AA7F 17 1B 0C    1327*  @cmd: db 23,27,12
04AA82             1328*  @end:
04AA82             1329*  
04AA82             1330*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04AA82             1331*  ; inputs: bc is x coordinate, de is y coordinate
04AA82             1332*  ; prerequisites: vdu_sprite_select
04AA82             1333*  vdu_sprite_move_abs:
04AA82 ED 43 9A AA 1334*      ld (@xpos),bc
       04          
04AA87 ED 53 9C AA 1335*      ld (@ypos),de
       04          
04AA8C 21 97 AA 04 1336*      ld hl,@cmd
04AA90 01 07 00 00 1337*      ld bc,@end-@cmd
04AA94 5B DF       1338*      rst.lil $18
04AA96 C9          1339*      ret
04AA97 17 1B 0D    1340*  @cmd:  db 23,27,13
04AA9A 00 00       1341*  @xpos: dw 0x0000
04AA9C 00 00       1342*  @ypos: dw 0x0000
04AA9E 00          1343*  @end:  db 0x00 ; padding
04AA9F             1344*  
04AA9F             1345*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04AA9F             1346*  ; inputs: bc is x coordinate, de is y coordinate
04AA9F             1347*  ; prerequisites: vdu_sprite_select
04AA9F             1348*  vdu_sprite_move_rel:
04AA9F ED 43 B7 AA 1349*      ld (@dx),bc
       04          
04AAA4 ED 53 B9 AA 1350*      ld (@dy),de
       04          
04AAA9 21 B4 AA 04 1351*      ld hl,@cmd
04AAAD 01 07 00 00 1352*      ld bc,@end-@cmd
04AAB1 5B DF       1353*      rst.lil $18
04AAB3 C9          1354*      ret
04AAB4 17 1B 0E    1355*  @cmd: db 23,27,14
04AAB7 00 00       1356*  @dx:  dw 0x0000
04AAB9 00 00       1357*  @dy:  dw 0x0000
04AABB 00          1358*  @end: db 0x00 ; padding
04AABC             1359*  
04AABC             1360*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04AABC             1361*  ; USING 16.8 FIXED POINT COORDINATES
04AABC             1362*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04AABC             1363*  ;   the fractional portiion of the inputs are truncated
04AABC             1364*  ;   leaving only the 16-bit integer portion
04AABC             1365*  ; prerequisites: vdu_sprite_select
04AABC             1366*  vdu_sprite_move_abs168:
04AABC             1367*  ; populate in the reverse of normal to keep the
04AABC             1368*  ; inputs from stomping on each other
04AABC ED 53 DB AA 1369*      ld (@ypos-1),de
       04          
04AAC1 ED 43 D9 AA 1370*      ld (@xpos-1),bc
       04          
04AAC6 3E 0D       1371*      ld a,13       ; restore the final byte of the command
04AAC8 32 D9 AA 04 1372*      ld (@cmd+2),a ; string that got stomped on by bcu
04AACC 21 D7 AA 04 1373*      ld hl,@cmd
04AAD0 01 07 00 00 1374*      ld bc,@end-@cmd
04AAD4 5B DF       1375*      rst.lil $18
04AAD6 C9          1376*      ret
04AAD7 17 1B 0D    1377*  @cmd:  db 23,27,13
04AADA 00 00       1378*  @xpos: dw 0x0000
04AADC 00 00       1379*  @ypos: dw 0x0000
04AADE             1380*  @end:  ; no padding required b/c we shifted de right
04AADE             1381*  
04AADE             1382*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04AADE             1383*  ; USING 16.8 FIXED POINT COORDINATES
04AADE             1384*  ; inputs: ub.c is dx, ud.e is dy
04AADE             1385*  ;   the fractional portiion of the inputs are truncated
04AADE             1386*  ;   leaving only the 16-bit integer portion
04AADE             1387*  ; prerequisites: vdu_sprite_select
04AADE             1388*  vdu_sprite_move_rel168:
04AADE             1389*  ; populate in the reverse of normal to keep the
04AADE             1390*  ; inputs from stomping on each other
04AADE ED 53 FD AA 1391*      ld (@dy-1),de
       04          
04AAE3 ED 43 FB AA 1392*      ld (@dx-1),bc
       04          
04AAE8 3E 0E       1393*      ld a,14       ; restore the final byte of the command
04AAEA 32 FB AA 04 1394*      ld (@cmd+2),a ; string that got stomped on by bcu
04AAEE 21 F9 AA 04 1395*      ld hl,@cmd
04AAF2 01 07 00 00 1396*      ld bc,@end-@cmd
04AAF6 5B DF       1397*      rst.lil $18
04AAF8 C9          1398*      ret
04AAF9 17 1B 0E    1399*  @cmd:  db 23,27,14
04AAFC 00 00       1400*  @dx: dw 0x0000
04AAFE 00 00       1401*  @dy: dw 0x0000
04AB00             1402*  @end:  ; no padding required b/c we shifted de right
04AB00             1403*  
04AB00             1404*  ; VDU 23, 27, 15: Update the sprites in the GPU
04AB00             1405*  ; inputs: none
04AB00             1406*  vdu_sprite_update:
04AB00 21 0B AB 04 1407*      ld hl,@cmd
04AB04 01 03 00 00 1408*      ld bc,@end-@cmd
04AB08 5B DF       1409*      rst.lil $18
04AB0A C9          1410*      ret
04AB0B 17 1B 0F    1411*  @cmd: db 23,27,15
04AB0E             1412*  @end:
04AB0E             1413*  
04AB0E             1414*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04AB0E             1415*  ; inputs: none
04AB0E             1416*  vdu_sprite_bmp_reset:
04AB0E 21 19 AB 04 1417*      ld hl,@cmd
04AB12 01 03 00 00 1418*      ld bc,@end-@cmd
04AB16 5B DF       1419*      rst.lil $18
04AB18 C9          1420*      ret
04AB19 17 1B 10    1421*  @cmd: db 23,27,16
04AB1C             1422*  @end:
04AB1C             1423*  
04AB1C             1424*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04AB1C             1425*  ; inputs: none
04AB1C             1426*  vdu_sprite_reset:
04AB1C 21 27 AB 04 1427*      ld hl,@cmd
04AB20 01 03 00 00 1428*      ld bc,@end-@cmd
04AB24 5B DF       1429*      rst.lil $18
04AB26 C9          1430*      ret
04AB27 17 1B 11    1431*  @cmd: db 23,27,17
04AB2A             1432*  @end:
04AB2A             1433*  
04AB2A             1434*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04AB2A             1435*  ; inputs: a is the GCOL paint mode
04AB2A             1436*  ; prerequisites: vdu_sprite_select
04AB2A             1437*  vdu_sprite_set_gcol:
04AB2A 32 3C AB 04 1438*      ld (@mode),a
04AB2E 21 39 AB 04 1439*      ld hl,@cmd
04AB32 01 04 00 00 1440*      ld bc,@end-@cmd
04AB36 5B DF       1441*      rst.lil $18
04AB38 C9          1442*      ret
04AB39 17 1B 12    1443*  @cmd:  db 23,27,18
04AB3C 00          1444*  @mode: db 0x00
04AB3D             1445*  @end:
04AB3D             1446*  
04AB3D             1447*  ; VDU 23, 27, &26, n;: Add bitmap bufferId
04AB3D             1448*  ;     as a frame to current sprite using a 16-bit buffer ID
04AB3D             1449*  ; inputs: hl=bufferId
04AB3D             1450*  ; prerequisites: vdu_sprite_select
04AB3D             1451*  vdu_sprite_add_buff:
04AB3D 22 4F AB 04 1452*      ld (@bufferId),hl
04AB41 21 4C AB 04 1453*      ld hl,@cmd
04AB45 01 05 00 00 1454*      ld bc,@end-@cmd
04AB49 5B DF       1455*      rst.lil $18
04AB4B C9          1456*      ret
04AB4C 17 1B 26    1457*  @cmd:      db 23,27,0x26
04AB4F 00 00       1458*  @bufferId: dw 0x0000
04AB51 00          1459*  @end:      db 0x00 ; padding
04AB52             1460*  
04AB52             1461*  ; ############################################################
04AB52             1462*  ; VDU SOUND API
04AB52             1463*  ; ############################################################
04AB52             1464*  ; Command 0: Play note
04AB52             1465*  ; VDU 23, 0, &85, channel, 0, volume, frequency; duration;
04AB52             1466*      MACRO PLAY_NOTE channel, volume, frequency, duration
04AB52             1467*      ld hl, @PLAY_NOTE_CMD        ; Start of command block
04AB52             1468*      ld bc, @PLAY_NOTE_END - @PLAY_NOTE_CMD  ; Command block size
04AB52             1469*      rst.lil $18
04AB52             1470*      jr @PLAY_NOTE_END
04AB52             1471*  @PLAY_NOTE_CMD:  db 23, 0, 0x85               ; Command header
04AB52             1472*                   db channel                  ; Channel, 0 (commented out)
04AB52             1473*                   db 0                        ; Play note command
04AB52             1474*                   db volume                   ; Volume
04AB52             1475*                   dw frequency                ; Frequency
04AB52             1476*                   dw duration                 ; Duration
04AB52             1477*  @PLAY_NOTE_END:
04AB52             1478*      ENDMACRO
04AB52             1479*  
04AB52             1480*      MACRO MUTE_CHANNEL channel
04AB52             1481*      ld hl, @MUTE_CHANNEL_CMD     ; Start of command block
04AB52             1482*      ld bc, @MUTE_CHANNEL_END - @MUTE_CHANNEL_CMD  ; Command block size
04AB52             1483*      rst.lil $18
04AB52             1484*      jr @MUTE_CHANNEL_END
04AB52             1485*  @MUTE_CHANNEL_CMD: db 23, 0, 0x85             ; Command header
04AB52             1486*                     db channel                ; Channel, 0 (commented out)
04AB52             1487*                     db 2                      ; Set volume command
04AB52             1488*                     db 0                      ; Volume (mute)
04AB52             1489*  @MUTE_CHANNEL_END:
04AB52             1490*      ENDMACRO
04AB52             1491*  
04AB52             1492*  ; inputs: c = channel, b = volume, hl = frequency; de = duration;
04AB52             1493*  vdu_play_note:
04AB52 79          1494*      ld a,c
04AB53 32 73 AB 04 1495*      ld (@channel),a
04AB57 78          1496*      ld a,b
04AB58 32 75 AB 04 1497*      ld (@volume),a
04AB5C 22 76 AB 04 1498*      ld (@frequency),hl
04AB60 ED 53 78 AB 1499*      ld (@duration),de
       04          
04AB65 21 70 AB 04 1500*      ld hl,@cmd
04AB69 01 0A 00 00 1501*      ld bc,@end-@cmd
04AB6D 5B DF       1502*      rst.lil $18
04AB6F C9          1503*      ret
04AB70 17 00 85    1504*  @cmd:       db 23, 0, 0x85
04AB73 00          1505*  @channel:   db 0x00
04AB74 00          1506*              db 0x00 ; play note command
04AB75 00          1507*  @volume:    db 0x00
04AB76 00 00       1508*  @frequency: dw 0x0000
04AB78 00 00       1509*  @duration:  dw 0x0000
04AB7A 00          1510*  @end:       db 0x00 ; padding
04AB7B             1511*  
04AB7B             1512*  ; Command 1: Status
04AB7B             1513*  ; VDU 23, 0, &85, channel, 1
04AB7B             1514*  ; inputs: a = channel
04AB7B             1515*  ; Returns a bit mask indicating the status of the specified channel, or 255 if the channel is not valid, or has been disabled. The bit mask is as follows:
04AB7B             1516*  ; Bit 	Name 	Meaning
04AB7B             1517*  ; 0 	Active 	When set this indicates the channel is in use (has an active waveform)
04AB7B             1518*  ; 1 	Playing 	Indicates the channel is actively playing a note, and thus will reject calls to play a new note
04AB7B             1519*  ; 2 	Indefinite 	Set if the channel is playing an indefinite duration note
04AB7B             1520*  ; 3 	Has Volume Envelope 	Set if the channel has a volume envelope
04AB7B             1521*  ; 4 	Has Frequency Envelope 	Set if the channel has a frequency envelope
04AB7B             1522*  
04AB7B             1523*  ; Bits 5-7 are reserved for future use and, for enabled channels, will currently always be zero.
04AB7B             1524*  vdu_channel_status:
04AB7B 32 8D AB 04 1525*      ld (@channel),a
04AB7F 21 8A AB 04 1526*      ld hl,@cmd
04AB83 01 05 00 00 1527*      ld bc,@end-@cmd
04AB87 5B DF       1528*      rst.lil $18
04AB89 C9          1529*      ret
04AB8A 17 00 85    1530*  @cmd:       db 23, 0, 0x85
04AB8D 00          1531*  @channel:   db 0x00
04AB8E 01          1532*              db 0x01 ; get channel status command
04AB8F             1533*  @end:
04AB8F             1534*  
04AB8F             1535*  ; VDU 23, 0, &85, channel, 2, volume
04AB8F             1536*  ; inputs: c = channel, b = volume
04AB8F             1537*  ; Sets the volume of the specified channel. The volume is a value from 0 to 127, where 0 is silent and 127 is full volume. Values over 127 will be treated as 127 (with one exception described later).
04AB8F             1538*  
04AB8F             1539*  ; Specifying a channel of -1 (or 255) will set the global sound system volume level. (Requires Console8 VDP 2.5.0 or later.)
04AB8F             1540*  
04AB8F             1541*  ; Using this command provides more direct control over a channel than the play note command. It can be used to adjust the volume of a channel that is already playing a note.
04AB8F             1542*  vdu_channel_volume:
04AB8F 79          1543*      ld a,c
04AB90 32 A7 AB 04 1544*      ld (@channel),a
04AB94 78          1545*      ld a,b
04AB95 32 A9 AB 04 1546*      ld (@volume),a
04AB99 21 A4 AB 04 1547*      ld hl,@cmd
04AB9D 01 06 00 00 1548*      ld bc,@end-@cmd
04ABA1 5B DF       1549*      rst.lil $18
04ABA3 C9          1550*      ret
04ABA4 17 00 85    1551*  @cmd:       db 23, 0, 0x85
04ABA7 00          1552*  @channel:   db 0x00
04ABA8 02          1553*              db 0x02 ; set volume command
04ABA9 00          1554*  @volume:    db 0x00
04ABAA             1555*  @end:
04ABAA             1556*  
04ABAA             1557*  ; VDU 23, 0, &85, channel, 3, frequency;
04ABAA             1558*  
04ABAA             1559*  ; Sets the frequency of the specified channel. The frequency is a 16-bit value specifying in Hz the frequency of the note to be played.
04ABAA             1560*  
04ABAA             1561*  ; Using this command provides more direct control over a channel than the play note command. It can be used to adjust the frequency of a channel that is already playing a note.
04ABAA             1562*  
04ABAA             1563*  ; Returns 1 on success, 0 for failure.
04ABAA             1564*  vdu_channel_frequency:
04ABAA 79          1565*      ld a,c
04ABAB 32 C2 AB 04 1566*      ld (@channel),a
04ABAF ED 53 C4 AB 1567*      ld (@frequency),de
       04          
04ABB4 21 BF AB 04 1568*      ld hl,@cmd
04ABB8 01 07 00 00 1569*      ld bc,@end-@cmd
04ABBC 5B DF       1570*      rst.lil $18
04ABBE C9          1571*      ret
04ABBF 17 00 85    1572*  @cmd:       db 23, 0, 0x85
04ABC2 00          1573*  @channel:   db 0x00
04ABC3 03          1574*              db 0x03 ; set frequency command
04ABC4 00 00       1575*  @frequency: dw 0x0000
04ABC6 00          1576*  @end:       db 0x00 ; padding
04ABC7             1577*  
04ABC7             1578*  
04ABC7             1579*  ; VDU 23, 0, &85, channel, 4, waveformOrSample, [bufferId;]
04ABC7             1580*  ; inputs: c = channel, b = waveformOrSample, [hl = bufferId]
04ABC7             1581*  ; Sets the waveform type for a channel to use. The waveformOrSample value is a single byte treated as a signed value.
04ABC7             1582*  
04ABC7             1583*  ; Using a negative value for the waveform indicates that a sample should be used instead. For more information see the documentation for the sample command.
04ABC7             1584*  
04ABC7             1585*  ; By default a channel is set to use waveform 0 (square wave).
04ABC7             1586*  
04ABC7             1587*  ; Valid waveform values are as follows:
04ABC7             1588*  ; Value 	Waveform
04ABC7             1589*  ; 0 	Square wave
04ABC7             1590*  ; 1 	Triangle wave
04ABC7             1591*  ; 2 	Sawtooth wave
04ABC7             1592*  ; 3 	Sine wave
04ABC7             1593*  ; 4 	Noise (simple white noise with no frequency support)
04ABC7             1594*  ; 5 	VIC Noise (emulates a VIC6561; supports frequency)
04ABC7             1595*  ; 8 	Sample (specifying a 16-bit buffer ID for sample data)
04ABC7             1596*  
04ABC7             1597*  vdu_channel_waveform:
04ABC7 79          1598*      ld a,c
04ABC8 32 ED AB 04 1599*      ld (@channel),a
04ABCC 78          1600*      ld a,b
04ABCD 32 EF AB 04 1601*      ld (@waveform),a
04ABD1 FE 08       1602*      cp 8 ; check if the waveform is a sample
04ABD3 28 06       1603*      jr z, @sample
04ABD5 01 06 00 00 1604*      ld bc,@bufferId-@cmd
04ABD9 18 08       1605*      jr @sendToVdu
04ABDB             1606*  @sample:
04ABDB 22 F0 AB 04 1607*      ld (@bufferId),hl
04ABDF 01 08 00 00 1608*      ld bc,@end-@cmd
04ABE3             1609*  @sendToVdu:
04ABE3 21 EA AB 04 1610*      ld hl,@cmd
04ABE7 5B DF       1611*      rst.lil $18
04ABE9 C9          1612*      ret
04ABEA 17 00 85    1613*  @cmd:       db 23, 0, 0x85
04ABED 00          1614*  @channel:   db 0x00
04ABEE 04          1615*              db 0x04 ; set waveform command
04ABEF 00          1616*  @waveform:  db 0x00
04ABF0 00 00       1617*  @bufferId:  dw 0x0000
04ABF2 00          1618*  @end:       db 0x00 ; padding
04ABF3             1619*  
04ABF3             1620*  
04ABF3             1621*  
04ABF3             1622*  ; VDU 23, 0, &85, 0, 5, 2, bufferId; format
04ABF3             1623*  ; inputs: hl = bufferId; a = format
04ABF3             1624*  ; The format parameter is an 8-bit value that indicates the format of the sample data. The following values are supported:
04ABF3             1625*  ; Value 	Description
04ABF3             1626*  ; 0 	8-bit signed, 16KHz
04ABF3             1627*  ; 1 	8-bit unsigned, 16KHz
04ABF3             1628*  vdu_buffer_to_sound:
04ABF3 22 0C AC 04 1629*      ld (@bufferId),hl
04ABF7 32 0E AC 04 1630*      ld (@format),a
04ABFB 21 06 AC 04 1631*      ld hl,@cmd
04ABFF 01 09 00 00 1632*      ld bc,@end-@cmd
04AC03 5B DF       1633*      rst.lil $18
04AC05 C9          1634*      ret
04AC06 17 00 85    1635*  @cmd:       db 23, 0, 0x85
04AC09 00          1636*              db 0x00 ; a magic number that is always 0
04AC0A 05          1637*              db 0x05 ; buffer to sound command
04AC0B 02          1638*              db 0x02 ; a magic number that is always 2
04AC0C 00 00       1639*  @bufferId:  dw 0x0000
04AC0E 00          1640*  @format:    db 0x00
04AC0F             1641*  @end:
04AC0F             1642*  
04AC0F             1643*  
04AC0F             1644*  ; inputs: c = channel, b = volume, de = duration; hl = bufferId
04AC0F             1645*  vdu_play_sample:
04AC0F             1646*      ; populate input parameters
04AC0F 79          1647*      ld a,c
04AC10 32 3A AC 04 1648*      ld (@channel0),a
04AC14 32 42 AC 04 1649*      ld (@channel1),a
04AC18 78          1650*      ld a,b
04AC19 32 44 AC 04 1651*      ld (@volume),a
04AC1D ED 53 45 AC 1652*      ld (@frequency),de
       04          
04AC22 22 3D AC 04 1653*      ld (@bufferId),hl
04AC26             1654*      ; clean up byte that got stomped on by bufferId load from hl
04AC26 3E 17       1655*      ld a,23
04AC28 32 3F AC 04 1656*      ld (@cmd1),a
04AC2C             1657*      ; prep the vdu command string
04AC2C 21 37 AC 04 1658*      ld hl, @cmd0
04AC30 01 12 00 00 1659*      ld bc, @end - @cmd0
04AC34 5B DF       1660*      rst.lil $18
04AC36 C9          1661*      ret
04AC37 17 00 85    1662*  @cmd0:       db 23, 0, 0x85
04AC3A 00          1663*  @channel0:   db 0x00
04AC3B 04          1664*               db 0x04 ; set waveform command
04AC3C 08          1665*  @waveform:   db 0x08 ; sample
04AC3D 00 00       1666*  @bufferId:   dw 0x0000
04AC3F 17 00 85    1667*  @cmd1:       db 23, 0, 0x85
04AC42 00          1668*  @channel1:   db 0x00
04AC43 00          1669*               db 0x00 ; play note command
04AC44 00          1670*  @volume:     db 0x00
04AC45 00 00       1671*  @frequency:  dw 0x00 ; no effect unless buffer has been set to tuneable sample
04AC47 00 00       1672*  @duration:   dw 0x0000 ; milliseconds
04AC49 00          1673*  @end:        db 0x00 ; padding
04AC4A             1674*  
04AC4A             1675*  
04AC4A             1676*  vdu_enable_channels:
04AC4A             1677*  ; enable all the channels
04AC4A 21 55 AC 04 1678*      ld hl, enable_channels_cmd
04AC4E 01 91 00 00 1679*      ld bc, enable_channels_end - enable_channels_cmd
04AC52 5B DF       1680*      rst.lil $18
04AC54 C9          1681*      ret
04AC55             1682*  enable_channels_cmd:
04AC55 17 00 85 03 1683*      db 23, 0, $85, 3, 8
       08          
04AC5A 17 00 85 04 1684*      db 23, 0, $85, 4, 8
       08          
04AC5F 17 00 85 05 1685*      db 23, 0, $85, 5, 8
       08          
04AC64 17 00 85 06 1686*      db 23, 0, $85, 6, 8
       08          
04AC69 17 00 85 07 1687*      db 23, 0, $85, 7, 8
       08          
04AC6E 17 00 85 08 1688*      db 23, 0, $85, 8, 8
       08          
04AC73 17 00 85 09 1689*      db 23, 0, $85, 9, 8
       08          
04AC78 17 00 85 0A 1690*      db 23, 0, $85, 10, 8
       08          
04AC7D 17 00 85 0B 1691*      db 23, 0, $85, 11, 8
       08          
04AC82 17 00 85 0C 1692*      db 23, 0, $85, 12, 8
       08          
04AC87 17 00 85 0D 1693*      db 23, 0, $85, 13, 8
       08          
04AC8C 17 00 85 0E 1694*      db 23, 0, $85, 14, 8
       08          
04AC91 17 00 85 0F 1695*      db 23, 0, $85, 15, 8
       08          
04AC96 17 00 85 10 1696*      db 23, 0, $85, 16, 8
       08          
04AC9B 17 00 85 11 1697*      db 23, 0, $85, 17, 8
       08          
04ACA0 17 00 85 12 1698*      db 23, 0, $85, 18, 8
       08          
04ACA5 17 00 85 13 1699*      db 23, 0, $85, 19, 8
       08          
04ACAA 17 00 85 14 1700*      db 23, 0, $85, 20, 8
       08          
04ACAF 17 00 85 15 1701*      db 23, 0, $85, 21, 8
       08          
04ACB4 17 00 85 16 1702*      db 23, 0, $85, 22, 8
       08          
04ACB9 17 00 85 17 1703*      db 23, 0, $85, 23, 8
       08          
04ACBE 17 00 85 18 1704*      db 23, 0, $85, 24, 8
       08          
04ACC3 17 00 85 19 1705*      db 23, 0, $85, 25, 8
       08          
04ACC8 17 00 85 1A 1706*      db 23, 0, $85, 26, 8
       08          
04ACCD 17 00 85 1B 1707*      db 23, 0, $85, 27, 8
       08          
04ACD2 17 00 85 1C 1708*      db 23, 0, $85, 28, 8
       08          
04ACD7 17 00 85 1D 1709*      db 23, 0, $85, 29, 8
       08          
04ACDC 17 00 85 1E 1710*      db 23, 0, $85, 30, 8
       08          
04ACE1 17 00 85 1F 1711*      db 23, 0, $85, 31, 8
       08          
04ACE6             1712*  enable_channels_end:
04ACE6             0032       include "src/asm/functions.asm"
04ACE6             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/functions.s
04ACE6             0002*  ; Print a zero-terminated string
04ACE6             0003*  ; HL: Pointer to string
04ACE6             0004*  printString:
04ACE6 C5          0005*  	PUSH	BC
04ACE7 01 00 00 00 0006*  	LD		BC,0
04ACEB 3E 00       0007*  	LD 	 	A,0
04ACED 5B DF       0008*  	RST.LIL 18h
04ACEF C1          0009*  	POP		BC
04ACF0 C9          0010*  	RET
04ACF1             0011*  ; print a VDU sequence
04ACF1             0012*  ; HL: Pointer to VDU sequence - <1 byte length> <data>
04ACF1             0013*  sendVDUsequence:
04ACF1 C5          0014*  	PUSH	BC
04ACF2 01 00 00 00 0015*  	LD		BC, 0
04ACF6 4E          0016*  	LD		C, (HL)
04ACF7 5B DF       0017*  	RST.LIL	18h
04ACF9 C1          0018*  	POP		BC
04ACFA C9          0019*  	RET
04ACFB             0020*  ; Print Newline sequence to VDP
04ACFB             0021*  printNewline:
04ACFB 3E 0D       0022*  	LD	A, '\r'
04ACFD 5B D7       0023*  	RST.LIL 10h
04ACFF 3E 0A       0024*  	LD	A, '\n'
04AD01 5B D7       0025*  	RST.LIL 10h
04AD03 C9          0026*  	RET
04AD04             0027*  ; Print a 24-bit HEX number
04AD04             0028*  ; HLU: Number to print
04AD04             0029*  printHex24:
04AD04 E5          0030*  	PUSH	HL
04AD05 21 02 00 00 0031*  	LD		HL, 2
04AD09 39          0032*  	ADD		HL, SP
04AD0A 7E          0033*  	LD		A, (HL)
04AD0B E1          0034*  	POP		HL
04AD0C CD 16 AD 04 0035*  	CALL	printHex8
04AD10             0036*  ; Print a 16-bit HEX number
04AD10             0037*  ; HL: Number to print
04AD10             0038*  printHex16:
04AD10 7C          0039*  	LD		A,H
04AD11 CD 16 AD 04 0040*  	CALL	printHex8
04AD15 7D          0041*  	LD		A,L
04AD16             0042*  ; Print an 8-bit HEX number
04AD16             0043*  ; A: Number to print
04AD16             0044*  printHex8:
04AD16 4F          0045*  	LD		C,A
04AD17 1F          0046*  	RRA
04AD18 1F          0047*  	RRA
04AD19 1F          0048*  	RRA
04AD1A 1F          0049*  	RRA
04AD1B CD 20 AD 04 0050*  	CALL	@F
04AD1F 79          0051*  	LD		A,C
04AD20             0052*  @@:
04AD20 E6 0F       0053*  	AND		0Fh
04AD22 C6 90       0054*  	ADD		A,90h
04AD24 27          0055*  	DAA
04AD25 CE 40       0056*  	ADC		A,40h
04AD27 27          0057*  	DAA
04AD28 5B D7       0058*  	RST.LIL	10h
04AD2A C9          0059*  	RET
04AD2B             0060*  
04AD2B             0061*  ; Print a 0x HEX prefix
04AD2B             0062*  DisplayHexPrefix:
04AD2B 3E 30       0063*  	LD	A, '0'
04AD2D 5B D7       0064*  	RST.LIL 10h
04AD2F 3E 78       0065*  	LD	A, 'x'
04AD31 5B D7       0066*  	RST.LIL 10h
04AD33 C9          0067*  	RET
04AD34             0068*  
04AD34             0069*  ; Prints the decimal value in HL without leading zeroes
04AD34             0070*  ; HL : Value to print
04AD34             0071*  printDec:
04AD34 11 45 AD 04 0072*  	LD	 DE, _printDecBuffer
04AD38 CD 4E AD 04 0073*  	CALL Num2String
04AD3C 21 45 AD 04 0074*  	LD	 HL, _printDecBuffer
04AD40 CD E6 AC 04 0075*  	CALL printString
04AD44 C9          0076*  	RET
04AD45             0077*  _printDecBuffer:
04AD45             0078*  	DS 9
04AD4E             0079*  ; This routine converts the value from HL into it's ASCII representation,
04AD4E             0080*  ; starting to memory location pointing by DE, in decimal form and with trailing zeroes
04AD4E             0081*  ; so it will allways be 5 characters length
04AD4E             0082*  ; HL : Value to convert to string
04AD4E             0083*  ; DE : pointer to buffer, at least 8 byte + 0
04AD4E             0084*  Num2String:
04AD4E D5          0085*  	PUSH DE
04AD4F CD 6D AD 04 0086*  	CALL Num2String_worker
04AD53 3E 00       0087*  	LD	 A, 0
04AD55 12          0088*  	LD	 (DE), A	; terminate string
04AD56 D1          0089*  	POP  DE
04AD57 D5          0090*  	PUSH DE
04AD58             0091*  @findfirstzero:
04AD58 1A          0092*  	LD	 A, (DE)
04AD59 FE 30       0093*  	CP	 '0'
04AD5B 20 03       0094*  	JR	 NZ, @done
04AD5D 13          0095*  	INC  DE
04AD5E 18 F8       0096*  	JR	 @findfirstzero
04AD60             0097*  @done:
04AD60 B7          0098*  	OR	 A	; end-of-string reached / was the value 0?
04AD61 20 01       0099*  	JR	 NZ, @removezeroes
04AD63 1B          0100*  	DEC  DE
04AD64             0101*  @removezeroes:
04AD64 E1          0102*  	POP	 HL	; start of string, DE == start of first number
04AD65             0103*  @copydigit:
04AD65 1A          0104*  	LD	A, (DE)
04AD66 77          0105*  	LD	(HL), A
04AD67 B7          0106*  	OR  A
04AD68 C8          0107*  	RET	Z
04AD69 23          0108*  	INC	HL
04AD6A 13          0109*  	INC DE
04AD6B 18 F8       0110*  	JR	@copydigit
04AD6D             0111*  
04AD6D             0112*  Num2String_worker:
04AD6D 01 80 69 67 0113*  	LD	 BC,-10000000
04AD71 CD A4 AD 04 0114*  	CALL OneDigit
04AD75 01 C0 BD F0 0115*  	LD	 BC,-1000000
04AD79 CD A4 AD 04 0116*  	CALL OneDigit
04AD7D 01 60 79 FE 0117*  	LD	 BC,-100000
04AD81 CD A4 AD 04 0118*  	CALL OneDigit
04AD85 01 F0 D8 FF 0119*  	LD   BC,-10000
04AD89 CD A4 AD 04 0120*  	CALL OneDigit
04AD8D 01 18 FC FF 0121*  	LD   BC,-1000
04AD91 CD A4 AD 04 0122*  	CALL OneDigit
04AD95 01 9C FF FF 0123*  	LD   BC,-100
04AD99 CD A4 AD 04 0124*  	CALL OneDigit
04AD9D 0E F6       0125*  	LD   C,-10
04AD9F CD A4 AD 04 0126*  	CALL OneDigit
04ADA3 48          0127*  	LD   C,B
04ADA4             0128*  OneDigit:
04ADA4 3E 2F       0129*  	LD   A,'0'-1
04ADA6             0130*  DivideMe:
04ADA6 3C          0131*  	INC  A
04ADA7 09          0132*  	ADD  HL,BC
04ADA8 38 FC       0133*  	JR   C,DivideMe
04ADAA ED 42       0134*  	SBC  HL,BC
04ADAC 12          0135*  	LD   (DE),A
04ADAD 13          0136*  	INC  DE
04ADAE C9          0137*  	RET
04ADAF             0138*  
04ADAF             0139*  
04ADAF             0140*  ; #### new functions added by Brandon R. Gates ####
04ADAF             0141*  
04ADAF             0142*  ; print the binary representation of the 8-bit value in a
04ADAF             0143*  ; destroys a, hl, bc
04ADAF             0144*  printBin8:
04ADAF 06 08       0145*      ld b,8      ; loop counter for 8 bits
04ADB1 21 CC AD 04 0146*      ld hl,@cmd  ; set hl to the low byte of the output string
04ADB5             0147*                  ; (which will be the high bit of the value in a)
04ADB5             0148*  @loop:
04ADB5 07          0149*      rlca ; put the next highest bit into carry
04ADB6 38 04       0150*      jr c,@one
04ADB8 36 30       0151*      ld (hl),'0'
04ADBA 18 02       0152*      jr @next_bit
04ADBC             0153*  @one:
04ADBC 36 31       0154*      ld (hl),'1'
04ADBE             0155*  @next_bit:
04ADBE 23          0156*      inc hl
04ADBF 10 F4       0157*      djnz @loop
04ADC1             0158*  ; print it
04ADC1 21 CC AD 04 0159*  	ld hl,@cmd
04ADC5 01 08 00 00 0160*  	ld bc,@end-@cmd
04ADC9 5B DF       0161*  	rst.lil $18
04ADCB C9          0162*  	ret
04ADCC             0163*  @cmd: ds 8 ; eight bytes for eight bits
04ADD4             0164*  @end:
04ADD4             0165*  
04ADD4             0166*  ; print registers to screen in hexidecimal format
04ADD4             0167*  ; inputs: none
04ADD4             0168*  ; outputs: values of every register printed to screen
04ADD4             0169*  ;    values of each register in global scratch memory
04ADD4             0170*  ; destroys: nothing
04ADD4             0171*  stepRegistersHex:
04ADD4             0172*  ; store everything in scratch
04ADD4 22 D7 AF 04 0173*      ld (uhl),hl
04ADD8 ED 43 DA AF 0174*      ld (ubc),bc
       04          
04ADDD ED 53 DD AF 0175*      ld (ude),de
       04          
04ADE2 DD 22 E0 AF 0176*      ld (uix),ix
       04          
04ADE7 FD 22 E3 AF 0177*      ld (uiy),iy
       04          
04ADEC F5          0178*      push af ; fml
04ADED E1          0179*      pop hl  ; thanks, zilog
04ADEE 22 D4 AF 04 0180*      ld (uaf),hl
04ADF2 F5          0181*      push af ; dammit
04ADF3             0182*  
04ADF3             0183*  ; home the cursor
04ADF3 CD 4D A7 04 0184*      call vdu_home_cursor
04ADF7             0185*  
04ADF7             0186*  ; print each register
04ADF7 21 60 AF 04 0187*      ld hl,str_afu
04ADFB CD E6 AC 04 0188*      call printString
04ADFF 2A D4 AF 04 0189*      ld hl,(uaf)
04AE03 CD 04 AD 04 0190*      call printHex24
04AE07 CD FB AC 04 0191*      call printNewline
04AE0B             0192*  
04AE0B 21 64 AF 04 0193*      ld hl,str_hlu
04AE0F CD E6 AC 04 0194*      call printString
04AE13 2A D7 AF 04 0195*      ld hl,(uhl)
04AE17 CD 04 AD 04 0196*      call printHex24
04AE1B CD FB AC 04 0197*      call printNewline
04AE1F             0198*  
04AE1F 21 68 AF 04 0199*      ld hl,str_bcu
04AE23 CD E6 AC 04 0200*      call printString
04AE27 2A DA AF 04 0201*      ld hl,(ubc)
04AE2B CD 04 AD 04 0202*      call printHex24
04AE2F CD FB AC 04 0203*      call printNewline
04AE33             0204*  
04AE33 21 6C AF 04 0205*      ld hl,str_deu
04AE37 CD E6 AC 04 0206*      call printString
04AE3B 2A DD AF 04 0207*      ld hl,(ude)
04AE3F CD 04 AD 04 0208*      call printHex24
04AE43 CD FB AC 04 0209*      call printNewline
04AE47             0210*  
04AE47 21 70 AF 04 0211*      ld hl,str_ixu
04AE4B CD E6 AC 04 0212*      call printString
04AE4F 2A E0 AF 04 0213*      ld hl,(uix)
04AE53 CD 04 AD 04 0214*      call printHex24
04AE57 CD FB AC 04 0215*      call printNewline
04AE5B             0216*  
04AE5B 21 74 AF 04 0217*      ld hl,str_iyu
04AE5F CD E6 AC 04 0218*      call printString
04AE63 2A E3 AF 04 0219*      ld hl,(uiy)
04AE67 CD 04 AD 04 0220*      call printHex24
04AE6B CD FB AC 04 0221*      call printNewline
04AE6F             0222*  
04AE6F             0223*      ; call vsync
04AE6F             0224*  
04AE6F CD FB AC 04 0225*      call printNewline
04AE73             0226*  
04AE73             0227*  ; check for escape key and quit if pressed
04AE73             0228*  	MOSCALL mos_getkbmap
04AE73 3E 1E       0001*M 			LD	A, function
04AE75 5B CF       0002*M 			RST.LIL	08h
04AE77             0229*  @stayhere:
04AE77             0230*  ; 113 Escape
04AE77 DD CB 0E 46 0231*      bit 0,(ix+14)
04AE7B 20 02       0232*      jr nz,@Escape
04AE7D 18 F8       0233*  	jr @stayhere
04AE7F             0234*  @Escape:
04AE7F DD CB 0E 86 0235*      res 0,(ix+14) ; debounce the key (hopefully)
04AE83 3E 80       0236*      ld a,%10000000
04AE85 CD C3 C0 04 0237*      call multiPurposeDelay
04AE89             0238*  
04AE89             0239*  ; restore everything
04AE89 2A D7 AF 04 0240*      ld hl, (uhl)
04AE8D ED 4B DA AF 0241*      ld bc, (ubc)
       04          
04AE92 ED 5B DD AF 0242*      ld de, (ude)
       04          
04AE97 DD 2A E0 AF 0243*      ld ix, (uix)
       04          
04AE9C FD 2A E3 AF 0244*      ld iy, (uiy)
       04          
04AEA1 F1          0245*      pop af
04AEA2             0246*  ; all done
04AEA2 C9          0247*      ret
04AEA3             0248*  
04AEA3             0249*  ; print registers to screen in hexidecimal format
04AEA3             0250*  ; inputs: none
04AEA3             0251*  ; outputs: values of every register printed to screen
04AEA3             0252*  ;    values of each register in global scratch memory
04AEA3             0253*  ; destroys: nothing
04AEA3             0254*  dumpRegistersHex:
04AEA3             0255*  ; store everything in scratch
04AEA3 22 D7 AF 04 0256*      ld (uhl),hl
04AEA7 ED 43 DA AF 0257*      ld (ubc),bc
       04          
04AEAC ED 53 DD AF 0258*      ld (ude),de
       04          
04AEB1 DD 22 E0 AF 0259*      ld (uix),ix
       04          
04AEB6 FD 22 E3 AF 0260*      ld (uiy),iy
       04          
04AEBB F5          0261*      push af ; fml
04AEBC E1          0262*      pop hl  ; thanks, zilog
04AEBD 22 D4 AF 04 0263*      ld (uaf),hl
04AEC1 F5          0264*      push af ; dammit
04AEC2             0265*  
04AEC2             0266*  ; home the cursor
04AEC2 CD 4D A7 04 0267*      call vdu_home_cursor
04AEC6             0268*  
04AEC6             0269*  ; print each register
04AEC6 21 60 AF 04 0270*      ld hl,str_afu
04AECA CD E6 AC 04 0271*      call printString
04AECE 2A D4 AF 04 0272*      ld hl,(uaf)
04AED2 CD 04 AD 04 0273*      call printHex24
04AED6 CD FB AC 04 0274*      call printNewline
04AEDA             0275*  
04AEDA 21 64 AF 04 0276*      ld hl,str_hlu
04AEDE CD E6 AC 04 0277*      call printString
04AEE2 2A D7 AF 04 0278*      ld hl,(uhl)
04AEE6 CD 04 AD 04 0279*      call printHex24
04AEEA CD FB AC 04 0280*      call printNewline
04AEEE             0281*  
04AEEE 21 68 AF 04 0282*      ld hl,str_bcu
04AEF2 CD E6 AC 04 0283*      call printString
04AEF6 2A DA AF 04 0284*      ld hl,(ubc)
04AEFA CD 04 AD 04 0285*      call printHex24
04AEFE CD FB AC 04 0286*      call printNewline
04AF02             0287*  
04AF02 21 6C AF 04 0288*      ld hl,str_deu
04AF06 CD E6 AC 04 0289*      call printString
04AF0A 2A DD AF 04 0290*      ld hl,(ude)
04AF0E CD 04 AD 04 0291*      call printHex24
04AF12 CD FB AC 04 0292*      call printNewline
04AF16             0293*  
04AF16 21 70 AF 04 0294*      ld hl,str_ixu
04AF1A CD E6 AC 04 0295*      call printString
04AF1E 2A E0 AF 04 0296*      ld hl,(uix)
04AF22 CD 04 AD 04 0297*      call printHex24
04AF26 CD FB AC 04 0298*      call printNewline
04AF2A             0299*  
04AF2A 21 74 AF 04 0300*      ld hl,str_iyu
04AF2E CD E6 AC 04 0301*      call printString
04AF32 2A E3 AF 04 0302*      ld hl,(uiy)
04AF36 CD 04 AD 04 0303*      call printHex24
04AF3A CD FB AC 04 0304*      call printNewline
04AF3E             0305*  
04AF3E CD 6F A8 04 0306*      call vdu_vblank
04AF42             0307*  
04AF42 CD FB AC 04 0308*      call printNewline
04AF46             0309*  ; restore everything
04AF46 2A D7 AF 04 0310*      ld hl, (uhl)
04AF4A ED 4B DA AF 0311*      ld bc, (ubc)
       04          
04AF4F ED 5B DD AF 0312*      ld de, (ude)
       04          
04AF54 DD 2A E0 AF 0313*      ld ix, (uix)
       04          
04AF59 FD 2A E3 AF 0314*      ld iy, (uiy)
       04          
04AF5E F1          0315*      pop af
04AF5F             0316*  ; all done
04AF5F C9          0317*      ret
04AF60             0318*  
04AF60 61 66 3D 00 0319*  str_afu: db "af=",0
04AF64 68 6C 3D 00 0320*  str_hlu: db "hl=",0
04AF68 62 63 3D 00 0321*  str_bcu: db "bc=",0
04AF6C 64 65 3D 00 0322*  str_deu: db "de=",0
04AF70 69 78 3D 00 0323*  str_ixu: db "ix=",0
04AF74 69 79 3D 00 0324*  str_iyu: db "iy=",0
04AF78             0325*  
04AF78             0326*  ; print udeuhl to screen in hexidecimal format
04AF78             0327*  ; inputs: none
04AF78             0328*  ; outputs: concatenated hexidecimal udeuhl
04AF78             0329*  ; destroys: nothing
04AF78             0330*  dumpUDEUHLHex:
04AF78             0331*  ; store everything in scratch
04AF78 22 D7 AF 04 0332*      ld (uhl),hl
04AF7C ED 43 DA AF 0333*      ld (ubc),bc
       04          
04AF81 ED 53 DD AF 0334*      ld (ude),de
       04          
04AF86 DD 22 E0 AF 0335*      ld (uix),ix
       04          
04AF8B FD 22 E3 AF 0336*      ld (uiy),iy
       04          
04AF90 F5          0337*      push af
04AF91             0338*  
04AF91             0339*  ; print each register
04AF91             0340*  
04AF91 21 CB AF 04 0341*      ld hl,str_udeuhl
04AF95 CD E6 AC 04 0342*      call printString
04AF99 2A DD AF 04 0343*      ld hl,(ude)
04AF9D CD 04 AD 04 0344*      call printHex24
04AFA1 3E 2E       0345*  	ld a,'.'	; print a dot to separate the values
04AFA3 5B D7       0346*  	rst.lil 10h
04AFA5 2A D7 AF 04 0347*      ld hl,(uhl)
04AFA9 CD 04 AD 04 0348*      call printHex24
04AFAD CD FB AC 04 0349*      call printNewline
04AFB1             0350*  
04AFB1             0351*  ; restore everything
04AFB1 2A D7 AF 04 0352*      ld hl, (uhl)
04AFB5 ED 4B DA AF 0353*      ld bc, (ubc)
       04          
04AFBA ED 5B DD AF 0354*      ld de, (ude)
       04          
04AFBF DD 2A E0 AF 0355*      ld ix, (uix)
       04          
04AFC4 FD 2A E3 AF 0356*      ld iy, (uiy)
       04          
04AFC9 F1          0357*      pop af
04AFCA             0358*  ; all done
04AFCA C9          0359*      ret
04AFCB             0360*  
04AFCB 75 64 65 2E 0361*  str_udeuhl: db "ude.uhl=",0
       75 68 6C 3D 
       00          
04AFD4             0362*  
04AFD4             0363*  ; global scratch memory for registers
04AFD4 00 00 00    0364*  uaf: dl 0
04AFD7 00 00 00    0365*  uhl: dl 0
04AFDA 00 00 00    0366*  ubc: dl 0
04AFDD 00 00 00    0367*  ude: dl 0
04AFE0 00 00 00    0368*  uix: dl 0
04AFE3 00 00 00    0369*  uiy: dl 0
04AFE6 00 00 00    0370*  usp: dl 0
04AFE9 00 00 00    0371*  upc: dl 0
04AFEC             0372*  
04AFEC             0373*  ; inputs: whatever is in the flags register
04AFEC             0374*  ; outputs: binary representation of flags
04AFEC             0375*  ;          with a header so we know which is what
04AFEC             0376*  ; destroys: nothing
04AFEC             0377*  ; preserves: everything
04AFEC             0378*  dumpFlags:
04AFEC             0379*  ; first we curse zilog for not giving direct access to flags
04AFEC F5          0380*      push af ; this is so we can send it back unharmed
04AFED F5          0381*      push af ; this is so we can pop it to hl
04AFEE             0382*  ; store everything in scratch
04AFEE 22 D7 AF 04 0383*      ld (uhl),hl
04AFF2 ED 43 DA AF 0384*      ld (ubc),bc
       04          
04AFF7 ED 53 DD AF 0385*      ld (ude),de
       04          
04AFFC DD 22 E0 AF 0386*      ld (uix),ix
       04          
04B001 FD 22 E3 AF 0387*      ld (uiy),iy
       04          
04B006             0388*  ; next we print the header
04B006 21 32 B0 04 0389*      ld hl,@header
04B00A CD E6 AC 04 0390*      call printString
04B00E E1          0391*      pop hl ; flags are now in l
04B00F 7D          0392*      ld a,l ; flags are now in a
04B010 CD AF AD 04 0393*      call printBin8
04B014 CD FB AC 04 0394*  	call printNewline
04B018             0395*  ; restore everything
04B018 2A D7 AF 04 0396*      ld hl, (uhl)
04B01C ED 4B DA AF 0397*      ld bc, (ubc)
       04          
04B021 ED 5B DD AF 0398*      ld de, (ude)
       04          
04B026 DD 2A E0 AF 0399*      ld ix, (uix)
       04          
04B02B FD 2A E3 AF 0400*      ld iy, (uiy)
       04          
04B030 F1          0401*      pop af ; send her home the way she came
04B031 C9          0402*      ret
04B032             0403*  ; Bit 7 (S): Sign flag
04B032             0404*  ; Bit 6 (Z): Zero flag
04B032             0405*  ; Bit 5 (5): Reserved (copy of bit 5 of the result)
04B032             0406*  ; Bit 4 (H): Half Carry flag
04B032             0407*  ; Bit 3 (3): Reserved (copy of bit 3 of the result)
04B032             0408*  ; Bit 2 (PV): Parity/Overflow flag
04B032             0409*  ; Bit 1 (N): Subtract flag
04B032             0410*  ; Bit 0 (C): Carry flag
04B032 53 5A 78 48 0411*  @header: db "SZxHxPNC\r\n",0 ; cr/lf and 0 terminator
       78 50 4E 43 
       0D 0A 00    
04B03D             0412*  
04B03D             0413*  ; set all the bits in the flag register
04B03D             0414*  ; more of an academic exercise than anything useful
04B03D             0415*  ; inputs; none
04B03D             0416*  ; outputs; a=0,f=255
04B03D             0417*  ; destroys: flags, hl
04B03D             0418*  ; preserves: a, because why not
04B03D             0419*  setAllFlags:
04B03D 21 FF 00 00 0420*      ld hl,255
04B041 67          0421*      ld h,a ; four cycles to preserve a is cheap
04B042 E5          0422*      push hl
04B043 F1          0423*      pop af
04B044 C9          0424*      ret
04B045             0425*  
04B045             0426*  ; reset all the bits in the flag register
04B045             0427*  ; unlike its inverse counterpart, this may actually be useful
04B045             0428*  ; inputs; none
04B045             0429*  ; outputs; a=0,f=0
04B045             0430*  ; destroys: flags, hl
04B045             0431*  ; preserves: a, because why not
04B045             0432*  resetAllFlags:
04B045 21 00 00 00 0433*      ld hl,0
04B049 67          0434*      ld h,a ; four cycles to preserve a is cheap
04B04A E5          0435*      push hl
04B04B F1          0436*      pop af
04B04C C9          0437*      ret
04B04D             0033   	include "src/asm/player.asm"
04B04D             0001*  ; ######## GAME STATE VARIABLES #######
04B04D             0002*  ; we use 24-bit values for all of these for easy use with Num2String function
04B04D 00 00 00    0003*  player_score: dl 0x000000 ; binary
04B050             0004*  ; player current health,binary
04B050             0005*  ; when < 0 player splodes
04B050             0006*  ; restores to player_max_health when new ship spawns
04B050 00 00 00    0007*  player_health: dl 0x000000 ; binary TODO: temp set at 50% for testing, set to 100 for actual game
04B053             0008*  ; max player health,binary
04B053             0009*  ; can increase with power-ups (todo)
04B053 64 00 00    0010*  player_max_health: dl 100 ; binary
04B056             0011*  ; when reaches zero,game ends
04B056             0012*  ; can increase based on TODO
04B056 03 00 00    0013*  player_lives: dl 3 ; binary
04B059             0014*  
04B059             0015*  player_health_str:  ds 8 ; Num2String buffer
04B061 00          0016*                      db 0 ; string terminator
04B062             0017*  
04B062             0018*  player_score_str:   ds 8 ; Num2String buffer
04B06A 00          0019*                      db 0 ; string terminator
04B06B             0020*  
04B06B             0021*  player_lives_str:   ds 8 ; Num2String buffer
04B073 00          0022*                      db 0 ; string terminator
04B074             0023*  
04B074             0024*  ; ######### Player Variables ##########
04B074             0025*  ; player position on the map and orientation
04B074 00          0026*  cur_floor: db 0x00 ; 0-255, corresponds to floor_num in build scripts
04B075 00          0027*  cur_room: db 0x00 ; 0-9, corresponds to room_id in build scripts
04B076 00          0028*  cur_cell: db 0x00 ; 0-255, corresponds to cell_id in build scripts
04B077 00          0029*  from_floor: db 0x00 ; 0-255, corresponds to floor_num in build scripts
04B078 00          0030*  from_room: db 0x00 ; 0-9, corresponds to room_id in build scripts
04B079 00          0031*  orientation: db 0x00 ; 0-3 north,east,south,west
04B07A 00          0032*  cur_x: db 0x00
04B07B 00          0033*  cur_y: db 0x00
04B07C 00          0034*         db 0x00 ; padding so we can read/write 24-bit registers
04B07D 00          0035*  xvel:  db 0x00
04B07E 00          0036*  yvel:  db 0x00
04B07F 00          0037*         db 0x00 ; padding
04B080 00          0038*  dy:    db 0x00
04B081 00          0039*  dx:    db 0x00
04B082 00          0040*         db 0x00 ; padding
04B083 00          0041*  avel:  db 0x00 ; player angular velocity in orientation ticks per move tick
04B084             0042*  
04B084 00          0043*  player_shot_x:      db 0x00
04B085 00          0044*  player_shot_y:      db 0x00
04B086 00          0045*                      db 0x00 ; padding
04B087 00          0046*  player_shot_xvel:   db 0x00
04B088 00          0047*  player_shot_yvel:   db 0x00
04B089 00          0048*                      db 0x00 ; padding
04B08A FF          0049*  player_shot_status: db 0xFF ; -1 = no shot, otherwise shot direction of travel
04B08B 00 00 00    0050*  player_shot_time:   dl 0x000000 ; time shot was fired from RTC
04B08E 00          0051*  player_shot_damage: db 0x00 ; damage dealt by latest shot
04B08F             0052*  
04B08F 00          0053*  player_weapons:     db 0x00 ; weapons in player's possession according to following bitmasks
04B090 00          0054*  player_weapon_active: db 0x00 ; currently active weapon according to following bitmasks
04B091             0055*  player_weapon_knife: equ %00000001
04B091             0056*  player_weapon_pistol: equ %00000010
04B091             0057*  player_weapon_machine_gun: equ %00000100
04B091             0058*  player_weapon_gatling_gun: equ %00001000
04B091 00          0059*  player_weapon_damage: db 0x00 ; damage dealt by current weapon
04B092 00 00 00    0060*  player_weapon_ui_buffer_id_small: dl 0x000000 ; bufferId for weapon UI
04B095 00 00 00    0061*  player_weapon_ui_buffer_id_large: dl 0x000000 ; bufferId for weapon UI
04B098             0062*  player_weapon_select_timer: ds 6 ; time until player can selet a new weapon in 1/120ths of a second
04B09E             0063*  player_weapon_fire_timer: ds 6 ; time until player can fire again in 1/120ths of a second
04B0A4 00 00 00    0064*  player_weapon_fire_rate: dl 0x000000 ; 1/rate of fire in 1/120ths of a second
04B0A7             0065*  
04B0A7             0066*  player_weapon_animation_timer: ds 6 ; time until next weapon animation frame in 1/120ths of a second
04B0AD 00 00 00    0067*  player_weapon_animation_frame: dl 0x000000 ; current weapon animation frame
04B0B0             0068*  player_weapon_animation_timer_reset: equ 10
04B0B0             0069*  
04B0B0             0070*  
04B0B0 00 00 00    0071*  player_ammo: dl 0x000000 ; ammo for all projectile weapons
04B0B3             0072*  player_ammo_str: ds 8 ; Num2String buffer
04B0BB 00          0073*                   db 0 ; string terminator
04B0BC             0074*  
04B0BC             0075*  ; ######### PLAYER CONSTANTS ##########
04B0BC             0076*  speed_player: equ 0x01 ; 1 map grid unit per movement tick
04B0BC             0077*  player_move_timer: ds 6 ; time until player can move again in 1/120ths of a second
04B0C2             0078*  player_move_rate: equ 120/4 ; 4 times per second
04B0C2             0079*  
04B0C2             0080*  ; ######### PLAYER SPRITE PARAMETERS ##########
04B0C2             0081*  ; uses the same offsets from its table base as the main sprite table:
04B0C2             0082*  player_start_variables: ; label marking beginning of table
04B0C2 40          0083*  player_id:               db table_max_records
04B0C3 00          0084*  player_type:             db     0x00 ; 1 bytes currently not used
04B0C4 00 00 00    0085*  player_base_bufferId:    dl 0x000000 ; 3 bytes bitmap bufferId
04B0C7 00 00 00    0086*  player_move_program:     dl 0x000000 ; 3 bytes not currently used
04B0CA 00          0087*  player_collisions:       db     0x00 ; 1 bytes bit 0 set=alive, otherwise dead, bit 1 set=just died
04B0CB 00          0088*  player_dim_x:            db     0x00 ; 1 bytes sprite width in pixels
04B0CC 00          0089*  player_dim_y:            db     0x00 ; 1 bytes sprite height in pixels
04B0CD 00 00 00    0090*  player_x:                dl 0x000000 ; 3 bytes 16.8 fractional x position in pixels
04B0D0 00 00 00    0091*  player_y:                dl 0x000000 ; 3 bytes 16.8 fractional y position in pixels
04B0D3 00 00 00    0092*  player_xvel:             dl 0x000000 ; 3 bytes x-component velocity, 16.8 fixed, pixels
04B0D6 00 00 00    0093*  player_yvel:             dl 0x000000 ; 3 bytes y-component velocity, 16.8 fixed, pixels
04B0D9 00 00 00    0094*  playervel:               dl 0x000000 ; 3 bytes velocity px/frame (16.8 fixed)
04B0DC 00 00 00    0095*  player_heading:          dl 0x000000 ; 3 bytes sprite movement direction deg256 16.8 fixed
04B0DF 00 00 00    0096*  player_orientation:      dl 0x000000 ; 3 bytes not currently used
04B0E2 00          0097*  player_animation:        db     0x00 ; 1 bytes not currently used
04B0E3 00          0098*  player_animation_timer:  db     0x00 ; 1 bytes not currently used
04B0E4             0099*  ; player_move_timer:       db     0x00 ; 1 bytes not currently used
04B0E4 00          0100*  player_move_step:        db     0x00 ; 1 bytes not currently used
04B0E5 00          0101*  player_points:           db     0x00 ; 1 bytes not currently used
04B0E6 00          0102*  player_health_damage:    db     0x00 ; 1 bytes not currently used
04B0E7             0103*  player_end_variables: ; for when we want to traverse this table in reverse
04B0E7             0104*  
04B0E7             0105*  
04B0E7             0106*  ; set initial player position
04B0E7             0107*  ; inputs: none,everything is hardcoded
04B0E7             0108*  ; outputs: player set to the first valid position on the map
04B0E7             0109*  ; destroys: a
04B0E7             0110*  player_init:
04B0E7 CD FE 64 04 0111*      call get_start_pos ; a = cell_id, d = map_y, e = map_x
04B0EB 32 76 B0 04 0112*      ld (cur_cell),a
04B0EF ED 53 7A B0 0113*      ld (cur_x),de ; implicitly populates cur_y
       04          
04B0F4 AF          0114*      xor a ; north is default orientation
04B0F5 32 79 B0 04 0115*      ld (orientation),a
04B0F9 21 1E 00 00 0116*      ld hl,player_move_rate
04B0FD FD 21 BC B0 0117*      ld iy,player_move_timer
       04          
04B102 CD 9B C0 04 0118*      call timer_set
04B106 3E 50       0119*      ld a,80 ; 80% health
04B108 32 50 B0 04 0120*      ld (player_health),a
04B10C             0121*      ; ld a,%00000001 ; knife only
04B10C 3E 0F       0122*      ld a,%00001111 ; all weapons DEBUG
04B10E 32 8F B0 04 0123*      ld (player_weapons),a
04B112 3E 01       0124*      ld a,player_weapon_knife
04B114 32 90 B0 04 0125*      ld (player_weapon_active),a
04B118 CD 7C B1 04 0126*      call player_set_weapon_parameters
04B11C FD 21 98 B0 0127*      ld iy,player_weapon_select_timer
       04          
04B121 21 00 00 00 0128*      ld hl,0 ; zero timer means player can immediately select a different weapon
04B125 3E C8       0129*      ld a,200 ; DEBUG - this is too much ammo to start with
04B127 32 B0 B0 04 0130*      ld (player_ammo),a
04B12B CD 9B C0 04 0131*      call timer_set
04B12F C9          0132*      ret
04B130             0133*  
04B130             0134*  
04B130             0135*  player_next_weapon:
04B130             0136*  ; check if select weapons timer has expired
04B130 FD 21 98 B0 0137*      ld iy,player_weapon_select_timer
       04          
04B135 CD A9 C0 04 0138*      call timer_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04B139 F0          0139*      ret p ; time left on timer so no weapon select
04B13A             0140*  ; reset weapon select timer
04B13A 21 0F 00 00 0141*      ld hl,120/8 ; 1/6 second
04B13E CD 9B C0 04 0142*      call timer_set
04B142             0143*  ; select next weapon
04B142 21 8F B0 04 0144*      ld hl,player_weapons ; hl points to player_weapons flags
04B146 ED 07       0145*      ld bc,(hl) ; bc contains bitmask of player's weapons inventory
04B148             0146*  @loop:
04B148 3A 90 B0 04 0147*      ld a,(player_weapon_active)
04B14C 07          0148*      rlca ; rotate left
04B14D 32 90 B0 04 0149*      ld (player_weapon_active),a
04B151 A6          0150*      and (hl) ; check inventory mask
04B152 28 F4       0151*      jr z,@loop
04B154 C3 7C B1 04 0152*      jp player_set_weapon_parameters
04B158             0153*  
04B158             0154*  player_previous_weapon:
04B158             0155*  ; check if select weapons timer has expired
04B158 FD 21 98 B0 0156*      ld iy,player_weapon_select_timer
       04          
04B15D CD A9 C0 04 0157*      call timer_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04B161 F0          0158*      ret p ; time left on timer so no weapon select
04B162             0159*  ; reset weapon select timer
04B162 21 0F 00 00 0160*      ld hl,120/8 ; 1/8 second
04B166 CD 9B C0 04 0161*      call timer_set
04B16A             0162*  ; select next weapon
04B16A 21 8F B0 04 0163*      ld hl,player_weapons ; hl points to player_weapons flags
04B16E ED 07       0164*      ld bc,(hl) ; bc contains bitmask of player's weapons inventory
04B170             0165*  @loop:
04B170 3A 90 B0 04 0166*      ld a,(player_weapon_active)
04B174 0F          0167*      rrca ; rotate right
04B175 32 90 B0 04 0168*      ld (player_weapon_active),a
04B179 A6          0169*      and (hl) ; check inventory mask
04B17A 28 F4       0170*      jr z,@loop
04B17C             0171*      ; fall through to player_set_weapon_parameters
04B17C             0172*  
04B17C             0173*  player_set_weapon_parameters:
04B17C FE 01       0174*      cp %00000001 ; knife
04B17E CA 95 B1 04 0175*      jp z,@knife
04B182 FE 02       0176*      cp %00000010 ; pistol
04B184 CA BD B1 04 0177*      jp z,@pistol
04B188 FE 04       0178*      cp %00000100 ; machine gun
04B18A CA E5 B1 04 0179*      jp z,@machine_gun
04B18E FE 08       0180*      cp %00001000 ; gatling gun
04B190 CA 0D B2 04 0181*      jp z,@gatling_gun
04B194 C9          0182*      ret ; if none of the above do nothing
04B195             0183*  @knife:
04B195 21 05 21 00 0184*      ld hl,BUF_UI_BJ_KNIFE_00
04B199 22 95 B0 04 0185*      ld (player_weapon_ui_buffer_id_large),hl
04B19D 21 03 20 00 0186*      ld hl,BUF_UI_LOWER_PANEL_KNIFE
04B1A1 22 92 B0 04 0187*      ld (player_weapon_ui_buffer_id_small),hl
04B1A5 3E 0F       0188*      ld a,15 ; dps = 60
04B1A7 32 91 B0 04 0189*      ld (player_weapon_damage),a
04B1AB 21 1E 00 00 0190*      ld hl,120/4 ; 4 times/second
04B1AF 22 A4 B0 04 0191*      ld (player_weapon_fire_rate),hl
04B1B3 FD 21 9E B0 0192*      ld iy,player_weapon_fire_timer
       04          
04B1B8 CD 9B C0 04 0193*      call timer_set
04B1BC C9          0194*      ret
04B1BD             0195*  @pistol:
04B1BD 21 0F 21 00 0196*      ld hl,BUF_UI_BJ_PISTOL_00
04B1C1 22 95 B0 04 0197*      ld (player_weapon_ui_buffer_id_large),hl
04B1C5 21 05 20 00 0198*      ld hl,BUF_UI_LOWER_PANEL_PISTOL
04B1C9 22 92 B0 04 0199*      ld (player_weapon_ui_buffer_id_small),hl
04B1CD             0200*  ; 1 shots/burst, 3 bursts/sec, 30 dmg/burst, 90 dmg/sec, 30 dmg/shot
04B1CD 3E 1E       0201*      ld a,30 ; damage/burst
04B1CF 32 91 B0 04 0202*      ld (player_weapon_damage),a
04B1D3 21 28 00 00 0203*      ld hl,120/3 ; 3 bursts/second
04B1D7 22 A4 B0 04 0204*      ld (player_weapon_fire_rate),hl
04B1DB FD 21 9E B0 0205*      ld iy,player_weapon_fire_timer
       04          
04B1E0 CD 9B C0 04 0206*      call timer_set
04B1E4 C9          0207*      ret
04B1E5             0208*  @machine_gun:
04B1E5 21 0A 21 00 0209*      ld hl,BUF_UI_BJ_MACHINE_GUN_00
04B1E9 22 95 B0 04 0210*      ld (player_weapon_ui_buffer_id_large),hl
04B1ED 21 04 20 00 0211*      ld hl,BUF_UI_LOWER_PANEL_MACHINE_GUN
04B1F1 22 92 B0 04 0212*      ld (player_weapon_ui_buffer_id_small),hl
04B1F5             0213*  ; 4 shots/burst, 3 bursts/sec, 80 dmg/burst, 240 dmg/sec, 20 dmg/shot
04B1F5 3E 50       0214*      ld a,80 ; damage/burst
04B1F7 32 91 B0 04 0215*      ld (player_weapon_damage),a
04B1FB 21 28 00 00 0216*      ld hl,40 ; 3 bursts/second
04B1FF 22 A4 B0 04 0217*      ld (player_weapon_fire_rate),hl
04B203 FD 21 9E B0 0218*      ld iy,player_weapon_fire_timer
       04          
04B208 CD 9B C0 04 0219*      call timer_set
04B20C C9          0220*      ret
04B20D             0221*  @gatling_gun:
04B20D 21 00 21 00 0222*      ld hl,BUF_UI_BJ_GATLING_00
04B211 22 95 B0 04 0223*      ld (player_weapon_ui_buffer_id_large),hl
04B215 21 02 20 00 0224*      ld hl,BUF_UI_LOWER_PANEL_GATLING
04B219 22 92 B0 04 0225*      ld (player_weapon_ui_buffer_id_small),hl
04B21D             0226*  ; 8 shots/burst, 3 bursts/sec, 120 dmg/burst, 360 dmg/sec, 15 dmg/shot
04B21D 3E 78       0227*      ld a,120 ; damage/burst
04B21F 32 91 B0 04 0228*      ld (player_weapon_damage),a
04B223 21 28 00 00 0229*      ld hl,40 ; 3 bursts/second
04B227 22 A4 B0 04 0230*      ld (player_weapon_fire_rate),hl
04B22B FD 21 9E B0 0231*      ld iy,player_weapon_fire_timer
       04          
04B230 CD 9B C0 04 0232*      call timer_set
04B234 C9          0233*      ret
04B235             0234*  
04B235             0235*  ; modifies the players health by a set amount
04B235             0236*  ; inputs: a is the signed amount to modify health
04B235             0237*  player_mod_health:
04B235 21 50 B0 04 0238*      ld hl,player_health
04B239 86          0239*      add a,(hl)
04B23A 77          0240*      ld (hl),a
04B23B C9          0241*      ret
04B23C             0242*  
04B23C             0243*  ; modifies the players score by a set amount
04B23C             0244*  ; inputs: a is the signed amount to modify score
04B23C             0245*  player_mod_score:
04B23C 21 4D B0 04 0246*      ld hl,player_score
04B240 86          0247*      add a,(hl)
04B241 77          0248*      ld (hl),a
04B242 C9          0249*      ret
04B243             0250*  
04B243             0251*  ; modifies the players ammo by a set amount
04B243             0252*  ; inputs: a is the signed amount to modify score
04B243             0253*  player_mod_ammo:
04B243 21 B0 B0 04 0254*      ld hl,player_ammo
04B247 86          0255*      add a,(hl)
04B248 77          0256*      ld (hl),a
04B249 C9          0257*      ret
04B24A             0258*  
04B24A             0259*  player_shoot_knife:
04B24A             0260*      ; check whether the player hit anything
04B24A 3A 79 B0 04 0261*      ld a,(orientation) ; direction knife is moving
04B24E 5F          0262*      ld e,a
04B24F 16 01       0263*      ld d,1 ; shot "velocity" in map units
04B251 CD EC 63 04 0264*      call get_dx_dy ; d,e = dy,dx
04B255 ED 53 87 B0 0265*      ld (player_shot_xvel),de ; implicity populates yvel
       04          
04B25A 2A 7A B0 04 0266*      ld hl,(cur_x) ; h,l = player y,x
04B25E 22 84 B0 04 0267*      ld (player_shot_x),hl ; initial shot position
04B262 ED 5B 87 B0 0268*      ld de,(player_shot_xvel) ; d,e = shot yvel,xvel
       04          
04B267 2A 84 B0 04 0269*      ld hl,(player_shot_x) ; h,l = player shot y,x
04B26B             0270*      ; bump bullet position one map unit in direction of travel
04B26B 7D          0271*      ld a,l ; player shot x
04B26C 83          0272*      add a,e ; add xvel
04B26D 6F          0273*      ld l,a ; save new x
04B26E 7C          0274*      ld a,h ; player shot y
04B26F 82          0275*      add a,d ; add yvel
04B270 67          0276*      ld h,a ; save new y
04B271 22 84 B0 04 0277*      ld (player_shot_x),hl ; and save that position
04B275 EB          0278*      ex de,hl ; d,e = bullet y,x
04B276 CD C7 63 04 0279*      call get_cell_from_coords ; ix = pointer to cell_status lut; a = obj_id, bc = cell_id
04B27A             0280*  ; check whether target cell contains a sprite
04B27A DD 7E 03    0281*      ld a,(ix+map_sprite_id)
04B27D FE FF       0282*      cp 255 ; value if not sprite
04B27F C8          0283*      ret z ; if we hit a non-sprite, we're done
04B280             0284*  ; is a sprite so run its "hurt" behavior routine
04B280 CD B1 9D 04 0285*      call sprite_set_pointer
04B284 3E 02       0286*      ld a,sp_hurt
04B286 CD 7F 9E 04 0287*      call do_sprite_behavior ; a = sprite behavior return code
04B28A C9          0288*      ret
04B28B             0289*  
04B28B             0290*  player_shoot_pistol:
04B28B 3E FF       0291*      ld a,-1
04B28D CD 43 B2 04 0292*      call player_mod_ammo
04B291 CD 19 B7 04 0293*      call sfx_play_shot_pistol
04B295 C3 B5 B2 04 0294*      jp player_move_bullet
04B299             0295*  
04B299             0296*  player_shoot_machine_gun:
04B299 3E FC       0297*      ld a,-4
04B29B CD 43 B2 04 0298*      call player_mod_ammo
04B29F CD 29 B7 04 0299*      call sfx_play_shot_machine_gun_burst
04B2A3 C3 B5 B2 04 0300*      jp player_move_bullet
04B2A7             0301*  
04B2A7             0302*  player_shoot_gatling_gun:
04B2A7 3E F8       0303*      ld a,-8
04B2A9 CD 43 B2 04 0304*      call player_mod_ammo
04B2AD CD 39 B7 04 0305*      call sfx_play_shot_gatling_burst
04B2B1 C3 B5 B2 04 0306*      jp player_move_bullet
04B2B5             0307*  
04B2B5             0308*  player_move_bullet:
04B2B5             0309*      ; check whether the player hit anything
04B2B5 3A 79 B0 04 0310*      ld a,(orientation) ; direction shot is moving
04B2B9 32 8A B0 04 0311*      ld (player_shot_status),a ; save shot direction -- indicates live shot in flight
04B2BD 5F          0312*      ld e,a
04B2BE 16 01       0313*      ld d,1 ; shot "velocity" in map units
04B2C0 CD EC 63 04 0314*      call get_dx_dy ; d,e = dy,dx
04B2C4 ED 53 87 B0 0315*      ld (player_shot_xvel),de ; implicity populates yvel
       04          
04B2C9 2A 7A B0 04 0316*      ld hl,(cur_x) ; h,l = player y,x
04B2CD 22 84 B0 04 0317*      ld (player_shot_x),hl ; initial shot position
04B2D1 06 05       0318*      ld b,view_distance ; loop counter so player can't shoot past view distance
04B2D3             0319*  @loop:
04B2D3 C5          0320*      push bc ; save loop counter
04B2D4 ED 5B 87 B0 0321*      ld de,(player_shot_xvel) ; d,e = shot yvel,xvel
       04          
04B2D9 2A 84 B0 04 0322*      ld hl,(player_shot_x) ; h,l = player shot y,x
04B2DD             0323*      ; bump bullet position one map unit in direction of travel
04B2DD 7D          0324*      ld a,l ; player shot x
04B2DE 83          0325*      add a,e ; add xvel
04B2DF 6F          0326*      ld l,a ; save new x
04B2E0 7C          0327*      ld a,h ; player shot y
04B2E1 82          0328*      add a,d ; add yvel
04B2E2 67          0329*      ld h,a ; save new y
04B2E3 22 84 B0 04 0330*      ld (player_shot_x),hl ; and save that position
04B2E7 EB          0331*      ex de,hl ; d,e = bullet y,x
04B2E8 CD C7 63 04 0332*      call get_cell_from_coords ; ix = pointer to cell_status lut; a = obj_id, bc = cell_id
04B2EC             0333*  ; check whether target cell contains a sprite
04B2EC DD 7E 03    0334*      ld a,(ix+map_sprite_id)
04B2EF FE FF       0335*      cp 255 ; value if not sprite
04B2F1 28 14       0336*      jr z,@not_sprite
04B2F3             0337*  ; is a sprite so run its "hurt" behavior routine
04B2F3 CD B1 9D 04 0338*      call sprite_set_pointer
04B2F7 3E 02       0339*      ld a,sp_hurt
04B2F9 CD 7F 9E 04 0340*      call do_sprite_behavior ; a = sprite behavior return code
04B2FD 3A 8A B0 04 0341*      ld a,(player_shot_status)
04B301 FE FF       0342*      cp 255 ; value if shot hit a shootable sprite
04B303 28 10       0343*      jr z,@stop_bullet ; if we hit a shootable sprite, we're done
04B305 18 16       0344*      jr @move_bullet ; otherwise keep moving bullet
04B307             0345*  @not_sprite:
04B307 ED 5B 87 B0 0346*      ld de,(player_shot_xvel) ; restore yvel,xvel to d,e
       04          
04B30C             0347*  ; read map type/status mask from target cell
04B30C DD 7E 00    0348*      ld a,(ix+map_type_status)
04B30F E6 03       0349*      and %00000011 ; mask off everything but the render type mask bits
04B311             0350*  ; branch on the values in the bitmask
04B311 FE 01       0351*      cp render_type_floor
04B313 28 08       0352*      jr z,@move_bullet ; keep going if map cell is a floor
04B315             0353*  @stop_bullet:
04B315 C1          0354*      pop bc ; dummy pop to balance stack
04B316 3E FF       0355*      ld a,255
04B318 32 8A B0 04 0356*      ld (player_shot_status),a ; set shot status to -1 to indicate shot is done
04B31C C9          0357*      ret ; combat ended
04B31D             0358*  @move_bullet:
04B31D C1          0359*      pop bc ; restore loop counter
04B31E 10 B3       0360*      djnz @loop ; keep moving bullet if we have more distance to cover
04B320 3E FF       0361*      ld a,255
04B322 32 8A B0 04 0362*      ld (player_shot_status),a ; set shot status to -1 to indicate shot is done
04B326 C9          0363*      ret ; combat ended
04B327             0364*  
04B327             0365*  player_shoot:
04B327             0366*  ; check if fire weapons timer has expired
04B327 FD 21 9E B0 0367*      ld iy,player_weapon_fire_timer
       04          
04B32C CD A9 C0 04 0368*      call timer_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04B330 F0          0369*      ret p ; timer not expired so don't fire weapon
04B331             0370*  ; reset fire weapon timer
04B331 FD 21 9E B0 0371*      ld iy,player_weapon_fire_timer ; DEBUG - we should not need this?
       04          
04B336 2A A4 B0 04 0372*      ld hl,(player_weapon_fire_rate)
04B33A CD 9B C0 04 0373*      call timer_set
04B33E             0374*  ; check animation frame for zero
04B33E 21 AD B0 04 0375*      ld hl,player_weapon_animation_frame
04B342 7E          0376*      ld a,(hl)
04B343 A7          0377*      and a
04B344 20 0E       0378*      jr nz,@shoot ; if not zero, we're already in the middle of an animation
04B346 34          0379*      inc (hl) ; is zero so bump to first animation frame
04B347             0380*  ; set animation timer
04B347 21 0A 00 00 0381*      ld hl,player_weapon_animation_timer_reset
04B34B FD 21 A7 B0 0382*      ld iy,player_weapon_animation_timer
       04          
04B350 CD 9B C0 04 0383*      call timer_set
04B354             0384*  @shoot:
04B354             0385*  ; roll for damage modifier
04B354 CD 22 B5 04 0386*      call rand_8 ; a is a bitmask we apply to the weapon's dmg/burst
04B358 21 91 B0 04 0387*      ld hl,player_weapon_damage
04B35C A6          0388*      and a,(hl) ; a contains modified damage value
04B35D ED 44       0389*      neg ; so we can add the negative
04B35F 32 8E B0 04 0390*      ld (player_shot_damage),a ; pass shot damage to sprite hurt routine
04B363             0391*  ; determine active weapon and shoot it
04B363 3A 90 B0 04 0392*      ld a,(player_weapon_active)
04B367 FE 02       0393*      cp player_weapon_pistol
04B369 CA 8B B2 04 0394*      jp z,player_shoot_pistol
04B36D FE 04       0395*      cp player_weapon_machine_gun
04B36F CA 99 B2 04 0396*      jp z,player_shoot_machine_gun
04B373 FE 08       0397*      cp player_weapon_gatling_gun
04B375 CA A7 B2 04 0398*      jp z,player_shoot_gatling_gun
04B379 FE 01       0399*      cp player_weapon_knife
04B37B CA 4A B2 04 0400*      jp z,player_shoot_knife
04B37F C9          0401*      ret
04B380             0402*  
04B380             0403*  ; process player keyboard input
04B380             0404*  ; Inputs: player_x/y set at desired position
04B380             0405*  ; Returns: player position updated
04B380             0406*  ; Destroys: probably everything
04B380             0407*  player_input:
04B380             0408*  ; check weapon anmation frame for zero
04B380 3A AD B0 04 0409*      ld a,(player_weapon_animation_frame)
04B384 E6 03       0410*      and 3 ; modulo 4
04B386 32 AD B0 04 0411*      ld (player_weapon_animation_frame),a
04B38A 28 1F       0412*      jr z,@get_input
04B38C             0413*  ; animation frame is not zero so check animation timer
04B38C FD 21 A7 B0 0414*      ld iy,player_weapon_animation_timer
       04          
04B391 CD A9 C0 04 0415*      call timer_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04B395 F2 AB B3 04 0416*      jp p,@get_input ; time left on timer so no animation
04B399             0417*  ; bump animation frame
04B399 21 AD B0 04 0418*      ld hl,player_weapon_animation_frame
04B39D 34          0419*      inc (hl) ; next frame
04B39E             0420*  ; reset animation timer
04B39E FD 21 A7 B0 0421*      ld iy,player_weapon_animation_timer ; DEBUG - we should not need this?
       04          
04B3A3 21 0A 00 00 0422*      ld hl,player_weapon_animation_timer_reset
04B3A7 CD 9B C0 04 0423*      call timer_set
04B3AB             0424*  
04B3AB             0425*  @get_input:
04B3AB             0426*  ; reset player component velocities to zero as the default
04B3AB 21 00 00 00 0427*      ld hl,0
04B3AF 22 7D B0 04 0428*      ld (xvel),hl ; implicitly sets yvel
04B3B3 AF          0429*      xor a ;
04B3B4 32 83 B0 04 0430*      ld (avel),a ; set player angular velocity to zero as default
04B3B8             0431*  
04B3B8             0432*  ; check for keypresses and branch accordingly
04B3B8             0433*      MOSCALL	mos_getkbmap ;ix = pointer to MOS virtual keys table
04B3B8 3E 1E       0001*M 			LD	A, function
04B3BA 5B CF       0002*M 			RST.LIL	08h
04B3BC             0434*  
04B3BC             0435*  ; CHECK WEAPON CONTROL KEYS
04B3BC             0436*  ; 58 Up player selects next weapon
04B3BC DD CB 07 4E 0437*      bit 1,(ix+7)
04B3C0 28 08       0438*      jr z,@Up
04B3C2 DD E5       0439*      push ix ; it gets clobbered by the weapon select routine
04B3C4 CD 30 B1 04 0440*      call player_next_weapon
04B3C8 DD E1       0441*      pop ix
04B3CA             0442*  @Up:
04B3CA             0443*  
04B3CA             0444*  ; 42 Down
04B3CA DD CB 05 4E 0445*      bit 1,(ix+5)
04B3CE 28 08       0446*      jr z,@Down
04B3D0 DD E5       0447*      push ix ; it gets clobbered by the weapon select routine
04B3D2 CD 58 B1 04 0448*      call player_previous_weapon
04B3D6 DD E1       0449*      pop ix
04B3D8             0450*  @Down:
04B3D8             0451*  
04B3D8             0452*  ; =====================
04B3D8             0453*  ; 99 Space FIRE ZEE MISSILES!!!111
04B3D8 DD CB 0C 56 0454*      bit 2,(ix+12)
04B3DC 28 08       0455*      jr z,@Space
04B3DE DD E5       0456*      push ix ; it gets clobbered by the weapon firing
04B3E0 CD 27 B3 04 0457*      call player_shoot
04B3E4 DD E1       0458*      pop ix ; restore ix
04B3E6             0459*  @Space:
04B3E6             0460*  
04B3E6             0461*  ; CHECK MOVEMENT KEYS
04B3E6             0462*  ; non-zero means no movement key was pressed
04B3E6 3E FF       0463*      ld a,-1
04B3E8             0464*  
04B3E8             0465*  ; 34 W player moves forward
04B3E8 DD CB 04 4E 0466*      bit 1,(ix+4)
04B3EC 28 07       0467*      jr z,@W
04B3EE 3E 01       0468*      ld a,speed_player ; this is *camera* relative, not map relative, so y-axis is NOT inverted!
04B3F0 32 7E B0 04 0469*      ld (yvel),a
04B3F4 AF          0470*      xor a
04B3F5             0471*  @W:
04B3F5             0472*  
04B3F5             0473*  ; 82 S player moves backward
04B3F5 DD CB 0A 4E 0474*      bit 1,(ix+10)
04B3F9 28 0C       0475*      jr z,@S
04B3FB 16 FF       0476*      ld d,-speed_player ; this is *camera* relative, not map relative, so y-axis is NOT inverted!
04B3FD 3A 7E B0 04 0477*      ld a,(yvel)
04B401 82          0478*      add a,d
04B402 32 7E B0 04 0479*      ld (yvel),a
04B406 AF          0480*      xor a
04B407             0481*  @S:
04B407             0482*  
04B407             0483*  ; 66 A plyer moves left
04B407 DD CB 08 4E 0484*      bit 1,(ix+8)
04B40B 28 07       0485*      jr z,@A
04B40D 3E FF       0486*      ld a,-speed_player ; no funky axis conversion here
04B40F 32 7D B0 04 0487*      ld (xvel),a
04B413 AF          0488*      xor a
04B414             0489*  @A:
04B414             0490*  
04B414             0491*  ; 51 D player moves right
04B414 DD CB 06 56 0492*      bit 2,(ix+6)
04B418 28 0C       0493*      jr z,@D
04B41A 16 01       0494*      ld d,speed_player ; no funky axis conversion here
04B41C 3A 7D B0 04 0495*      ld a,(xvel)
04B420 82          0496*      add a,d
04B421 32 7D B0 04 0497*      ld (xvel),a
04B425 AF          0498*      xor a
04B426             0499*  @D:
04B426             0500*  
04B426             0501*  ; 26 Left player rotates anti-clockwise
04B426 DD CB 03 4E 0502*      bit 1,(ix+3)
04B42A 28 06       0503*      jr z,@Left
04B42C 21 83 B0 04 0504*      ld hl,avel
04B430 35          0505*      dec (hl)
04B431 AF          0506*      xor a
04B432             0507*  @Left:
04B432             0508*  
04B432             0509*  ; 122 Right player rotates clockwise
04B432 DD CB 0F 4E 0510*      bit 1,(ix+15)
04B436 28 06       0511*      jr z,@Right
04B438 21 83 B0 04 0512*      ld hl,avel
04B43C 34          0513*      inc (hl)
04B43D AF          0514*      xor a
04B43E             0515*  @Right:
04B43E             0516*  
04B43E             0517*  ; KEYPRESS DETECTION DONE
04B43E A7          0518*      and a ; this will zero if player pressed a movement key
04B43F C0          0519*      ret nz ; non zero so no key pressed
04B440             0520*  ; check move timer
04B440 FD 21 BC B0 0521*      ld iy,player_move_timer
       04          
04B445 CD A9 C0 04 0522*      call timer_get ; hl is time left in 120ths of a second, sign flag or zero flag set if expired
04B449 F0          0523*      ret p ; time left on timer so no movement
04B44A             0524*  ; reset_move_timer
04B44A 21 1E 00 00 0525*      ld hl,player_move_rate
04B44E FD 21 BC B0 0526*      ld iy,player_move_timer; DEBUG - we should not need this?
       04          
04B453 CD 9B C0 04 0527*      call timer_set
04B457             0528*  ; move player according to velocities set by keypresses
04B457 ED 5B 7D B0 0529*      ld de,(xvel) ; d = yvel, e = xvel
       04          
04B45C 3A 83 B0 04 0530*      ld a,(avel)
04B460 21 79 B0 04 0531*      ld hl,orientation
04B464 86          0532*      add a,(hl)
04B465 E6 03       0533*      and 0x03 ; modulo 4
04B467 77          0534*      ld (hl),a
04B468 CD 2B 64 04 0535*      call trans_dx_dy ; d = dy, e = dx
04B46C ED 53 81 B0 0536*      ld (dx),de
       04          
04B471 3A 7A B0 04 0537*      ld a,(cur_x)
04B475 83          0538*      add a,e
04B476 5F          0539*      ld e,a
04B477 3A 7B B0 04 0540*      ld a,(cur_y)
04B47B 82          0541*      add a,d
04B47C 57          0542*      ld d,a
04B47D ED 53 7D B0 0543*      ld (xvel),de ; save yvel,xvel from d,e
       04          
04B482 CD C7 63 04 0544*      call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is cell_id
04B486             0545*  ; check whether target cell contains a sprite
04B486 DD 7E 03    0546*      ld a,(ix+map_sprite_id)
04B489 FE FF       0547*      cp 255 ; value if not sprite
04B48B 28 0A       0548*      jr z,@not_sprite
04B48D             0549*  ; is a sprite so run its "use" behavior routine
04B48D CD B1 9D 04 0550*      call sprite_set_pointer
04B491 3E 01       0551*      ld a,sp_use
04B493 CD 7F 9E 04 0552*      call do_sprite_behavior
04B497             0553*  ; fall through because we still need to check out what's going on in the target cell
04B497             0554*  @not_sprite:
04B497 ED 5B 7D B0 0555*      ld de,(xvel) ; restore yvel,xvel to d,e
       04          
04B49C             0556*  ; read map type/status mask from target cell
04B49C DD 7E 00    0557*      ld a,(ix+map_type_status)
04B49F 47          0558*      ld b,a ; b = target cell type/status
04B4A0             0559*  ; branch on the values in the bitmask
04B4A0 3E 80       0560*      ld a,cell_is_door
04B4A2 A0          0561*      and b
04B4A3 20 06       0562*      jr nz,@door
04B4A5 3E 40       0563*      ld a,cell_is_wall
04B4A7 A0          0564*      and b
04B4A8 C0          0565*      ret nz ; can't move thru walls
04B4A9 18 2B       0566*      jr @move_it ; if it wasn't a wall or door, move as normal
04B4AB             0567*  @door:
04B4AB ED 5B 81 B0 0568*      ld de,(dx) ; d = dy, e = dx
       04          
04B4B0 CD 19 64 04 0569*      call get_dir_from_dy_dx ; a is direction of attempted movement
04B4B4 F5          0570*      push af
04B4B5 16 02       0571*      ld d,2 ; 1 past the door in the movement direction
04B4B7 5F          0572*      ld e,a
04B4B8 CD EC 63 04 0573*      call get_dx_dy
04B4BC ED 53 81 B0 0574*      ld (dx),de
       04          
04B4C1 F1          0575*      pop af
04B4C2 5F          0576*      ld e,a
04B4C3 16 02       0577*      ld d,2
04B4C5 ED 4B 7A B0 0578*      ld bc,(cur_x)
       04          
04B4CA CD B9 63 04 0579*      call get_neighbor ; ix points to cell defs/status, a is target cell current obj_id
04B4CE DD 7E 00    0580*      ld a,(ix+map_type_status)
04B4D1 47          0581*      ld b,a ; b = target cell type/status
04B4D2 3E 40       0582*      ld a,cell_is_wall
04B4D4 A0          0583*      and b
04B4D5 C0          0584*      ret nz ; can't move thru walls
04B4D6             0585*      ; fall through to @move_it
04B4D6             0586*  @move_it:
04B4D6             0587*  ; we are cleared for movement so update player position
04B4D6 11 00 00 00 0588*      ld de,0 ; make sure deu is zero
04B4DA ED 4B 81 B0 0589*      ld bc,(dx) ; b = dy, c = dx
       04          
04B4DF 3A 7A B0 04 0590*      ld a,(cur_x)
04B4E3 81          0591*      add a,c
04B4E4 5F          0592*      ld e,a
04B4E5 32 7A B0 04 0593*      ld (cur_x),a
04B4E9 3A 7B B0 04 0594*      ld a,(cur_y)
04B4ED 80          0595*      add a,b
04B4EE 57          0596*      ld d,a
04B4EF 32 7B B0 04 0597*      ld (cur_y),a
04B4F3 C9          0598*      ret
04B4F4             0034   	include "src/asm/maths.asm"
04B4F4 00 00 00 00 0001*  add_bcd_arg1: db #00,#00,#00,#00
04B4F8 00 00 00 00 0002*  add_bcd_arg2: db #00,#00,#00,#00
04B4FC             0003*  
04B4FC             0004*  ; set bcd values in a scratch memory address from registers bcde
04B4FC             0005*  ; input: hl; scratch address,bcde; 8-place bcd number
04B4FC             0006*  ; destroys ; hl
04B4FC             0007*  set_bcd:
04B4FC 73          0008*      ld (hl),e
04B4FD 23          0009*      inc hl
04B4FE 72          0010*      ld (hl),d
04B4FF 23          0011*      inc hl
04B500 71          0012*      ld (hl),c
04B501 23          0013*      inc hl
04B502 70          0014*      ld (hl),b
04B503 C9          0015*      ret
04B504             0016*  
04B504             0017*  ; load bcd values from a scratch memory address to bcde
04B504             0018*  ; input: hl; scratch address
04B504             0019*  ; output: bcde; 8-place bcd number
04B504             0020*  ; destroys: hl
04B504             0021*  get_bcd:
04B504 5E          0022*      ld e,(hl)
04B505 23          0023*      inc hl
04B506 56          0024*      ld d,(hl)
04B507 23          0025*      inc hl
04B508 4E          0026*      ld c,(hl)
04B509 23          0027*      inc hl
04B50A 46          0028*      ld b,(hl)
04B50B C9          0029*      ret
04B50C             0030*  
04B50C             0031*  ; BCD addition
04B50C             0032*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
04B50C             0033*  ;       a is the number of bytes holding each number (number of places/2)
04B50C             0034*  ; outputs: (hl) + (de) --> (hl)
04B50C             0035*  ; destroys: a,b,de,hl
04B50C             0036*  add_bcd:
04B50C 47          0037*      ld b,a ; loop counter
04B50D AF          0038*      xor a ; reset a, clear carry flag
04B50E             0039*  adcec:
04B50E 1A          0040*      ld a,(de) ; addend to acc
04B50F 8E          0041*      adc a,(hl) ; add (hl) to acc
04B510 27          0042*      daa ; adjust result to bcd
04B511 77          0043*      ld (hl),a ; store result
04B512 23          0044*      inc hl ; advance memory pointers
04B513 13          0045*      inc de
04B514 10 F8       0046*      djnz adcec ; loop until b == 0
04B516 C9          0047*      ret
04B517             0048*  
04B517             0049*  ; BCD subtraction
04B517             0050*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
04B517             0051*  ;       a is the number of bytes holding each number (number of places/2)
04B517             0052*  ; outputs: (hl) - (de) --> (hl)
04B517             0053*  ; destroys: a,b,de,hl
04B517             0054*  sub_bcd:
04B517 47          0055*      ld b,a ; loop counter
04B518 AF          0056*      xor a ; reset a,clear carry flag
04B519             0057*  subdec:
04B519 1A          0058*      ld a,(de) ; subtrahend to acc
04B51A 9E          0059*      sbc a,(hl) ; subtract (hl) from acc
04B51B 27          0060*      daa ; adjust result to bcd
04B51C 77          0061*      ld (hl),a ; store result
04B51D 23          0062*      inc hl ; advance memory pointers
04B51E 13          0063*      inc de
04B51F 10 F8       0064*      djnz subdec ; loop until b == 0
04B521 C9          0065*      ret
04B522             0066*  
04B522             0067*  ; http://www.z80.info/pseudo-random.txt
04B522             0068*  rand_8:
04B522 C5          0069*      push bc
04B523 3A 36 B5 04 0070*      ld a,(r_seed)
04B527 4F          0071*      ld c,a
04B528             0072*  
04B528 0F          0073*      rrca ; multiply by 32
04B529 0F          0074*      rrca
04B52A 0F          0075*      rrca
04B52B EE 1F       0076*      xor 0x1f
04B52D             0077*  
04B52D 81          0078*      add a,c
04B52E DE FF       0079*      sbc a,255 ; carry
04B530             0080*  
04B530 32 36 B5 04 0081*      ld (r_seed),a
04B534 C1          0082*      pop bc
04B535 C9          0083*      ret
04B536 50          0084*  r_seed: defb $50
04B537             0035   	include "src/asm/img_load.asm"
04B537 00 00 00    0001*  cur_file_idx: dl 0
04B53A 00 00 00    0002*  cur_filename: dl 0
04B53D 00 00 00    0003*  cur_buffer_id: dl 0
04B540 00 00 00    0004*  cur_buffer_id_lut: dl 0
04B543 00 00 00    0005*  cur_load_jump_table: dl 0
04B546             0006*  
04B546             0007*  img_load_init:
04B546             0008*  ; initialize bj's position parameters
04B546 21 00 00 00 0009*  	ld hl,0
04B54A 22 84 B6 04 0010*  	ld (bj_yvel),hl
04B54E             0011*  
04B54E 21 2D 00 00 0012*      ld hl,45
04B552 22 87 B6 04 0013*  	ld (bj_y_cur),hl
04B556 22 8A B6 04 0014*  	ld (bj_y_min),hl
04B55A 22 8D B6 04 0015*      ld (bj_y_max),hl
04B55E             0016*  
04B55E 21 01 00 00 0017*  	ld hl,1
04B562 22 78 B6 04 0018*  	ld (bj_xvel),hl
04B566             0019*  
04B566 21 0A 00 00 0020*  	ld hl,10
04B56A 22 7B B6 04 0021*  	ld (bj_x_cur),hl
04B56E 22 7E B6 04 0022*  	ld (bj_x_min),hl
04B572             0023*  
04B572 21 C8 00 00 0024*  	ld hl,320-120
04B576 22 81 B6 04 0025*  	ld (bj_x_max),hl
04B57A             0026*  
04B57A C9          0027*      ret
04B57B             0028*  
04B57B             0029*  ; inputs: bc is the number of images to load, cur_buffer_id_lut and cur_load_jump_table set to the address of the first entry in the respective lookup tables
04B57B             0030*  img_load_main:
04B57B 21 00 00 00 0031*      ld hl,0
04B57F 22 37 B5 04 0032*      ld (cur_file_idx),hl
04B583             0033*  img_load_main_loop:
04B583             0034*  ; back up loop counter
04B583 C5          0035*      push bc
04B584             0036*  ; load the next panel
04B584 CD DC B5 04 0037*      call load_next_panel
04B588             0038*  ; draw all the things
04B588 CD 90 B6 04 0039*      call tmp_draw_all_the_things
04B58C             0040*  ; draw the most recently loaded panel
04B58C 2A 3D B5 04 0041*  	ld hl,(cur_buffer_id)
04B590 CD 7E A7 04 0042*  	call vdu_buff_select
04B594 01 00 00 00 0043*  	ld bc,0
04B598 11 00 00 00 0044*  	ld de,0
04B59C CD 4F A9 04 0045*  	call vdu_plot_bmp
04B5A0             0046*  ; move bj
04B5A0 CD 18 B6 04 0047*  	call move_bj
04B5A4             0048*  ; print welcome message
04B5A4 DD 21 A0 7A 0049*  	ld ix,font_itc_honda
       04          
04B5A9 21 FE C0 04 0050*  	ld hl,hello_world
04B5AD 01 20 00 00 0051*  	ld bc,32
04B5B1 11 02 00 00 0052*  	ld de,2
04B5B5 CD A4 63 04 0053*  	call font_bmp_print
04B5B9             0054*  ; print current filename
04B5B9 CD 15 A6 04 0055*  	call vdu_cls
04B5BD 2A 3A B5 04 0056*  	ld hl,(cur_filename)
04B5C1 CD E6 AC 04 0057*  	call printString
04B5C5 CD FB AC 04 0058*  	call printNewline
04B5C9             0059*  ; flip screen
04B5C9 CD E4 A7 04 0060*      call vdu_flip
04B5CD             0061*  ; decrement loop counter
04B5CD C1          0062*      pop bc
04B5CE 0B          0063*  	dec bc
04B5CF             0064*  ; ; DEBUG: DUMP REGISTERS
04B5CF             0065*  ; 	push bc
04B5CF             0066*  ; 	call dumpRegistersHex
04B5CF             0067*  ; 	call vdu_flip
04B5CF             0068*  ; 	pop bc
04B5CF             0069*  ; ; END DEBUG
04B5CF 79          0070*      ld a,c
04B5D0 B7          0071*      or a
04B5D1 C2 83 B5 04 0072*      jp nz,img_load_main_loop
04B5D5 78          0073*      ld a,b
04B5D6 B7          0074*      or a
04B5D7 C2 83 B5 04 0075*      jp nz,img_load_main_loop
04B5DB C9          0076*      ret
04B5DC             0077*  
04B5DC             0078*  load_next_panel:
04B5DC             0079*  ; look up the load routine for the current file index
04B5DC 2A 37 B5 04 0080*  	ld hl,(cur_file_idx)
04B5E0 29          0081*  	add hl,hl ; multiply current index by 2 ...
04B5E1 ED 5B 37 B5 0082*  	ld de,(cur_file_idx)
       04          
04B5E6 19          0083*  	add hl,de ; ... now by 3
04B5E7 ED 5B 43 B5 0084*  	ld de,(cur_load_jump_table) ; tack it on to the base address of the jump table
       04          
04B5EC 19          0085*  	add hl,de
04B5ED ED 27       0086*  	ld hl,(hl) ; hl is pointing to load routine address
04B5EF 22 F4 B5 04 0087*  	ld (@jump_addr+1),hl ; self-modifying code ...
04B5F3             0088*  @jump_addr:
04B5F3 CD 00 00 00 0089*  	call 0 ; call the panel load routine
04B5F7             0090*  ; look up the buffer id for the current file
04B5F7 2A 37 B5 04 0091*  	ld hl,(cur_file_idx)
04B5FB 29          0092*  	add hl,hl ; multiply current index by 2 ...
04B5FC ED 5B 37 B5 0093*  	ld de,(cur_file_idx)
       04          
04B601 19          0094*  	add hl,de ; ... now by 3
04B602 ED 5B 40 B5 0095*  	ld de,(cur_buffer_id_lut) ; tack it on to the base address of the lookup table
       04          
04B607 19          0096*  	add hl,de
04B608 ED 27       0097*  	ld hl,(hl)
04B60A 22 3D B5 04 0098*  	ld (cur_buffer_id),hl
04B60E             0099*  ; bump the current file index
04B60E 2A 37 B5 04 0100*  	ld hl,(cur_file_idx)
04B612 23          0101*  	inc hl
04B613 22 37 B5 04 0102*  	ld (cur_file_idx),hl
04B617 C9          0103*  	ret
04B618             0104*  
04B618             0105*  move_bj:
04B618             0106*  ; activate bj bitmap
04B618 21 00 20 00 0107*  	ld hl, BUF_UI_BJ_120_120
04B61C CD 7E A7 04 0108*  	call vdu_buff_select
04B620             0109*  ; update position based on velocity parameters
04B620 2A 7B B6 04 0110*  	ld hl, (bj_x_cur)
04B624 ED 5B 78 B6 0111*  	ld de, (bj_xvel)
       04          
04B629 19          0112*  	add hl, de
04B62A 22 7B B6 04 0113*  	ld (bj_x_cur), hl
04B62E EB          0114*  	ex de,hl ; store x_cur in de
04B62F             0115*  ; check if we're < x_min
04B62F 2A 7E B6 04 0116*  	ld hl,(bj_x_min)
04B633 AF          0117*  	xor a ; clear carry
04B634 ED 52       0118*  	sbc hl,de ; x_min - x_cur
04B636 F2 54 B6 04 0119*  	jp p, move_bj_x_min
04B63A             0120*  ; check if we're > x_max
04B63A 2A 81 B6 04 0121*  	ld hl,(bj_x_max)
04B63E AF          0122*  	xor a ; clear carry
04B63F ED 52       0123*  	sbc hl,de ; x_max - x_cur
04B641 FA 66 B6 04 0124*  	jp m, move_bj_x_max
04B645             0125*  ; if not at either boundary, fall through to draw bj's
04B645             0126*  draw_bj:
04B645 ED 4B 7B B6 0127*  	ld bc,(bj_x_cur)
       04          
04B64A ED 5B 87 B6 0128*  	ld de,(bj_y_cur)
       04          
04B64F CD 4F A9 04 0129*  	call vdu_plot_bmp
04B653 C9          0130*  	ret
04B654             0131*  move_bj_x_min:
04B654 21 01 00 00 0132*  	ld hl,1
04B658 22 78 B6 04 0133*  	ld (bj_xvel),hl
04B65C 2A 7E B6 04 0134*  	ld hl,(bj_x_min)
04B660 22 7B B6 04 0135*  	ld (bj_x_cur),hl
04B664 18 DF       0136*  	jr draw_bj
04B666             0137*  move_bj_x_max:
04B666 21 FF FF FF 0138*  	ld hl,-1
04B66A 22 78 B6 04 0139*  	ld (bj_xvel),hl
04B66E 2A 81 B6 04 0140*  	ld hl,(bj_x_max)
04B672 22 7B B6 04 0141*  	ld (bj_x_cur),hl
04B676 18 CD       0142*  	jr draw_bj
04B678 00 00 00    0143*  bj_xvel: dl 0
04B67B 00 00 00    0144*  bj_x_cur: dl 0
04B67E 00 00 00    0145*  bj_x_min: dl 0
04B681 00 00 00    0146*  bj_x_max: dl 0
04B684             0147*  
04B684 00 00 00    0148*  bj_yvel: dl 0
04B687 00 00 00    0149*  bj_y_cur: dl 0
04B68A 00 00 00    0150*  bj_y_min: dl 0
04B68D 00 00 00    0151*  bj_y_max: dl 0
04B690             0152*  
04B690             0153*  tmp_draw_all_the_things:
04B690 21 06 20 00 0154*      ld hl,BUF_UI_SPLASH
04B694 CD 7E A7 04 0155*      call vdu_buff_select
04B698 01 00 00 00 0156*      ld bc,0
04B69C 11 00 00 00 0157*      ld de,0
04B6A0 CD 4F A9 04 0158*      call vdu_plot_bmp
04B6A4 C9          0159*  	ret
04B6A5             0160*  
04B6A5             0161*  ; load an uncompressed rgba2222 image file to a buffer
04B6A5             0162*  ; inputs: bc,de image width,height ; hl = bufferId ; ix = file size
04B6A5             0163*  vdu_load_img:
04B6A5             0164*  ; back up image dimension parameters
04B6A5 C5          0165*  	push bc
04B6A6 D5          0166*  	push de
04B6A7             0167*  ; load the image
04B6A7 CD 78 C2 04 0168*  	call vdu_load_buffer_from_file
04B6AB             0169*  ; now make it a bitmap
04B6AB D1          0170*  	pop de
04B6AC C1          0171*  	pop bc
04B6AD 3E 01       0172*  	ld a,1 ; the magic number for rgba2222
04B6AF C3 93 A7 04 0173*  	jp vdu_bmp_create ; will return to caller from there
04B6B3             0174*  
04B6B3             0175*  ; load a compressed rgba2222 image file to a buffer
04B6B3             0176*  ; inputs: bc,de image width,height ; hl = bufferId ; ix = file size
04B6B3             0177*  vdu_load_img_cmp:
04B6B3             0178*  ; back up image dimension parameters
04B6B3 C5          0179*  	push bc
04B6B4 D5          0180*  	push de
04B6B5             0181*  ; back up the buffer id
04B6B5 E5          0182*  	push hl
04B6B6             0183*  ; load the image
04B6B6 CD 78 C2 04 0184*  	call vdu_load_buffer_from_file
04B6BA             0185*  ; decompress the buffer
04B6BA E1          0186*  	pop hl ; bufferId
04B6BB CD F2 A7 04 0187*  	call vdu_decompress_buffer
04B6BF             0188*  ; now make it a bitmap
04B6BF D1          0189*  	pop de ; image height
04B6C0 C1          0190*  	pop bc ; image width
04B6C1 3E 01       0191*  	ld a,1 ; the magic number for rgba2222
04B6C3 C3 93 A7 04 0192*  	jp vdu_bmp_create ; will return to caller from there
04B6C7             0036   	include "src/asm/sfx.asm"
04B6C7 00          0001*  sfx_last_channel: db 0x00 ; 8-bit value between 0 and 31
04B6C8             0002*  
04B6C8             0003*  ; ; play a sound effect on the next available channel at full volume for its full duration
04B6C8             0004*  ; ; inputs: hl = bufferId
04B6C8             0005*  ; sfx_play:
04B6C8             0006*  ; 	ld iy,sfx_last_channel
04B6C8             0007*  ; 	ld a,(iy+0)
04B6C8             0008*  ; 	ld (@bufferId),hl
04B6C8             0009*  ; @find_next_channel:
04B6C8             0010*  ; 	inc a ; bump to next channel
04B6C8             0011*  ; 	and 31 ; modulo 32 channel
04B6C8             0012*  ; 	cp (iy+0) ; if this is zero we've wrapped around and not found a free channel
04B6C8             0013*  ; 	ret z ; so we return to caller without doing anything
04B6C8             0014*  ; 	push af ; back up channel
04B6C8             0015*  ; 	call vdu_channel_status ; a comes back with channel status bitmask
04B6C8             0016*  ; 	and %00000010 ; bit 1 is the "is playing" flag
04B6C8             0017*  ; 	jr z,@play_sfx ; if not playing, we can use this channel
04B6C8             0018*  ; 	pop af ; restore channel
04B6C8             0019*  ; 	jr @find_next_channel ; try the next channel
04B6C8             0020*  ; @play_sfx:
04B6C8             0021*  ; 	pop af ; restore channel
04B6C8             0022*  ; 	ld (iy+0),a ; store channel
04B6C8             0023*  ; 	ld hl,(@bufferId)
04B6C8             0024*  ; 	ld c,a ; channel
04B6C8             0025*  ; 	ld b,127 ; full volume
04B6C8             0026*  ; 	ld de,1000 ; 1 second duration (should have no effect)
04B6C8             0027*  ; 	jp vdu_play_sample
04B6C8             0028*  ; @bufferId:
04B6C8             0029*  ; 	dw 0x0000 ; 16-bit value
04B6C8             0030*  
04B6C8             0031*  ; play a sound effect on the next available channel at full volume for its full duration
04B6C8             0032*  ; inputs: hl = bufferId
04B6C8             0033*  sfx_play:
04B6C8 FD 21 C7 B6 0034*  	ld iy,sfx_last_channel
       04          
04B6CD FD 7E 00    0035*  	ld a,(iy+0)
04B6D0 3C          0036*  	inc a ; bump to next channel
04B6D1 E6 1F       0037*  	and 31 ; modulo 32 channel
04B6D3 FD 77 00    0038*  	ld (iy+0),a ; store channel
04B6D6 4F          0039*  	ld c,a ; channel
04B6D7 06 7F       0040*  	ld b,127 ; full volume
04B6D9 11 E8 03 00 0041*  	ld de,1000 ; 1 second duration (should have no effect)
04B6DD C3 0F AC 04 0042*  	jp vdu_play_sample
04B6E1             0043*  
04B6E1             0044*  sfx_play_got_treasure:
04B6E1 21 0F 30 00 0045*  	ld hl,BUF_GOT_TREASURE
04B6E5 C3 C8 B6 04 0046*  	jp sfx_play
04B6E9             0047*  
04B6E9             0048*  sfx_play_achtung:
04B6E9 21 00 30 00 0049*  	ld hl,BUF_ACHTUNG
04B6ED C3 C8 B6 04 0050*  	jp sfx_play
04B6F1             0051*  
04B6F1             0052*  sfx_play_schusstaffel:
04B6F1 21 15 30 00 0053*  	ld hl,BUF_SCHUSSTAFFEL
04B6F5 C3 C8 B6 04 0054*  	jp sfx_play
04B6F9             0055*  
04B6F9             0056*  sfx_play_dog_woof:
04B6F9 21 08 30 00 0057*  	ld hl,BUF_DOG_WOOF
04B6FD C3 C8 B6 04 0058*  	jp sfx_play
04B701             0059*  
04B701             0060*  sfx_play_dog_yelp:
04B701 21 09 30 00 0061*  	ld hl,BUF_DOG_YELP
04B705 C3 C8 B6 04 0062*  	jp sfx_play
04B709             0063*  
04B709             0064*  sfx_play_mein_leben:
04B709 21 13 30 00 0065*  	ld hl,BUF_MEIN_LEBEN
04B70D C3 C8 B6 04 0066*  	jp sfx_play
04B711             0067*  
04B711             0068*  sfx_play_wilhelm:
04B711 21 1E 30 00 0069*  	ld hl,BUF_WILHELM
04B715 C3 C8 B6 04 0070*  	jp sfx_play
04B719             0071*  
04B719             0072*  sfx_play_shot_pistol:
04B719 21 1B 30 00 0073*  	ld hl,BUF_SHOT_PISTOL
04B71D C3 C8 B6 04 0074*  	jp sfx_play
04B721             0075*  
04B721             0076*  sfx_play_shot_machine_gun_single:
04B721 21 1A 30 00 0077*  	ld hl,BUF_SHOT_MACHINE_GUN_SINGLE
04B725 C3 C8 B6 04 0078*  	jp sfx_play
04B729             0079*  
04B729             0080*  sfx_play_shot_machine_gun_burst:
04B729 21 19 30 00 0081*  	ld hl,BUF_SHOT_MACHINE_GUN_BURST
04B72D C3 C8 B6 04 0082*  	jp sfx_play
04B731             0083*  
04B731             0084*  sfx_play_shot_gatling_single:
04B731 21 17 30 00 0085*  	ld hl,BUF_SHOT_GATLING_SINGLE
04B735 C3 C8 B6 04 0086*  	jp sfx_play
04B739             0087*  
04B739             0088*  sfx_play_shot_gatling_burst:
04B739 21 16 30 00 0089*  	ld hl,BUF_SHOT_GATLING_BURST
04B73D C3 C8 B6 04 0090*  	jp sfx_play
04B741             0091*  
04B741             0092*  sfx_play_explode:
04B741 21 0D 30 00 0093*  	ld hl,BUF_EXPLODE
04B745 C3 C8 B6 04 0094*  	jp sfx_play
04B749             0095*  
04B749             0096*  sfx_play_ayee_high:
04B749 21 06 30 00 0097*  	ld hl,BUF_AYEE_HIGH
04B74D C3 C8 B6 04 0098*  	jp sfx_play
04B751             0099*  
04B751             0100*  sfx_play_random_hurt:
04B751 CD 22 B5 04 0101*  	call rand_8
04B755 E6 03       0102*  	and 3
04B757 FE 00       0103*  	cp 0
04B759 28 0A       0104*  	jr z,sfx_play_ahh
04B75B FE 01       0105*  	cp 1
04B75D 28 0E       0106*  	jr z,sfx_play_augh
04B75F FE 02       0107*  	cp 2
04B761 28 12       0108*  	jr z,sfx_play_ayee
04B763 18 18       0109*  	jr sfx_play_ugh
04B765             0110*  
04B765             0111*  sfx_play_ahh:
04B765 21 02 30 00 0112*  	ld hl,BUF_AHH
04B769 C3 C8 B6 04 0113*  	jp sfx_play
04B76D             0114*  
04B76D             0115*  sfx_play_augh:
04B76D 21 04 30 00 0116*  	ld hl,BUF_AUGH
04B771 C3 C8 B6 04 0117*  	jp sfx_play
04B775             0118*  
04B775             0119*  sfx_play_ayee:
04B775 21 05 30 00 0120*  	ld hl,BUF_AYEE
04B779 C3 C8 B6 04 0121*  	jp sfx_play
04B77D             0122*  
04B77D             0123*  sfx_play_ugh:
04B77D 21 1D 30 00 0124*  	ld hl,BUF_UGH
04B781 C3 C8 B6 04 0125*  	jp sfx_play
04B785             0126*  
04B785             0127*  
04B785             0128*  
04B785             0129*  ; inputs: bc is the number of sounds to load, cur_buffer_id_lut and cur_load_jump_table set to the address of the first entry in the respective lookup tables
04B785             0130*  sfx_load_main:
04B785 21 00 00 00 0131*      ld hl,0
04B789 22 37 B5 04 0132*      ld (cur_file_idx),hl
04B78D             0133*  sfx_load_main_loop:
04B78D             0134*  ; back up loop counter
04B78D C5          0135*      push bc
04B78E             0136*  ; load the next sound
04B78E CD D2 B7 04 0137*      call load_next_sound
04B792             0138*  ; draw all the things
04B792 CD 90 B6 04 0139*      call tmp_draw_all_the_things
04B796             0140*  ; move bj
04B796 CD 18 B6 04 0141*  	call move_bj
04B79A             0142*  ; print welcome message
04B79A DD 21 A0 7A 0143*  	ld ix,font_itc_honda
       04          
04B79F 21 FE C0 04 0144*  	ld hl,hello_world
04B7A3 01 20 00 00 0145*  	ld bc,32
04B7A7 11 02 00 00 0146*  	ld de,2
04B7AB CD A4 63 04 0147*  	call font_bmp_print
04B7AF             0148*  ; print current filename
04B7AF CD 15 A6 04 0149*  	call vdu_cls
04B7B3 2A 3A B5 04 0150*  	ld hl,(cur_filename)
04B7B7 CD E6 AC 04 0151*  	call printString
04B7BB CD FB AC 04 0152*  	call printNewline
04B7BF             0153*  ; flip screen
04B7BF CD E4 A7 04 0154*      call vdu_flip
04B7C3             0155*  ; ; delay for a bit so sound can play
04B7C3             0156*  ;     ld a,%10000000 ; 1 second delay
04B7C3             0157*  ;     call multiPurposeDelay
04B7C3             0158*  ; decrement loop counter
04B7C3 C1          0159*      pop bc
04B7C4 0B          0160*  	dec bc
04B7C5             0161*  ; ; DEBUG: DUMP REGISTERS
04B7C5             0162*  ; 	push bc
04B7C5             0163*  ; 	call dumpRegistersHex
04B7C5             0164*  ; 	call vdu_flip
04B7C5             0165*  ; 	pop bc
04B7C5             0166*  ; ; END DEBUG
04B7C5 79          0167*      ld a,c
04B7C6 B7          0168*      or a
04B7C7 C2 8D B7 04 0169*      jp nz,sfx_load_main_loop
04B7CB 78          0170*      ld a,b
04B7CC B7          0171*      or a
04B7CD C2 8D B7 04 0172*      jp nz,sfx_load_main_loop
04B7D1 C9          0173*      ret
04B7D2             0174*  
04B7D2             0175*  load_next_sound:
04B7D2             0176*  ; look up the load routine for the current file index
04B7D2 2A 37 B5 04 0177*  	ld hl,(cur_file_idx)
04B7D6 29          0178*  	add hl,hl ; multiply current index by 2 ...
04B7D7 ED 5B 37 B5 0179*  	ld de,(cur_file_idx)
       04          
04B7DC 19          0180*  	add hl,de ; ... now by 3
04B7DD ED 5B 43 B5 0181*  	ld de,(cur_load_jump_table) ; tack it on to the base address of the jump table
       04          
04B7E2 19          0182*  	add hl,de
04B7E3 ED 27       0183*  	ld hl,(hl) ; hl is pointing to load routine address
04B7E5 22 EA B7 04 0184*  	ld (@jump_addr+1),hl ; self-modifying code ...
04B7E9             0185*  @jump_addr:
04B7E9 CD 00 00 00 0186*  	call 0 ; call the sound load routine
04B7ED             0187*  ; look up the buffer id for the current file
04B7ED 2A 37 B5 04 0188*  	ld hl,(cur_file_idx)
04B7F1 29          0189*  	add hl,hl ; multiply current index by 2 ...
04B7F2 ED 5B 37 B5 0190*  	ld de,(cur_file_idx)
       04          
04B7F7 19          0191*  	add hl,de ; ... now by 3
04B7F8 ED 5B 40 B5 0192*  	ld de,(cur_buffer_id_lut) ; tack it on to the base address of the lookup table
       04          
04B7FD 19          0193*  	add hl,de
04B7FE ED 27       0194*  	ld hl,(hl)
04B800 22 3D B5 04 0195*  	ld (cur_buffer_id),hl
04B804             0196*  ; bump the current file index
04B804 2A 37 B5 04 0197*  	ld hl,(cur_file_idx)
04B808 23          0198*  	inc hl
04B809 22 37 B5 04 0199*  	ld (cur_file_idx),hl
04B80D C9          0200*  	ret
04B80E             0201*  
04B80E             0202*  ; load a sound file to a buffer
04B80E             0203*  ; inputs: hl = bufferId ; ix = file size
04B80E             0204*  vdu_load_sfx:
04B80E             0205*  ; back up input parameters
04B80E E5          0206*      push hl ; bufferId
04B80F             0207*  ; load the sound
04B80F CD 78 C2 04 0208*  	call vdu_load_buffer_from_file
04B813             0209*  ; now make the buffer a sound sample
04B813 E1          0210*      pop hl ; bufferId
04B814 AF          0211*  	xor a ; zero is the magic number for 8-bit signed PCM 16KHz
04B815             0212*      ; push hl ; bufferId
04B815 CD F3 AB 04 0213*  	call vdu_buffer_to_sound
04B819             0214*  ; ; play the loaded sound
04B819             0215*  ;     ld c,0 ; channel
04B819             0216*  ;     ld b,127 ; full volume
04B819             0217*  ;     ld de,1000 ; 1 second duration
04B819             0218*  ;     pop hl ; bufferId
04B819             0219*  ;     call vdu_play_sample
04B819 C9          0220*      ret
04B81A             0037   	include "src/asm/sfx_load.asm"
04B81A             0001*  ; This file is created by build_98_asm_sfx.py, do not edit it!
04B81A             0002*  
04B81A             0003*  SFX_num_buffers: equ 32
04B81A             0004*  ; SFX buffer ids:
04B81A             0005*  BUF_ACHTUNG: equ 0x3000
04B81A             0006*  BUF_ACHTUNG2: equ 0x3001
04B81A             0007*  BUF_AHH: equ 0x3002
04B81A             0008*  BUF_AUF_WEIDERSHEN: equ 0x3003
04B81A             0009*  BUF_AUGH: equ 0x3004
04B81A             0010*  BUF_AYEE: equ 0x3005
04B81A             0011*  BUF_AYEE_HIGH: equ 0x3006
04B81A             0012*  BUF_BANG2: equ 0x3007
04B81A             0013*  BUF_DOG_WOOF: equ 0x3008
04B81A             0014*  BUF_DOG_YELP: equ 0x3009
04B81A             0015*  BUF_DOOR_SHUT: equ 0x300A
04B81A             0016*  BUF_ENEMY_GATLING: equ 0x300B
04B81A             0017*  BUF_EVA: equ 0x300C
04B81A             0018*  BUF_EXPLODE: equ 0x300D
04B81A             0019*  BUF_GIB: equ 0x300E
04B81A             0020*  BUF_GOT_TREASURE: equ 0x300F
04B81A             0021*  BUF_GUARD_SHOT_PISTOL: equ 0x3010
04B81A             0022*  BUF_GUTEN_TAG: equ 0x3011
04B81A             0023*  BUF_LOCKED_DOOR: equ 0x3012
04B81A             0024*  BUF_MEIN_LEBEN: equ 0x3013
04B81A             0025*  BUF_MUTTI: equ 0x3014
04B81A             0026*  BUF_SCHUSSTAFFEL: equ 0x3015
04B81A             0027*  BUF_SHOT_GATLING_BURST: equ 0x3016
04B81A             0028*  BUF_SHOT_GATLING_SINGLE: equ 0x3017
04B81A             0029*  BUF_SHOT_MACHINE_GUN: equ 0x3018
04B81A             0030*  BUF_SHOT_MACHINE_GUN_BURST: equ 0x3019
04B81A             0031*  BUF_SHOT_MACHINE_GUN_SINGLE: equ 0x301A
04B81A             0032*  BUF_SHOT_PISTOL: equ 0x301B
04B81A             0033*  BUF_SPION: equ 0x301C
04B81A             0034*  BUF_UGH: equ 0x301D
04B81A             0035*  BUF_WILHELM: equ 0x301E
04B81A             0036*  BUF_WOOF: equ 0x301F
04B81A             0037*  
04B81A             0038*  ; SFX buffer id reverse lookup:
04B81A             0039*  SFX_buffer_id_lut:
04B81A 00 30 00    0040*  	dl BUF_ACHTUNG
04B81D 01 30 00    0041*  	dl BUF_ACHTUNG2
04B820 02 30 00    0042*  	dl BUF_AHH
04B823 03 30 00    0043*  	dl BUF_AUF_WEIDERSHEN
04B826 04 30 00    0044*  	dl BUF_AUGH
04B829 05 30 00    0045*  	dl BUF_AYEE
04B82C 06 30 00    0046*  	dl BUF_AYEE_HIGH
04B82F 07 30 00    0047*  	dl BUF_BANG2
04B832 08 30 00    0048*  	dl BUF_DOG_WOOF
04B835 09 30 00    0049*  	dl BUF_DOG_YELP
04B838 0A 30 00    0050*  	dl BUF_DOOR_SHUT
04B83B 0B 30 00    0051*  	dl BUF_ENEMY_GATLING
04B83E 0C 30 00    0052*  	dl BUF_EVA
04B841 0D 30 00    0053*  	dl BUF_EXPLODE
04B844 0E 30 00    0054*  	dl BUF_GIB
04B847 0F 30 00    0055*  	dl BUF_GOT_TREASURE
04B84A 10 30 00    0056*  	dl BUF_GUARD_SHOT_PISTOL
04B84D 11 30 00    0057*  	dl BUF_GUTEN_TAG
04B850 12 30 00    0058*  	dl BUF_LOCKED_DOOR
04B853 13 30 00    0059*  	dl BUF_MEIN_LEBEN
04B856 14 30 00    0060*  	dl BUF_MUTTI
04B859 15 30 00    0061*  	dl BUF_SCHUSSTAFFEL
04B85C 16 30 00    0062*  	dl BUF_SHOT_GATLING_BURST
04B85F 17 30 00    0063*  	dl BUF_SHOT_GATLING_SINGLE
04B862 18 30 00    0064*  	dl BUF_SHOT_MACHINE_GUN
04B865 19 30 00    0065*  	dl BUF_SHOT_MACHINE_GUN_BURST
04B868 1A 30 00    0066*  	dl BUF_SHOT_MACHINE_GUN_SINGLE
04B86B 1B 30 00    0067*  	dl BUF_SHOT_PISTOL
04B86E 1C 30 00    0068*  	dl BUF_SPION
04B871 1D 30 00    0069*  	dl BUF_UGH
04B874 1E 30 00    0070*  	dl BUF_WILHELM
04B877 1F 30 00    0071*  	dl BUF_WOOF
04B87A             0072*  
04B87A             0073*  ; SFX duration lookup:
04B87A             0074*  SFX_duration_lut:
04B87A 47 03       0075*  	dw 839 ; ACHTUNG
04B87C 36 03       0076*  	dw 822 ; ACHTUNG2
04B87E 8C 01       0077*  	dw 396 ; AHH
04B880 90 04       0078*  	dw 1168 ; AUF_WEIDERSHEN
04B882 5A 03       0079*  	dw 858 ; AUGH
04B884 1C 02       0080*  	dw 540 ; AYEE
04B886 5F 04       0081*  	dw 1119 ; AYEE_HIGH
04B888 86 02       0082*  	dw 646 ; BANG2
04B88A 06 03       0083*  	dw 774 ; DOG_WOOF
04B88C B9 01       0084*  	dw 441 ; DOG_YELP
04B88E EB 01       0085*  	dw 491 ; DOOR_SHUT
04B890 DC 05       0086*  	dw 1500 ; ENEMY_GATLING
04B892 65 03       0087*  	dw 869 ; EVA
04B894 DF 04       0088*  	dw 1247 ; EXPLODE
04B896 51 05       0089*  	dw 1361 ; GIB
04B898 26 06       0090*  	dw 1574 ; GOT_TREASURE
04B89A C7 04       0091*  	dw 1223 ; GUARD_SHOT_PISTOL
04B89C A0 03       0092*  	dw 928 ; GUTEN_TAG
04B89E 0A 02       0093*  	dw 522 ; LOCKED_DOOR
04B8A0 6C 03       0094*  	dw 876 ; MEIN_LEBEN
04B8A2 81 03       0095*  	dw 897 ; MUTTI
04B8A4 90 02       0096*  	dw 656 ; SCHUSSTAFFEL
04B8A6 4D 01       0097*  	dw 333 ; SHOT_GATLING_BURST
04B8A8 B7 04       0098*  	dw 1207 ; SHOT_GATLING_SINGLE
04B8AA 4B 03       0099*  	dw 843 ; SHOT_MACHINE_GUN
04B8AC 68 01       0100*  	dw 360 ; SHOT_MACHINE_GUN_BURST
04B8AE 23 02       0101*  	dw 547 ; SHOT_MACHINE_GUN_SINGLE
04B8B0 0A 02       0102*  	dw 522 ; SHOT_PISTOL
04B8B2 06 03       0103*  	dw 774 ; SPION
04B8B4 6B 01       0104*  	dw 363 ; UGH
04B8B6 6A 05       0105*  	dw 1386 ; WILHELM
04B8B8 4E 02       0106*  	dw 590 ; WOOF
04B8BA             0107*  
04B8BA             0108*  ; SFX load routines jump table:
04B8BA             0109*  SFX_load_routines_table:
04B8BA 1A B9 04    0110*  	dl load_sfx_ACHTUNG
04B8BD 3C B9 04    0111*  	dl load_sfx_ACHTUNG2
04B8C0 5E B9 04    0112*  	dl load_sfx_AHH
04B8C3 80 B9 04    0113*  	dl load_sfx_AUF_WEIDERSHEN
04B8C6 A2 B9 04    0114*  	dl load_sfx_AUGH
04B8C9 C4 B9 04    0115*  	dl load_sfx_AYEE
04B8CC E6 B9 04    0116*  	dl load_sfx_AYEE_HIGH
04B8CF 08 BA 04    0117*  	dl load_sfx_BANG2
04B8D2 2A BA 04    0118*  	dl load_sfx_DOG_WOOF
04B8D5 4C BA 04    0119*  	dl load_sfx_DOG_YELP
04B8D8 6E BA 04    0120*  	dl load_sfx_DOOR_SHUT
04B8DB 90 BA 04    0121*  	dl load_sfx_ENEMY_GATLING
04B8DE B2 BA 04    0122*  	dl load_sfx_EVA
04B8E1 D4 BA 04    0123*  	dl load_sfx_EXPLODE
04B8E4 F6 BA 04    0124*  	dl load_sfx_GIB
04B8E7 18 BB 04    0125*  	dl load_sfx_GOT_TREASURE
04B8EA 3A BB 04    0126*  	dl load_sfx_GUARD_SHOT_PISTOL
04B8ED 5C BB 04    0127*  	dl load_sfx_GUTEN_TAG
04B8F0 7E BB 04    0128*  	dl load_sfx_LOCKED_DOOR
04B8F3 A0 BB 04    0129*  	dl load_sfx_MEIN_LEBEN
04B8F6 C2 BB 04    0130*  	dl load_sfx_MUTTI
04B8F9 E4 BB 04    0131*  	dl load_sfx_SCHUSSTAFFEL
04B8FC 06 BC 04    0132*  	dl load_sfx_SHOT_GATLING_BURST
04B8FF 28 BC 04    0133*  	dl load_sfx_SHOT_GATLING_SINGLE
04B902 4A BC 04    0134*  	dl load_sfx_SHOT_MACHINE_GUN
04B905 6C BC 04    0135*  	dl load_sfx_SHOT_MACHINE_GUN_BURST
04B908 8E BC 04    0136*  	dl load_sfx_SHOT_MACHINE_GUN_SINGLE
04B90B B0 BC 04    0137*  	dl load_sfx_SHOT_PISTOL
04B90E D2 BC 04    0138*  	dl load_sfx_SPION
04B911 F4 BC 04    0139*  	dl load_sfx_UGH
04B914 16 BD 04    0140*  	dl load_sfx_WILHELM
04B917 38 BD 04    0141*  	dl load_sfx_WOOF
04B91A             0142*  
04B91A             0143*  ; Import sfx .raw files and load them into VDP buffers
04B91A             0144*  
04B91A             0145*  load_sfx_ACHTUNG:
04B91A 21 5A BD 04 0146*  	ld hl,FACHTUNG
04B91E 22 3A B5 04 0147*  	ld (cur_filename),hl
04B922 11 C5 C2 04 0148*  	ld de,filedata
04B926 01 00 00 01 0149*  	ld bc,65536
04B92A 3E 01       0150*  	ld a,mos_load
04B92C 5B CF       0151*  	RST.LIL 08h
04B92E 21 00 30 00 0152*  	ld hl,BUF_ACHTUNG
04B932 DD 21 76 34 0153*  	ld ix,13430
       00          
04B937 CD 0E B8 04 0154*  	call vdu_load_sfx
04B93B C9          0155*  	ret
04B93C             0156*  
04B93C             0157*  load_sfx_ACHTUNG2:
04B93C 21 6A BD 04 0158*  	ld hl,FACHTUNG2
04B940 22 3A B5 04 0159*  	ld (cur_filename),hl
04B944 11 C5 C2 04 0160*  	ld de,filedata
04B948 01 00 00 01 0161*  	ld bc,65536
04B94C 3E 01       0162*  	ld a,mos_load
04B94E 5B CF       0163*  	RST.LIL 08h
04B950 21 01 30 00 0164*  	ld hl,BUF_ACHTUNG2
04B954 DD 21 60 33 0165*  	ld ix,13152
       00          
04B959 CD 0E B8 04 0166*  	call vdu_load_sfx
04B95D C9          0167*  	ret
04B95E             0168*  
04B95E             0169*  load_sfx_AHH:
04B95E 21 7B BD 04 0170*  	ld hl,FAHH
04B962 22 3A B5 04 0171*  	ld (cur_filename),hl
04B966 11 C5 C2 04 0172*  	ld de,filedata
04B96A 01 00 00 01 0173*  	ld bc,65536
04B96E 3E 01       0174*  	ld a,mos_load
04B970 5B CF       0175*  	RST.LIL 08h
04B972 21 02 30 00 0176*  	ld hl,BUF_AHH
04B976 DD 21 C4 18 0177*  	ld ix,6340
       00          
04B97B CD 0E B8 04 0178*  	call vdu_load_sfx
04B97F C9          0179*  	ret
04B980             0180*  
04B980             0181*  load_sfx_AUF_WEIDERSHEN:
04B980 21 87 BD 04 0182*  	ld hl,FAUF_WEIDERSHEN
04B984 22 3A B5 04 0183*  	ld (cur_filename),hl
04B988 11 C5 C2 04 0184*  	ld de,filedata
04B98C 01 00 00 01 0185*  	ld bc,65536
04B990 3E 01       0186*  	ld a,mos_load
04B992 5B CF       0187*  	RST.LIL 08h
04B994 21 03 30 00 0188*  	ld hl,BUF_AUF_WEIDERSHEN
04B998 DD 21 01 49 0189*  	ld ix,18689
       00          
04B99D CD 0E B8 04 0190*  	call vdu_load_sfx
04B9A1 C9          0191*  	ret
04B9A2             0192*  
04B9A2             0193*  load_sfx_AUGH:
04B9A2 21 9E BD 04 0194*  	ld hl,FAUGH
04B9A6 22 3A B5 04 0195*  	ld (cur_filename),hl
04B9AA 11 C5 C2 04 0196*  	ld de,filedata
04B9AE 01 00 00 01 0197*  	ld bc,65536
04B9B2 3E 01       0198*  	ld a,mos_load
04B9B4 5B CF       0199*  	RST.LIL 08h
04B9B6 21 04 30 00 0200*  	ld hl,BUF_AUGH
04B9BA DD 21 AC 35 0201*  	ld ix,13740
       00          
04B9BF CD 0E B8 04 0202*  	call vdu_load_sfx
04B9C3 C9          0203*  	ret
04B9C4             0204*  
04B9C4             0205*  load_sfx_AYEE:
04B9C4 21 AB BD 04 0206*  	ld hl,FAYEE
04B9C8 22 3A B5 04 0207*  	ld (cur_filename),hl
04B9CC 11 C5 C2 04 0208*  	ld de,filedata
04B9D0 01 00 00 01 0209*  	ld bc,65536
04B9D4 3E 01       0210*  	ld a,mos_load
04B9D6 5B CF       0211*  	RST.LIL 08h
04B9D8 21 05 30 00 0212*  	ld hl,BUF_AYEE
04B9DC DD 21 C9 21 0213*  	ld ix,8649
       00          
04B9E1 CD 0E B8 04 0214*  	call vdu_load_sfx
04B9E5 C9          0215*  	ret
04B9E6             0216*  
04B9E6             0217*  load_sfx_AYEE_HIGH:
04B9E6 21 B8 BD 04 0218*  	ld hl,FAYEE_HIGH
04B9EA 22 3A B5 04 0219*  	ld (cur_filename),hl
04B9EE 11 C5 C2 04 0220*  	ld de,filedata
04B9F2 01 00 00 01 0221*  	ld bc,65536
04B9F6 3E 01       0222*  	ld a,mos_load
04B9F8 5B CF       0223*  	RST.LIL 08h
04B9FA 21 06 30 00 0224*  	ld hl,BUF_AYEE_HIGH
04B9FE DD 21 F0 45 0225*  	ld ix,17904
       00          
04BA03 CD 0E B8 04 0226*  	call vdu_load_sfx
04BA07 C9          0227*  	ret
04BA08             0228*  
04BA08             0229*  load_sfx_BANG2:
04BA08 21 CA BD 04 0230*  	ld hl,FBANG2
04BA0C 22 3A B5 04 0231*  	ld (cur_filename),hl
04BA10 11 C5 C2 04 0232*  	ld de,filedata
04BA14 01 00 00 01 0233*  	ld bc,65536
04BA18 3E 01       0234*  	ld a,mos_load
04BA1A 5B CF       0235*  	RST.LIL 08h
04BA1C 21 07 30 00 0236*  	ld hl,BUF_BANG2
04BA20 DD 21 6C 28 0237*  	ld ix,10348
       00          
04BA25 CD 0E B8 04 0238*  	call vdu_load_sfx
04BA29 C9          0239*  	ret
04BA2A             0240*  
04BA2A             0241*  load_sfx_DOG_WOOF:
04BA2A 21 D8 BD 04 0242*  	ld hl,FDOG_WOOF
04BA2E 22 3A B5 04 0243*  	ld (cur_filename),hl
04BA32 11 C5 C2 04 0244*  	ld de,filedata
04BA36 01 00 00 01 0245*  	ld bc,65536
04BA3A 3E 01       0246*  	ld a,mos_load
04BA3C 5B CF       0247*  	RST.LIL 08h
04BA3E 21 08 30 00 0248*  	ld hl,BUF_DOG_WOOF
04BA42 DD 21 69 30 0249*  	ld ix,12393
       00          
04BA47 CD 0E B8 04 0250*  	call vdu_load_sfx
04BA4B C9          0251*  	ret
04BA4C             0252*  
04BA4C             0253*  load_sfx_DOG_YELP:
04BA4C 21 E9 BD 04 0254*  	ld hl,FDOG_YELP
04BA50 22 3A B5 04 0255*  	ld (cur_filename),hl
04BA54 11 C5 C2 04 0256*  	ld de,filedata
04BA58 01 00 00 01 0257*  	ld bc,65536
04BA5C 3E 01       0258*  	ld a,mos_load
04BA5E 5B CF       0259*  	RST.LIL 08h
04BA60 21 09 30 00 0260*  	ld hl,BUF_DOG_YELP
04BA64 DD 21 9F 1B 0261*  	ld ix,7071
       00          
04BA69 CD 0E B8 04 0262*  	call vdu_load_sfx
04BA6D C9          0263*  	ret
04BA6E             0264*  
04BA6E             0265*  load_sfx_DOOR_SHUT:
04BA6E 21 FA BD 04 0266*  	ld hl,FDOOR_SHUT
04BA72 22 3A B5 04 0267*  	ld (cur_filename),hl
04BA76 11 C5 C2 04 0268*  	ld de,filedata
04BA7A 01 00 00 01 0269*  	ld bc,65536
04BA7E 3E 01       0270*  	ld a,mos_load
04BA80 5B CF       0271*  	RST.LIL 08h
04BA82 21 0A 30 00 0272*  	ld hl,BUF_DOOR_SHUT
04BA86 DD 21 B1 1E 0273*  	ld ix,7857
       00          
04BA8B CD 0E B8 04 0274*  	call vdu_load_sfx
04BA8F C9          0275*  	ret
04BA90             0276*  
04BA90             0277*  load_sfx_ENEMY_GATLING:
04BA90 21 0C BE 04 0278*  	ld hl,FENEMY_GATLING
04BA94 22 3A B5 04 0279*  	ld (cur_filename),hl
04BA98 11 C5 C2 04 0280*  	ld de,filedata
04BA9C 01 00 00 01 0281*  	ld bc,65536
04BAA0 3E 01       0282*  	ld a,mos_load
04BAA2 5B CF       0283*  	RST.LIL 08h
04BAA4 21 0B 30 00 0284*  	ld hl,BUF_ENEMY_GATLING
04BAA8 DD 21 C3 5D 0285*  	ld ix,24003
       00          
04BAAD CD 0E B8 04 0286*  	call vdu_load_sfx
04BAB1 C9          0287*  	ret
04BAB2             0288*  
04BAB2             0289*  load_sfx_EVA:
04BAB2 21 22 BE 04 0290*  	ld hl,FEVA
04BAB6 22 3A B5 04 0291*  	ld (cur_filename),hl
04BABA 11 C5 C2 04 0292*  	ld de,filedata
04BABE 01 00 00 01 0293*  	ld bc,65536
04BAC2 3E 01       0294*  	ld a,mos_load
04BAC4 5B CF       0295*  	RST.LIL 08h
04BAC6 21 0C 30 00 0296*  	ld hl,BUF_EVA
04BACA DD 21 57 36 0297*  	ld ix,13911
       00          
04BACF CD 0E B8 04 0298*  	call vdu_load_sfx
04BAD3 C9          0299*  	ret
04BAD4             0300*  
04BAD4             0301*  load_sfx_EXPLODE:
04BAD4 21 2E BE 04 0302*  	ld hl,FEXPLODE
04BAD8 22 3A B5 04 0303*  	ld (cur_filename),hl
04BADC 11 C5 C2 04 0304*  	ld de,filedata
04BAE0 01 00 00 01 0305*  	ld bc,65536
04BAE4 3E 01       0306*  	ld a,mos_load
04BAE6 5B CF       0307*  	RST.LIL 08h
04BAE8 21 0D 30 00 0308*  	ld hl,BUF_EXPLODE
04BAEC DD 21 F5 4D 0309*  	ld ix,19957
       00          
04BAF1 CD 0E B8 04 0310*  	call vdu_load_sfx
04BAF5 C9          0311*  	ret
04BAF6             0312*  
04BAF6             0313*  load_sfx_GIB:
04BAF6 21 3E BE 04 0314*  	ld hl,FGIB
04BAFA 22 3A B5 04 0315*  	ld (cur_filename),hl
04BAFE 11 C5 C2 04 0316*  	ld de,filedata
04BB02 01 00 00 01 0317*  	ld bc,65536
04BB06 3E 01       0318*  	ld a,mos_load
04BB08 5B CF       0319*  	RST.LIL 08h
04BB0A 21 0E 30 00 0320*  	ld hl,BUF_GIB
04BB0E DD 21 16 55 0321*  	ld ix,21782
       00          
04BB13 CD 0E B8 04 0322*  	call vdu_load_sfx
04BB17 C9          0323*  	ret
04BB18             0324*  
04BB18             0325*  load_sfx_GOT_TREASURE:
04BB18 21 4A BE 04 0326*  	ld hl,FGOT_TREASURE
04BB1C 22 3A B5 04 0327*  	ld (cur_filename),hl
04BB20 11 C5 C2 04 0328*  	ld de,filedata
04BB24 01 00 00 01 0329*  	ld bc,65536
04BB28 3E 01       0330*  	ld a,mos_load
04BB2A 5B CF       0331*  	RST.LIL 08h
04BB2C 21 0F 30 00 0332*  	ld hl,BUF_GOT_TREASURE
04BB30 DD 21 6E 62 0333*  	ld ix,25198
       00          
04BB35 CD 0E B8 04 0334*  	call vdu_load_sfx
04BB39 C9          0335*  	ret
04BB3A             0336*  
04BB3A             0337*  load_sfx_GUARD_SHOT_PISTOL:
04BB3A 21 5F BE 04 0338*  	ld hl,FGUARD_SHOT_PISTOL
04BB3E 22 3A B5 04 0339*  	ld (cur_filename),hl
04BB42 11 C5 C2 04 0340*  	ld de,filedata
04BB46 01 00 00 01 0341*  	ld bc,65536
04BB4A 3E 01       0342*  	ld a,mos_load
04BB4C 5B CF       0343*  	RST.LIL 08h
04BB4E 21 10 30 00 0344*  	ld hl,BUF_GUARD_SHOT_PISTOL
04BB52 DD 21 79 4C 0345*  	ld ix,19577
       00          
04BB57 CD 0E B8 04 0346*  	call vdu_load_sfx
04BB5B C9          0347*  	ret
04BB5C             0348*  
04BB5C             0349*  load_sfx_GUTEN_TAG:
04BB5C 21 79 BE 04 0350*  	ld hl,FGUTEN_TAG
04BB60 22 3A B5 04 0351*  	ld (cur_filename),hl
04BB64 11 C5 C2 04 0352*  	ld de,filedata
04BB68 01 00 00 01 0353*  	ld bc,65536
04BB6C 3E 01       0354*  	ld a,mos_load
04BB6E 5B CF       0355*  	RST.LIL 08h
04BB70 21 11 30 00 0356*  	ld hl,BUF_GUTEN_TAG
04BB74 DD 21 0D 3A 0357*  	ld ix,14861
       00          
04BB79 CD 0E B8 04 0358*  	call vdu_load_sfx
04BB7D C9          0359*  	ret
04BB7E             0360*  
04BB7E             0361*  load_sfx_LOCKED_DOOR:
04BB7E 21 8B BE 04 0362*  	ld hl,FLOCKED_DOOR
04BB82 22 3A B5 04 0363*  	ld (cur_filename),hl
04BB86 11 C5 C2 04 0364*  	ld de,filedata
04BB8A 01 00 00 01 0365*  	ld bc,65536
04BB8E 3E 01       0366*  	ld a,mos_load
04BB90 5B CF       0367*  	RST.LIL 08h
04BB92 21 12 30 00 0368*  	ld hl,BUF_LOCKED_DOOR
04BB96 DD 21 AC 20 0369*  	ld ix,8364
       00          
04BB9B CD 0E B8 04 0370*  	call vdu_load_sfx
04BB9F C9          0371*  	ret
04BBA0             0372*  
04BBA0             0373*  load_sfx_MEIN_LEBEN:
04BBA0 21 9F BE 04 0374*  	ld hl,FMEIN_LEBEN
04BBA4 22 3A B5 04 0375*  	ld (cur_filename),hl
04BBA8 11 C5 C2 04 0376*  	ld de,filedata
04BBAC 01 00 00 01 0377*  	ld bc,65536
04BBB0 3E 01       0378*  	ld a,mos_load
04BBB2 5B CF       0379*  	RST.LIL 08h
04BBB4 21 13 30 00 0380*  	ld hl,BUF_MEIN_LEBEN
04BBB8 DD 21 C9 36 0381*  	ld ix,14025
       00          
04BBBD CD 0E B8 04 0382*  	call vdu_load_sfx
04BBC1 C9          0383*  	ret
04BBC2             0384*  
04BBC2             0385*  load_sfx_MUTTI:
04BBC2 21 B2 BE 04 0386*  	ld hl,FMUTTI
04BBC6 22 3A B5 04 0387*  	ld (cur_filename),hl
04BBCA 11 C5 C2 04 0388*  	ld de,filedata
04BBCE 01 00 00 01 0389*  	ld bc,65536
04BBD2 3E 01       0390*  	ld a,mos_load
04BBD4 5B CF       0391*  	RST.LIL 08h
04BBD6 21 14 30 00 0392*  	ld hl,BUF_MUTTI
04BBDA DD 21 13 38 0393*  	ld ix,14355
       00          
04BBDF CD 0E B8 04 0394*  	call vdu_load_sfx
04BBE3 C9          0395*  	ret
04BBE4             0396*  
04BBE4             0397*  load_sfx_SCHUSSTAFFEL:
04BBE4 21 C0 BE 04 0398*  	ld hl,FSCHUSSTAFFEL
04BBE8 22 3A B5 04 0399*  	ld (cur_filename),hl
04BBEC 11 C5 C2 04 0400*  	ld de,filedata
04BBF0 01 00 00 01 0401*  	ld bc,65536
04BBF4 3E 01       0402*  	ld a,mos_load
04BBF6 5B CF       0403*  	RST.LIL 08h
04BBF8 21 15 30 00 0404*  	ld hl,BUF_SCHUSSTAFFEL
04BBFC DD 21 08 29 0405*  	ld ix,10504
       00          
04BC01 CD 0E B8 04 0406*  	call vdu_load_sfx
04BC05 C9          0407*  	ret
04BC06             0408*  
04BC06             0409*  load_sfx_SHOT_GATLING_BURST:
04BC06 21 D5 BE 04 0410*  	ld hl,FSHOT_GATLING_BURST
04BC0A 22 3A B5 04 0411*  	ld (cur_filename),hl
04BC0E 11 C5 C2 04 0412*  	ld de,filedata
04BC12 01 00 00 01 0413*  	ld bc,65536
04BC16 3E 01       0414*  	ld a,mos_load
04BC18 5B CF       0415*  	RST.LIL 08h
04BC1A 21 16 30 00 0416*  	ld hl,BUF_SHOT_GATLING_BURST
04BC1E DD 21 D0 14 0417*  	ld ix,5328
       00          
04BC23 CD 0E B8 04 0418*  	call vdu_load_sfx
04BC27 C9          0419*  	ret
04BC28             0420*  
04BC28             0421*  load_sfx_SHOT_GATLING_SINGLE:
04BC28 21 F0 BE 04 0422*  	ld hl,FSHOT_GATLING_SINGLE
04BC2C 22 3A B5 04 0423*  	ld (cur_filename),hl
04BC30 11 C5 C2 04 0424*  	ld de,filedata
04BC34 01 00 00 01 0425*  	ld bc,65536
04BC38 3E 01       0426*  	ld a,mos_load
04BC3A 5B CF       0427*  	RST.LIL 08h
04BC3C 21 17 30 00 0428*  	ld hl,BUF_SHOT_GATLING_SINGLE
04BC40 DD 21 76 4B 0429*  	ld ix,19318
       00          
04BC45 CD 0E B8 04 0430*  	call vdu_load_sfx
04BC49 C9          0431*  	ret
04BC4A             0432*  
04BC4A             0433*  load_sfx_SHOT_MACHINE_GUN:
04BC4A 21 0C BF 04 0434*  	ld hl,FSHOT_MACHINE_GUN
04BC4E 22 3A B5 04 0435*  	ld (cur_filename),hl
04BC52 11 C5 C2 04 0436*  	ld de,filedata
04BC56 01 00 00 01 0437*  	ld bc,65536
04BC5A 3E 01       0438*  	ld a,mos_load
04BC5C 5B CF       0439*  	RST.LIL 08h
04BC5E 21 18 30 00 0440*  	ld hl,BUF_SHOT_MACHINE_GUN
04BC62 DD 21 BB 34 0441*  	ld ix,13499
       00          
04BC67 CD 0E B8 04 0442*  	call vdu_load_sfx
04BC6B C9          0443*  	ret
04BC6C             0444*  
04BC6C             0445*  load_sfx_SHOT_MACHINE_GUN_BURST:
04BC6C 21 25 BF 04 0446*  	ld hl,FSHOT_MACHINE_GUN_BURST
04BC70 22 3A B5 04 0447*  	ld (cur_filename),hl
04BC74 11 C5 C2 04 0448*  	ld de,filedata
04BC78 01 00 00 01 0449*  	ld bc,65536
04BC7C 3E 01       0450*  	ld a,mos_load
04BC7E 5B CF       0451*  	RST.LIL 08h
04BC80 21 19 30 00 0452*  	ld hl,BUF_SHOT_MACHINE_GUN_BURST
04BC84 DD 21 80 16 0453*  	ld ix,5760
       00          
04BC89 CD 0E B8 04 0454*  	call vdu_load_sfx
04BC8D C9          0455*  	ret
04BC8E             0456*  
04BC8E             0457*  load_sfx_SHOT_MACHINE_GUN_SINGLE:
04BC8E 21 44 BF 04 0458*  	ld hl,FSHOT_MACHINE_GUN_SINGLE
04BC92 22 3A B5 04 0459*  	ld (cur_filename),hl
04BC96 11 C5 C2 04 0460*  	ld de,filedata
04BC9A 01 00 00 01 0461*  	ld bc,65536
04BC9E 3E 01       0462*  	ld a,mos_load
04BCA0 5B CF       0463*  	RST.LIL 08h
04BCA2 21 1A 30 00 0464*  	ld hl,BUF_SHOT_MACHINE_GUN_SINGLE
04BCA6 DD 21 31 22 0465*  	ld ix,8753
       00          
04BCAB CD 0E B8 04 0466*  	call vdu_load_sfx
04BCAF C9          0467*  	ret
04BCB0             0468*  
04BCB0             0469*  load_sfx_SHOT_PISTOL:
04BCB0 21 64 BF 04 0470*  	ld hl,FSHOT_PISTOL
04BCB4 22 3A B5 04 0471*  	ld (cur_filename),hl
04BCB8 11 C5 C2 04 0472*  	ld de,filedata
04BCBC 01 00 00 01 0473*  	ld bc,65536
04BCC0 3E 01       0474*  	ld a,mos_load
04BCC2 5B CF       0475*  	RST.LIL 08h
04BCC4 21 1B 30 00 0476*  	ld hl,BUF_SHOT_PISTOL
04BCC8 DD 21 AC 20 0477*  	ld ix,8364
       00          
04BCCD CD 0E B8 04 0478*  	call vdu_load_sfx
04BCD1 C9          0479*  	ret
04BCD2             0480*  
04BCD2             0481*  load_sfx_SPION:
04BCD2 21 78 BF 04 0482*  	ld hl,FSPION
04BCD6 22 3A B5 04 0483*  	ld (cur_filename),hl
04BCDA 11 C5 C2 04 0484*  	ld de,filedata
04BCDE 01 00 00 01 0485*  	ld bc,65536
04BCE2 3E 01       0486*  	ld a,mos_load
04BCE4 5B CF       0487*  	RST.LIL 08h
04BCE6 21 1C 30 00 0488*  	ld hl,BUF_SPION
04BCEA DD 21 68 30 0489*  	ld ix,12392
       00          
04BCEF CD 0E B8 04 0490*  	call vdu_load_sfx
04BCF3 C9          0491*  	ret
04BCF4             0492*  
04BCF4             0493*  load_sfx_UGH:
04BCF4 21 86 BF 04 0494*  	ld hl,FUGH
04BCF8 22 3A B5 04 0495*  	ld (cur_filename),hl
04BCFC 11 C5 C2 04 0496*  	ld de,filedata
04BD00 01 00 00 01 0497*  	ld bc,65536
04BD04 3E 01       0498*  	ld a,mos_load
04BD06 5B CF       0499*  	RST.LIL 08h
04BD08 21 1D 30 00 0500*  	ld hl,BUF_UGH
04BD0C DD 21 BF 16 0501*  	ld ix,5823
       00          
04BD11 CD 0E B8 04 0502*  	call vdu_load_sfx
04BD15 C9          0503*  	ret
04BD16             0504*  
04BD16             0505*  load_sfx_WILHELM:
04BD16 21 92 BF 04 0506*  	ld hl,FWILHELM
04BD1A 22 3A B5 04 0507*  	ld (cur_filename),hl
04BD1E 11 C5 C2 04 0508*  	ld de,filedata
04BD22 01 00 00 01 0509*  	ld bc,65536
04BD26 3E 01       0510*  	ld a,mos_load
04BD28 5B CF       0511*  	RST.LIL 08h
04BD2A 21 1E 30 00 0512*  	ld hl,BUF_WILHELM
04BD2E DD 21 A7 56 0513*  	ld ix,22183
       00          
04BD33 CD 0E B8 04 0514*  	call vdu_load_sfx
04BD37 C9          0515*  	ret
04BD38             0516*  
04BD38             0517*  load_sfx_WOOF:
04BD38 21 A2 BF 04 0518*  	ld hl,FWOOF
04BD3C 22 3A B5 04 0519*  	ld (cur_filename),hl
04BD40 11 C5 C2 04 0520*  	ld de,filedata
04BD44 01 00 00 01 0521*  	ld bc,65536
04BD48 3E 01       0522*  	ld a,mos_load
04BD4A 5B CF       0523*  	RST.LIL 08h
04BD4C 21 1F 30 00 0524*  	ld hl,BUF_WOOF
04BD50 DD 21 ED 24 0525*  	ld ix,9453
       00          
04BD55 CD 0E B8 04 0526*  	call vdu_load_sfx
04BD59 C9          0527*  	ret
04BD5A             0528*  
04BD5A             0529*  ; File name lookups:
04BD5A 73 66 78 2F 0530*  FACHTUNG: db "sfx/ACHTUNG.raw",0
       41 43 48 54 
       55 4E 47 2E 
       72 61 77 00 
04BD6A 73 66 78 2F 0531*  FACHTUNG2: db "sfx/ACHTUNG2.raw",0
       41 43 48 54 
       55 4E 47 32 
       2E 72 61 77 
       00          
04BD7B 73 66 78 2F 0532*  FAHH: db "sfx/AHH.raw",0
       41 48 48 2E 
       72 61 77 00 
04BD87 73 66 78 2F 0533*  FAUF_WEIDERSHEN: db "sfx/AUF_WEIDERSHEN.raw",0
       41 55 46 5F 
       57 45 49 44 
       45 52 53 48 
       45 4E 2E 72 
       61 77 00    
04BD9E 73 66 78 2F 0534*  FAUGH: db "sfx/AUGH.raw",0
       41 55 47 48 
       2E 72 61 77 
       00          
04BDAB 73 66 78 2F 0535*  FAYEE: db "sfx/AYEE.raw",0
       41 59 45 45 
       2E 72 61 77 
       00          
04BDB8 73 66 78 2F 0536*  FAYEE_HIGH: db "sfx/AYEE_HIGH.raw",0
       41 59 45 45 
       5F 48 49 47 
       48 2E 72 61 
       77 00       
04BDCA 73 66 78 2F 0537*  FBANG2: db "sfx/BANG2.raw",0
       42 41 4E 47 
       32 2E 72 61 
       77 00       
04BDD8 73 66 78 2F 0538*  FDOG_WOOF: db "sfx/DOG_WOOF.raw",0
       44 4F 47 5F 
       57 4F 4F 46 
       2E 72 61 77 
       00          
04BDE9 73 66 78 2F 0539*  FDOG_YELP: db "sfx/DOG_YELP.raw",0
       44 4F 47 5F 
       59 45 4C 50 
       2E 72 61 77 
       00          
04BDFA 73 66 78 2F 0540*  FDOOR_SHUT: db "sfx/DOOR_SHUT.raw",0
       44 4F 4F 52 
       5F 53 48 55 
       54 2E 72 61 
       77 00       
04BE0C 73 66 78 2F 0541*  FENEMY_GATLING: db "sfx/ENEMY_GATLING.raw",0
       45 4E 45 4D 
       59 5F 47 41 
       54 4C 49 4E 
       47 2E 72 61 
       77 00       
04BE22 73 66 78 2F 0542*  FEVA: db "sfx/EVA.raw",0
       45 56 41 2E 
       72 61 77 00 
04BE2E 73 66 78 2F 0543*  FEXPLODE: db "sfx/EXPLODE.raw",0
       45 58 50 4C 
       4F 44 45 2E 
       72 61 77 00 
04BE3E 73 66 78 2F 0544*  FGIB: db "sfx/GIB.raw",0
       47 49 42 2E 
       72 61 77 00 
04BE4A 73 66 78 2F 0545*  FGOT_TREASURE: db "sfx/GOT_TREASURE.raw",0
       47 4F 54 5F 
       54 52 45 41 
       53 55 52 45 
       2E 72 61 77 
       00          
04BE5F 73 66 78 2F 0546*  FGUARD_SHOT_PISTOL: db "sfx/GUARD_SHOT_PISTOL.raw",0
       47 55 41 52 
       44 5F 53 48 
       4F 54 5F 50 
       49 53 54 4F 
       4C 2E 72 61 
       77 00       
04BE79 73 66 78 2F 0547*  FGUTEN_TAG: db "sfx/GUTEN_TAG.raw",0
       47 55 54 45 
       4E 5F 54 41 
       47 2E 72 61 
       77 00       
04BE8B 73 66 78 2F 0548*  FLOCKED_DOOR: db "sfx/LOCKED_DOOR.raw",0
       4C 4F 43 4B 
       45 44 5F 44 
       4F 4F 52 2E 
       72 61 77 00 
04BE9F 73 66 78 2F 0549*  FMEIN_LEBEN: db "sfx/MEIN_LEBEN.raw",0
       4D 45 49 4E 
       5F 4C 45 42 
       45 4E 2E 72 
       61 77 00    
04BEB2 73 66 78 2F 0550*  FMUTTI: db "sfx/MUTTI.raw",0
       4D 55 54 54 
       49 2E 72 61 
       77 00       
04BEC0 73 66 78 2F 0551*  FSCHUSSTAFFEL: db "sfx/SCHUSSTAFFEL.raw",0
       53 43 48 55 
       53 53 54 41 
       46 46 45 4C 
       2E 72 61 77 
       00          
04BED5 73 66 78 2F 0552*  FSHOT_GATLING_BURST: db "sfx/SHOT_GATLING_BURST.raw",0
       53 48 4F 54 
       5F 47 41 54 
       4C 49 4E 47 
       5F 42 55 52 
       53 54 2E 72 
       61 77 00    
04BEF0 73 66 78 2F 0553*  FSHOT_GATLING_SINGLE: db "sfx/SHOT_GATLING_SINGLE.raw",0
       53 48 4F 54 
       5F 47 41 54 
       4C 49 4E 47 
       5F 53 49 4E 
       47 4C 45 2E 
       72 61 77 00 
04BF0C 73 66 78 2F 0554*  FSHOT_MACHINE_GUN: db "sfx/SHOT_MACHINE_GUN.raw",0
       53 48 4F 54 
       5F 4D 41 43 
       48 49 4E 45 
       5F 47 55 4E 
       2E 72 61 77 
       00          
04BF25 73 66 78 2F 0555*  FSHOT_MACHINE_GUN_BURST: db "sfx/SHOT_MACHINE_GUN_BURST.raw",0
       53 48 4F 54 
       5F 4D 41 43 
       48 49 4E 45 
       5F 47 55 4E 
       5F 42 55 52 
       53 54 2E 72 
       61 77 00    
04BF44 73 66 78 2F 0556*  FSHOT_MACHINE_GUN_SINGLE: db "sfx/SHOT_MACHINE_GUN_SINGLE.raw",0
       53 48 4F 54 
       5F 4D 41 43 
       48 49 4E 45 
       5F 47 55 4E 
       5F 53 49 4E 
       47 4C 45 2E 
       72 61 77 00 
04BF64 73 66 78 2F 0557*  FSHOT_PISTOL: db "sfx/SHOT_PISTOL.raw",0
       53 48 4F 54 
       5F 50 49 53 
       54 4F 4C 2E 
       72 61 77 00 
04BF78 73 66 78 2F 0558*  FSPION: db "sfx/SPION.raw",0
       53 50 49 4F 
       4E 2E 72 61 
       77 00       
04BF86 73 66 78 2F 0559*  FUGH: db "sfx/UGH.raw",0
       55 47 48 2E 
       72 61 77 00 
04BF92 73 66 78 2F 0560*  FWILHELM: db "sfx/WILHELM.raw",0
       57 49 4C 48 
       45 4C 4D 2E 
       72 61 77 00 
04BFA2 73 66 78 2F 0561*  FWOOF: db "sfx/WOOF.raw",0
       57 4F 4F 46 
       2E 72 61 77 
       00          
04BFAF             0038   	include "src/asm/timer.asm"
04BFAF             0001*  ; Table 32. Timer Control Registers
04BFAF             0002*  ; this constant is the base address of the timer control registers
04BFAF             0003*  ; each timer takes three bytes:
04BFAF             0004*  ;   0: control register
04BFAF             0005*  ;   1: low byte of timer reset value
04BFAF             0006*  ;   2: high byte of timer reset value
04BFAF             0007*  ; note that the value is only 8-bits, so we use in0/out0 i/o calls,
04BFAF             0008*  ; which correctly force the high and upper bytes of the address bus to zero
04BFAF             0009*  TMR_CTL:     equ 80h
04BFAF             0010*  
04BFAF             0011*  ; Timer Control Register Bit Definitions
04BFAF             0012*  PRT_IRQ_0:    equ %00000000 ; The timer does not reach its end-of-count value.
04BFAF             0013*                              ; This bit is reset to 0 every time the TMRx_CTL register is read.
04BFAF             0014*  PRT_IRQ_1:    equ %10000000 ; The timer reaches its end-of-count value. If IRQ_EN is set to 1,
04BFAF             0015*                              ; an interrupt signal is sent to the CPU. This bit remains 1 until
04BFAF             0016*                              ; the TMRx_CTL register is read.
04BFAF             0017*  
04BFAF             0018*  IRQ_EN_0:     equ %00000000 ; Timer interrupt requests are disabled.
04BFAF             0019*  IRQ_EN_1:     equ %01000000 ; Timer interrupt requests are enabled.
04BFAF             0020*  
04BFAF             0021*  PRT_MODE_0:   equ %00000000 ; The timer operates in SINGLE PASS mode. PRT_EN (bit 0) is reset to
04BFAF             0022*                              ;  0, and counting stops when the end-of-count value is reached.
04BFAF             0023*  PRT_MODE_1:   equ %00010000 ; The timer operates in CONTINUOUS mode. The timer reload value is
04BFAF             0024*                              ; written to the counter when the end-of-count value is reached.
04BFAF             0025*  
04BFAF             0026*  ; CLK_DIV is a 2-bit mask that sets the timer input source clock divider
04BFAF             0027*  CLK_DIV_256:  equ %00001100 ;
04BFAF             0028*  CLK_DIV_64:   equ %00001000 ;
04BFAF             0029*  CLK_DIV_16:   equ %00000100 ;
04BFAF             0030*  CLK_DIV_4:    equ %00000000 ;
04BFAF             0031*  
04BFAF             0032*  RST_EN_0:     equ %00000000 ; The reload and restart function is disabled.
04BFAF             0033*  RST_EN_1:     equ %00000010 ; The reload and restart function is enabled.
04BFAF             0034*                              ; When a 1 is written to this bit, the values in the reload registers
04BFAF             0035*                              ;  are loaded into the downcounter when the timer restarts. The
04BFAF             0036*                              ; programmer must ensure that this bit is set to 1 each time
04BFAF             0037*                              ; SINGLE-PASS mode is used.
04BFAF             0038*  
04BFAF             0039*  ; disable/enable the programmable reload timer
04BFAF             0040*  PRT_EN_0:     equ %00000000 ;
04BFAF             0041*  PRT_EN_1:     equ %00000001 ;
04BFAF             0042*  
04BFAF             0043*  ; Table 37. Timer Input Source Select Register
04BFAF             0044*  ; Each of the 4 timers are allocated two bits of the 8-bit register
04BFAF             0045*  ; in little-endian order, with TMR0 using bits 0 and 1, TMR1 using bits 2 and 3, etc.
04BFAF             0046*  ;   00: System clock / CLK_DIV
04BFAF             0047*  ;   01: RTC / CLK_DIV
04BFAF             0048*  ;   NOTE: these are the values given in the manual, but it may be a typo
04BFAF             0049*  ;   10: GPIO port B pin 1.
04BFAF             0050*  ;   11: GPIO port B pin 1.
04BFAF             0051*  TMR_ISS:   equ 92h ; register address
04BFAF             0052*  
04BFAF             0053*  ; Table 51. Real-Time Clock Control Register
04BFAF             0054*  RTC_CTRL: equ EDh ; register address
04BFAF             0055*  
04BFAF             0056*  ; alarm interrupt disable/enable
04BFAF             0057*  RTC_ALARM_0:    equ %00000000
04BFAF             0058*  RTC_ALARM_1:    equ %10000000
04BFAF             0059*  
04BFAF             0060*  ; interrupt on alarm disable/enable
04BFAF             0061*  RTC_INT_ENT_0:  equ %00000000
04BFAF             0062*  RTC_INT_ENT_1:  equ %01000000
04BFAF             0063*  
04BFAF             0064*  RTC_BCD_EN_0:   equ %00000000   ; RTC count and alarm registers are binary
04BFAF             0065*  RTC_BCD_EN_1:   equ %00100000   ; RTC count and alarm registers are BCD
04BFAF             0066*  
04BFAF             0067*  RTC_CLK_SEL_0:  equ %00000000   ; RTC clock source is crystal oscillator output (32768 Hz).
04BFAF             0068*                                  ; On-chip 32768 Hz oscillator is enabled.
04BFAF             0069*  RTC_CLK_SEL_1:  equ %00010000   ; RTC clock source is power line frequency input as set by FREQ_SEL.
04BFAF             0070*                                  ; On-chip 32768 Hz oscillator is disabled.
04BFAF             0071*  
04BFAF             0072*  RTC_FREQ_SEL_0: equ %00000000   ; 60 Hz power line frequency.
04BFAF             0073*  RTC_FREQ_SEL_1: equ %00001000   ; 50 Hz power line frequency.
04BFAF             0074*  
04BFAF             0075*  RTC_SLP_WAKE_0: equ %00000000   ; RTC does not generate a sleep-mode recovery reset.
04BFAF             0076*  RTC_SLP_WAKE_1: equ %00000010   ; RTC generates a sleep-mode recovery reset.
04BFAF             0077*  
04BFAF             0078*  RTC_UNLOCK_0:   equ %00000000   ; RTC count registers are locked to prevent Write access.
04BFAF             0079*                                  ; RTC counter is enabled.
04BFAF             0080*  RTC_UNLOCK_1:   equ %00000001   ; RTC count registers are unlocked to allow Write access.
04BFAF             0081*                                  ; RTC counter is disabled.
04BFAF             0082*  
04BFAF             0083*  ; returns 0 if running on hardware, 1 if running on emulator
04BFAF             0084*  prt_calibrate:
04BFAF             0085*  ; set a MOS timer
04BFAF 21 78 00 00 0086*      ld hl,120*1 ; 1 second
04BFB3 FD 21 BD C0 0087*      ld iy,timer_test
       04          
04BFB8 CD 9B C0 04 0088*      call timer_set
04BFBC             0089*  ; set a PRT timer
04BFBC 21 E8 03 00 0090*      ld hl,1000
04BFC0 22 3F C0 04 0091*      ld (prt_reload),hl
04BFC4 CD 4A C0 04 0092*      call prt_set
04BFC8             0093*  @loop:
04BFC8             0094*  ; check time remaining on MOS timer
04BFC8 CD A9 C0 04 0095*      call timer_get
04BFCC CA D6 BF 04 0096*      jp z,@done ; time expired, so quit
04BFD0 FA D6 BF 04 0097*      jp m,@done ; time past expiration (negative), so quit
04BFD4 18 F2       0098*      jr @loop
04BFD6             0099*  @done:
04BFD6 01 00 12 00 0100*      ld bc,0x1200 ; default value for running on hardware
04BFDA ED 43 3F C0 0101*      ld (prt_reload),bc
       04          
04BFDF ED 5B 90 C0 0102*      ld de,(prt_irq_counter)
       04          
04BFE4 21 66 0F 00 0103*      ld hl,3942 ; halfway between 4608 for real hardware and 3276 for emulator
04BFE8 AF          0104*      xor a; clear carry, zero is default value for running on hardware
04BFE9 ED 52       0105*      sbc hl,de
04BFEB 21 29 C0 04 0106*      ld hl,on_hardware ; default message for running on hardware
04BFEF F8          0107*      ret m ; negative result means we're on hardware
04BFF0 3C          0108*      inc a ; we're on emulator
04BFF1 01 CC 0C 00 0109*      ld bc,0x0CCC
04BFF5 ED 43 3F C0 0110*      ld (prt_reload),bc
       04          
04BFFA 21 13 C0 04 0111*      ld hl,on_emulator
04BFFE C9          0112*      ret
04BFFF             0113*  
04BFFF 43 61 6C 69 0114*  calibrating_timer: defb "Calibrating timer\r\n",0
       62 72 61 74 
       69 6E 67 20 
       74 69 6D 65 
       72 0D 0A 00 
04C013 52 75 6E 6E 0115*  on_emulator: defb "Running on emulator\r\n",0
       69 6E 67 20 
       6F 6E 20 65 
       6D 75 6C 61 
       74 6F 72 0D 
       0A 00       
04C029 52 75 6E 6E 0116*  on_hardware: defb "Running on hardware\r\n",0
       69 6E 67 20 
       6F 6E 20 68 
       61 72 64 77 
       61 72 65 0D 
       0A 00       
04C03F             0117*  
04C03F             0118*  ; 3276d = 1,000 milliseconds on emulator
04C03F             0119*  ; 1200h = 1,000 milliseconds on hardware
04C03F 00 00 00    0120*  prt_reload: dl 0x000000
04C042             0121*  prt_reload_str: ds 8
04C04A             0122*  
04C04A             0123*  ; set PRT timer
04C04A             0124*  prt_set:
04C04A             0125*  ; set PRT reload value
04C04A 2A 3F C0 04 0126*      ld hl, (prt_reload)
04C04E ED 29 84    0127*      out0 ($84), l
04C051 ED 21 85    0128*  	out0 ($85), h
04C054             0129*  ; enable PRT, with interrupt and CONTINUOUS mode, clock divider 4
04C054 3E 53       0130*      ld a,PRT_IRQ_0 | IRQ_EN_1 | PRT_MODE_1 | CLK_DIV_4 | RST_EN_1 | PRT_EN_1 ; 0x53
04C056 ED 39 83    0131*  	out0 ($83), a
04C059 C9          0132*      ret
04C05A             0133*  
04C05A             0134*  ; ===============================================
04C05A             0135*  ; PRT Timer Interrupt Handling
04C05A             0136*  ; https://github.com/tomm/agon-cpu-emulator/blob/main/sdcard/regression_suite/timerirq.asm
04C05A             0137*  ; -----------------------------------------------
04C05A             0138*  prt_irq_init:
04C05A             0139*      ; set up interrupt vector table 2
04C05A 21 00 00 00 0140*  	ld hl, 0
04C05E 3A 0C 01 00 0141*  	ld a,($10c)
04C062 6F          0142*  	ld l, a
04C063 3A 0D 01 00 0143*  	ld a,($10d)
04C067 67          0144*  	ld h, a
04C068             0145*  
04C068             0146*  	; skip over CALL ($c3)
04C068 23          0147*  	inc hl
04C069             0148*  	; load address of jump into vector table 2 (in ram)
04C069 ED 27       0149*  	ld hl,(hl)
04C06B             0150*  
04C06B             0151*  	; write CALL prt_irq_handler to vector table 2
04C06B 3E C3       0152*  	ld a, $c3
04C06D 77          0153*  	ld (hl), a
04C06E 23          0154*  	inc hl
04C06F 11 76 C0 04 0155*  	ld de, prt_irq_handler
04C073 ED 1F       0156*  	ld (hl), de
04C075             0157*  
04C075 C9          0158*      ret
04C076             0159*  
04C076             0160*  prt_irq_handler:
04C076 F3          0161*  	di
04C077 F5          0162*  	push af
04C078 E5          0163*      push hl
04C079 ED 38 83    0164*  	in0 a,($83)
04C07C 32 8F C0 04 0165*  	ld (prt_got_irq),a
04C080 2A 90 C0 04 0166*  	ld hl,(prt_irq_counter)
04C084 23          0167*  	inc hl
04C085 22 90 C0 04 0168*  	ld (prt_irq_counter),hl
04C089 E1          0169*      pop hl
04C08A F1          0170*  	pop af
04C08B FB          0171*  	ei
04C08C 5B ED 4D    0172*  	reti.l
04C08F             0173*  
04C08F             0174*  prt_got_irq:
04C08F 00          0175*  	.db 0
04C090             0176*  prt_irq_counter:
04C090 00 00 00    0177*  	.dl 0
04C093             0178*  prt_irq_counter_str: ds 8
04C09B             0179*  
04C09B             0180*  ; ===============================================
04C09B             0181*  ; Timer functions
04C09B             0182*  ; -----------------------------------------------
04C09B             0183*  ; set a countdown timer
04C09B             0184*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time, iy+3 = pointer to 3-byte buffer holding timer set value
04C09B             0185*  ; returns: hl = current time
04C09B             0186*  timer_set:
04C09B FD 2F 03    0187*      ld (iy+3),hl            ; set time remaining
04C09E             0188*      MOSCALL mos_sysvars     ; ix points to syvars table
04C09E 3E 08       0001*M 			LD	A, function
04C0A0 5B CF       0002*M 			RST.LIL	08h
04C0A2 DD 27 00    0189*      ld hl,(ix+sysvar_time)  ; get current time
04C0A5 FD 2F 00    0190*      ld (iy+0),hl            ; set start time
04C0A8 C9          0191*      ret
04C0A9             0192*  
04C0A9             0193*  ; gets time remaining on a countdown timer
04C0A9             0194*  ; inputs: iy = pointer to 3-byte buffer holding start time, iy+3 = pointer to 3-byte buffer holding timer set value
04C0A9             0195*  ; returns: hl pos = time remaining in 1/120ths of a second, hl neg = time past expiration
04C0A9             0196*  ;          sign flags: pos = time not expired, zero or neg = time expired
04C0A9             0197*  timer_get:
04C0A9             0198*      MOSCALL mos_sysvars     ; ix points to syvars table
04C0A9 3E 08       0001*M 			LD	A, function
04C0AB 5B CF       0002*M 			RST.LIL	08h
04C0AD DD 17 00    0199*      ld de,(ix+sysvar_time)  ; get current time
04C0B0 FD 27 00    0200*      ld hl,(iy+0)            ; get start time
04C0B3 AF          0201*      xor a                   ; clear carry
04C0B4 ED 52       0202*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
04C0B6 FD 17 03    0203*      ld de,(iy+3)            ; get timer set value
04C0B9 AF          0204*      xor a                   ; clear carry
04C0BA ED 5A       0205*      adc hl,de               ; hl = time remaining
04C0BC             0206*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
04C0BC C9          0207*      ret
04C0BD             0208*  
04C0BD             0209*  timer_test: ds 6 ; example of a buffer to hold timer data
04C0C3             0210*  
04C0C3             0211*  
04C0C3             0212*  ; ------------------
04C0C3             0213*  ; delay routine
04C0C3             0214*  ; Author: Richard Turrnidge
04C0C3             0215*  ; https://github.com/richardturnnidge/lessons/blob/main/slowdown.asm
04C0C3             0216*  ; routine waits a fixed time, then returns
04C0C3             0217*  ; arrive with A =  the delay byte. One bit to be set only.
04C0C3             0218*  ; eg. ld A, 00000100b
04C0C3             0219*  
04C0C3             0220*  multiPurposeDelay:
04C0C3 F5          0221*      push af
04C0C4 C5          0222*      push bc
04C0C5 DD E5       0223*      push ix
04C0C7 47          0224*      ld b, a
04C0C8 3E 08       0225*      ld a,$08
04C0CA 5B CF       0226*      RST.LIL	08h                 ; get IX pointer to sysvars
04C0CC             0227*  
04C0CC             0228*  waitLoop:
04C0CC             0229*  
04C0CC DD 7E 00    0230*      ld a, (ix + 0)              ; ix+0h is lowest byte of clock timer
04C0CF             0231*  
04C0CF             0232*                                  ;   we check if bit set is same as last time we checked.
04C0CF             0233*                                  ;   bit 0 - don't use
04C0CF             0234*                                  ;   bit 1 - changes 64 times per second
04C0CF             0235*                                  ;   bit 2 - changes 32 times per second
04C0CF             0236*                                  ;   bit 3 - changes 16 times per second
04C0CF             0237*  
04C0CF             0238*                                  ;   bit 4 - changes 8 times per second
04C0CF             0239*                                  ;   bit 5 - changes 4 times per second
04C0CF             0240*                                  ;   bit 6 - changes 2 times per second
04C0CF             0241*                                  ;   bit 7 - changes 1 times per second
04C0CF A0          0242*      and b
04C0D0 4F          0243*      ld c,a
04C0D1 3A E2 C0 04 0244*      ld a, (oldTimeStamp)
04C0D5 B9          0245*      cp c                        ; is A same as last value?
04C0D6 28 F4       0246*      jr z, waitLoop              ; loop here if it is
04C0D8 79          0247*      ld a, c
04C0D9 32 E2 C0 04 0248*      ld (oldTimeStamp), a        ; set new value
04C0DD             0249*  
04C0DD DD E1       0250*      pop ix
04C0DF C1          0251*      pop bc
04C0E0 F1          0252*      pop af
04C0E1 C9          0253*      ret
04C0E2             0254*  
04C0E2 00          0255*  oldTimeStamp:   .db 00h
04C0E3             0039   
04C0E3             0040   
04C0E3             0041   start:
04C0E3 F5          0042       push af
04C0E4 C5          0043       push bc
04C0E5 D5          0044       push de
04C0E6 DD E5       0045       push ix
04C0E8 FD E5       0046       push iy
04C0EA             0047   
04C0EA             0048   ; ###############################################
04C0EA             0049   ; ez80asmLinker.py loader code goes here if used.
04C0EA             0050   ; ###############################################
04C0EA             0051   
04C0EA             0052   ; ###############################################
04C0EA CD 20 C1 04 0053   	call init ; Initialization code
04C0EE CD E6 C1 04 0054       call main ; Call the main function
04C0F2             0055   ; ###############################################
04C0F2             0056   
04C0F2             0057   exit:
04C0F2             0058   
04C0F2 FD E1       0059       pop iy                              ; Pop all registers back from the stack
04C0F4 DD E1       0060       pop ix
04C0F6 D1          0061       pop de
04C0F7 C1          0062       pop bc
04C0F8 F1          0063       pop af
04C0F9 21 00 00 00 0064       ld hl,0                             ; Load the MOS API return code (0) for no errors.
04C0FD             0065   
04C0FD C9          0066       ret                                 ; Return MOS
04C0FE             0067   
04C0FE 57 65 6C 63 0068   hello_world: defb "Welcome to Agon Wolf3D",0
       6F 6D 65 20 
       74 6F 20 41 
       67 6F 6E 20 
       57 6F 6C 66 
       33 44 00    
04C115             0069   ; loading_panels: defb "Loading panels",0
04C115             0070   ; loading_sprites: defb "Loading sprites",0
04C115             0071   ; loading_dws: defb "Loading distance walls",0
04C115 4C 6F 61 64 0072   loading_ui: defb "Loading UI",0
       69 6E 67 20 
       55 49 00    
04C120             0073   
04C120             0074   init:
04C120             0075   ; set the cursor off
04C120 CD 61 A8 04 0076   	call cursor_off
04C124             0077   
04C124             0078   ; initialize PRT interrupt
04C124 21 FF BF 04 0079   	ld hl,calibrating_timer
04C128 CD E6 AC 04 0080   	call printString
04C12C CD 5A C0 04 0081   	call prt_irq_init
04C130 CD AF BF 04 0082   	call prt_calibrate
04C134 CD E6 AC 04 0083   	call printString
04C138             0084   
04C138             0085   ; print loading ui message
04C138 21 15 C1 04 0086   	ld hl,loading_ui
04C13C CD E6 AC 04 0087   	call printString
04C140             0088   
04C140             0089   ; load fonts
04C140 CD C2 7C 04 0090   	call load_font_itc_honda
04C144 CD A5 8D 04 0091   	call load_font_retro_computer
04C148             0092   
04C148             0093   ; load UI images
04C148 CD 2E 96 04 0094   	call load_ui_images
04C14C CD FC 97 04 0095   	call load_ui_images_bj
04C150             0096   
04C150             0097   ; set up the display
04C150 3E 88       0098       ld a,8+128 ; 320x240x64 double-buffered
04C152 CD A2 A6 04 0099       call vdu_set_screen_mode
04C156 AF          0100       xor a
04C157 CD D1 A7 04 0101       call vdu_set_scaling
04C15B             0102   
04C15B             0103   ; set text background color
04C15B 3E 84       0104   	ld a,4 + 128
04C15D CD 2E A6 04 0105   	call vdu_colour_text
04C161             0106   
04C161             0107   ; set gfx bg color
04C161 AF          0108   	xor a ; plotting mode 0
04C162 0E 04       0109   	ld c,4 ; dark blue
04C164 CD 56 A6 04 0110   	call vdu_gcol_bg
04C168 CD 29 A6 04 0111   	call vdu_clg
04C16C             0112   
04C16C             0113   ; set the cursor off again since we changed screen modes
04C16C CD 61 A8 04 0114   	call cursor_off
04C170             0115   
04C170             0116   ; VDU 28, left, bottom, right, top: Set text viewport **
04C170             0117   ; MIND THE LITTLE-ENDIANESS
04C170             0118   ; inputs: c=left,b=bottom,e=right,d=top
04C170 0E 00       0119   	ld c,0 ; left
04C172 16 14       0120   	ld d,20 ; top
04C174 1E 27       0121   	ld e,39 ; right
04C176 06 1D       0122   	ld b,29; bottom
04C178 CD 17 A7 04 0123   	call vdu_set_txt_viewport
04C17C             0124   
04C17C             0125   ; initialize image load routine
04C17C CD 46 B5 04 0126   	call img_load_init
04C180             0127   
04C180             0128   ; load panels
04C180 01 13 01 00 0129   	ld bc,cube_num_panels
04C184 21 45 00 04 0130   	ld hl,cube_buffer_id_lut
04C188 22 40 B5 04 0131   	ld (cur_buffer_id_lut),hl
04C18C 21 7E 03 04 0132   	ld hl,cube_load_panels_table
04C190 22 43 B5 04 0133   	ld (cur_load_jump_table),hl
04C194 CD 7B B5 04 0134   	call img_load_main
04C198             0135   
04C198             0136   ; load sprites
04C198 01 5A 00 00 0137   	ld bc,sprite_num_panels
04C19C 21 51 49 04 0138   	ld hl,sprite_buffer_id_lut
04C1A0 22 40 B5 04 0139   	ld (cur_buffer_id_lut),hl
04C1A4 21 5F 4A 04 0140   	ld hl,sprite_load_panels_table
04C1A8 22 43 B5 04 0141   	ld (cur_load_jump_table),hl
04C1AC CD 7B B5 04 0142   	call img_load_main
04C1B0             0143   
04C1B0             0144   ; load distance walls
04C1B0 01 09 00 00 0145   	ld bc,dws_num_panels
04C1B4 21 39 61 04 0146   	ld hl,dws_buffer_id_lut
04C1B8 22 40 B5 04 0147   	ld (cur_buffer_id_lut),hl
04C1BC 21 54 61 04 0148   	ld hl,dws_load_panels_table
04C1C0 22 43 B5 04 0149   	ld (cur_load_jump_table),hl
04C1C4 CD 7B B5 04 0150   	call img_load_main
04C1C8             0151   
04C1C8             0152   ; load sound effects
04C1C8 01 20 00 00 0153   	ld bc,SFX_num_buffers
04C1CC 21 1A B8 04 0154   	ld hl,SFX_buffer_id_lut
04C1D0 22 40 B5 04 0155   	ld (cur_buffer_id_lut),hl
04C1D4 21 BA B8 04 0156   	ld hl,SFX_load_routines_table
04C1D8 22 43 B5 04 0157   	ld (cur_load_jump_table),hl
04C1DC CD 85 B7 04 0158   	call sfx_load_main
04C1E0             0159   
04C1E0             0160   ; enable all the sound chanels
04C1E0 CD 4A AC 04 0161   	call vdu_enable_channels
04C1E4             0162   
04C1E4             0163   ; initialization done
04C1E4 C9          0164   	ret
04C1E5             0165   
04C1E5             0166   ; DEBUG: set up a simple countdown timer
04C1E5 01          0167   debug_timer: db 0x01
04C1E6             0168   
04C1E6             0169   main:
04C1E6             0170   ; set map variables and load initial map file
04C1E6 CD 58 64 04 0171   	call map_init
04C1EA             0172   
04C1EA             0173   ; initialize player position
04C1EA CD E7 B0 04 0174   	call player_init
04C1EE             0175   
04C1EE             0176   ; clear the screen
04C1EE CD 15 A6 04 0177   	call vdu_cls
04C1F2 CD 29 A6 04 0178   	call vdu_clg
04C1F6 CD E4 A7 04 0179   	call vdu_flip
04C1FA CD 15 A6 04 0180   	call vdu_cls
04C1FE CD 29 A6 04 0181   	call vdu_clg
04C202 CD E4 A7 04 0182   	call vdu_flip
04C206             0183   
04C206             0184   ; render initial scene
04C206 ED 5B 7A B0 0185   	ld de,(cur_x) ; implicitly loads cur_y
       04          
04C20B CD C7 63 04 0186   	call get_cell_from_coords ; ix points to cell defs/status, a is target cell current obj_id, bc is target cell_id
04C20F AF          0187   	xor a ; north orientation
04C210 32 79 B0 04 0188   	ld (orientation),a
04C214 CD 5B 66 04 0189   	call render_scene
04C218 CD E4 A7 04 0190   	call vdu_flip
04C21C             0191   
04C21C             0192   main_loop:
04C21C             0193   ; ; DEBUG: decrement debug timer
04C21C             0194   ; 	ld iy,debug_timer
04C21C             0195   ; 	dec (iy)
04C21C             0196   ; 	jp nz,@not_zero
04C21C             0197   ; 	ld (iy),72
04C21C             0198   ; 	call sfx_play_got_treasure
04C21C             0199   ; @not_zero:
04C21C             0200   
04C21C             0201   ; move enemies
04C21C             0202   	; call move_enemies
04C21C CD 17 A5 04 0203   	call see_orientation
04C220             0204   ; get player input and update sprite position
04C220 CD 80 B3 04 0205   	call player_input ; ix points to cell defs/status, a is target cell current obj_id
04C224             0206   ; render the updated scene
04C224 CD 5B 66 04 0207   	call render_scene
04C228             0208   
04C228             0209   ; print prt interrupt counter
04C228 21 90 C0 04 0210   	ld hl,prt_irq_counter
04C22C 0E 01       0211       ld c,1 ; x
04C22E 06 08       0212       ld b,8 ; y
04C230 CD 52 A7 04 0213       call vdu_move_cursor
04C234 2A 90 C0 04 0214       ld hl,(prt_irq_counter)
04C238 11 93 C0 04 0215       ld de,prt_irq_counter_str
04C23C CD 4E AD 04 0216       call Num2String
04C240 21 93 C0 04 0217       ld hl,prt_irq_counter_str
04C244 CD E6 AC 04 0218       call printString
04C248             0219   ; reset prt interrupt counter
04C248 21 00 00 00 0220   	ld hl,0
04C24C 22 90 C0 04 0221   	ld (prt_irq_counter),hl
04C250             0222   
04C250             0223   ; flip the screen
04C250 CD E4 A7 04 0224   	call vdu_flip
04C254             0225   ; reset prt interrupt counter
04C254 21 00 00 00 0226   	ld hl,0
04C258 22 90 C0 04 0227   	ld (prt_irq_counter),hl
04C25C             0228   ; wait for the next VBLANK
04C25C CD 6F A8 04 0229   	call vdu_vblank
04C260             0230   
04C260             0231   ; check for escape key and quit if pressed
04C260             0232   	MOSCALL mos_getkbmap
04C260 3E 1E       0001M  			LD	A, function
04C262 5B CF       0002M  			RST.LIL	08h
04C264             0233   ; 113 Escape
04C264 DD CB 0E 46 0234       bit 0,(ix+14)
04C268 28 02       0235       jr z,@Escape
04C26A 18 02       0236   	jr main_end
04C26C             0237   @Escape:
04C26C             0238   
04C26C             0239   ; do it again, Sam
04C26C 18 AE       0240       jr main_loop
04C26E             0241   
04C26E             0242   main_end:
04C26E             0243   	; call do_outro
04C26E             0244   ; restore screen to something normalish
04C26E AF          0245   	xor a
04C26F CD A2 A6 04 0246   	call vdu_set_screen_mode
04C273 CD 53 A8 04 0247   	call cursor_on
04C277 C9          0248   	ret
04C278             0249   
04C278             0250   
04C278             0251   ; files.asm must go here so that filedata doesn't stomp on program data
04C278             0252   	include "src/asm/files.asm"
04C278             0001*  ; WARNING: this routine must be the last one loaded in the main program so that filedata doesn't stomp on any program code
04C278             0002*  ; inputs: hl = bufferId, ix = file size
04C278             0003*  vdu_load_buffer_from_file:
04C278             0004*  	; load buffer ids
04C278 22 B5 C2 04 0005*  		ld (@id0),hl
04C27C 22 BB C2 04 0006*  		ld (@id1),hl
04C280 22 C0 C2 04 0007*  		ld (@id2),hl
04C284             0008*  	; clean up bytes that got stomped on by the ID loads
04C284 3E 02       0009*  		ld a,2
04C286 32 B7 C2 04 0010*  		ld (@id0+2),a
04C28A 3E 17       0011*  		ld a,23
04C28C 32 BD C2 04 0012*  		ld (@id1+2),a
04C290 AF          0013*  		xor a
04C291 32 C2 C2 04 0014*  		ld (@id2+2),a
04C295             0015*  	; read size from ix
04C295 DD 7D       0016*  		ld a,ixl
04C297 32 C3 C2 04 0017*  		ld (@size),a
04C29B DD 7C       0018*  		ld a,ixh
04C29D 32 C4 C2 04 0019*  		ld (@size+1),a
04C2A1             0020*  	; get all the ducks in a row for the vdu call
04C2A1 01 13 00 00 0021*  		ld bc,filedata-@start
04C2A5 DD 09       0022*  		add ix,bc
04C2A7 DD 44       0023*  		ld b,ixh
04C2A9 DD 4D       0024*  		ld c,ixl
04C2AB 21 B2 C2 04 0025*  		ld hl,@start
04C2AF             0026*  	; push the button
04C2AF 5B DF       0027*  		rst.lil $18
04C2B1             0028*  	; back to caller
04C2B1 C9          0029*  		ret
04C2B2             0030*  ; vdp command string:
04C2B2 17 00 A0    0031*  @start: db 23,0,0xA0 ; Clear buffer
04C2B5 00 00       0032*  @id0:	dw 0x0000 ; bufferId
04C2B7 02          0033*  		db 2
04C2B8             0034*  	; select buffer VDU 23, 27, &20, bufferId;
04C2B8 17 1B 20    0035*  		db 23,27,0x20
04C2BB 00 00       0036*  @id1:	dw 0x0000 ; bufferId
04C2BD             0037*  	; Upload data :: VDU 23, 0 &A0, bufferId; 0, length; <buffer-data>
04C2BD 17 00 A0    0038*  		db 23,0,0xA0
04C2C0 00 00       0039*  @id2:	dw 0x0000 ; bufferId
04C2C2 00          0040*  		db 0
04C2C3             0041*  		; CAUTION: the size argument is a 16-bit value, so the max number of bytes we can load in one chunk is 64KiB!! This corresponds to an rgba2 image size of 320x204.
04C2C3 00 00       0042*  @size:	dw 0x0000 ; length of data in bytes
04C2C5             0043*  filedata: ; no need to allocate space here if this is the final include of the application
04C2C5             0044*  	; ds 65536 ; placeholder for file data	DEBUG
